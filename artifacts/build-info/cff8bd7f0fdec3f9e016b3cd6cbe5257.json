{"id":"cff8bd7f0fdec3f9e016b3cd6cbe5257","_format":"hh-sol-build-info-1","solcVersion":"0.8.20","solcLongVersion":"0.8.20+commit.a1b79de6","input":{"language":"Solidity","sources":{"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {ContextUpgradeable} from \"../utils/ContextUpgradeable.sol\";\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\n    /// @custom:storage-location erc7201:openzeppelin.storage.Ownable\n    struct OwnableStorage {\n        address _owner;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Ownable\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant OwnableStorageLocation = 0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300;\n\n    function _getOwnableStorage() private pure returns (OwnableStorage storage $) {\n        assembly {\n            $.slot := OwnableStorageLocation\n        }\n    }\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    function __Ownable_init(address initialOwner) internal onlyInitializing {\n        __Ownable_init_unchained(initialOwner);\n    }\n\n    function __Ownable_init_unchained(address initialOwner) internal onlyInitializing {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        OwnableStorage storage $ = _getOwnableStorage();\n        return $._owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        OwnableStorage storage $ = _getOwnableStorage();\n        address oldOwner = $._owner;\n        $._owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/Initializable.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n *\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n * reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n * case an upgrade adds a module that needs to be initialized.\n *\n * For example:\n *\n * [.hljs-theme-light.nopadding]\n * ```solidity\n * contract MyToken is ERC20Upgradeable {\n *     function initialize() initializer public {\n *         __ERC20_init(\"MyToken\", \"MTK\");\n *     }\n * }\n *\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n *     function initializeV2() reinitializer(2) public {\n *         __ERC20Permit_init(\"MyToken\");\n *     }\n * }\n * ```\n *\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n *\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n *\n * [CAUTION]\n * ====\n * Avoid leaving a contract uninitialized.\n *\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * /// @custom:oz-upgrades-unsafe-allow constructor\n * constructor() {\n *     _disableInitializers();\n * }\n * ```\n * ====\n */\nabstract contract Initializable {\n    /**\n     * @dev Storage of the initializable contract.\n     *\n     * It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n     * when using with upgradeable contracts.\n     *\n     * @custom:storage-location erc7201:openzeppelin.storage.Initializable\n     */\n    struct InitializableStorage {\n        /**\n         * @dev Indicates that the contract has been initialized.\n         */\n        uint64 _initialized;\n        /**\n         * @dev Indicates that the contract is in the process of being initialized.\n         */\n        bool _initializing;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Initializable\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant INITIALIZABLE_STORAGE = 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00;\n\n    /**\n     * @dev The contract is already initialized.\n     */\n    error InvalidInitialization();\n\n    /**\n     * @dev The contract is not initializing.\n     */\n    error NotInitializing();\n\n    /**\n     * @dev Triggered when the contract has been initialized or reinitialized.\n     */\n    event Initialized(uint64 version);\n\n    /**\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n     * `onlyInitializing` functions can be used to initialize parent contracts.\n     *\n     * Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n     * number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n     * production.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier initializer() {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        // Cache values to avoid duplicated sloads\n        bool isTopLevelCall = !$._initializing;\n        uint64 initialized = $._initialized;\n\n        // Allowed calls:\n        // - initialSetup: the contract is not in the initializing state and no previous version was\n        //                 initialized\n        // - construction: the contract is initialized at version 1 (no reininitialization) and the\n        //                 current contract is just being deployed\n        bool initialSetup = initialized == 0 && isTopLevelCall;\n        bool construction = initialized == 1 && address(this).code.length == 0;\n\n        if (!initialSetup && !construction) {\n            revert InvalidInitialization();\n        }\n        $._initialized = 1;\n        if (isTopLevelCall) {\n            $._initializing = true;\n        }\n        _;\n        if (isTopLevelCall) {\n            $._initializing = false;\n            emit Initialized(1);\n        }\n    }\n\n    /**\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n     * used to initialize parent contracts.\n     *\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\n     * are added through upgrades and that require initialization.\n     *\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\n     *\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n     * a contract, executing them in the right order is up to the developer or operator.\n     *\n     * WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier reinitializer(uint64 version) {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing || $._initialized >= version) {\n            revert InvalidInitialization();\n        }\n        $._initialized = version;\n        $._initializing = true;\n        _;\n        $._initializing = false;\n        emit Initialized(version);\n    }\n\n    /**\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\n     */\n    modifier onlyInitializing() {\n        _checkInitializing();\n        _;\n    }\n\n    /**\n     * @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}.\n     */\n    function _checkInitializing() internal view virtual {\n        if (!_isInitializing()) {\n            revert NotInitializing();\n        }\n    }\n\n    /**\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n     * through proxies.\n     *\n     * Emits an {Initialized} event the first time it is successfully executed.\n     */\n    function _disableInitializers() internal virtual {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing) {\n            revert InvalidInitialization();\n        }\n        if ($._initialized != type(uint64).max) {\n            $._initialized = type(uint64).max;\n            emit Initialized(type(uint64).max);\n        }\n    }\n\n    /**\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\n     */\n    function _getInitializedVersion() internal view returns (uint64) {\n        return _getInitializableStorage()._initialized;\n    }\n\n    /**\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\n     */\n    function _isInitializing() internal view returns (bool) {\n        return _getInitializableStorage()._initializing;\n    }\n\n    /**\n     * @dev Returns a pointer to the storage namespace.\n     */\n    // solhint-disable-next-line var-name-mixedcase\n    function _getInitializableStorage() private pure returns (InitializableStorage storage $) {\n        assembly {\n            $.slot := INITIALIZABLE_STORAGE\n        }\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport {IERC20Metadata} from \"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\";\nimport {ContextUpgradeable} from \"../../utils/ContextUpgradeable.sol\";\nimport {IERC20Errors} from \"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\";\nimport {Initializable} from \"../../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n */\nabstract contract ERC20Upgradeable is Initializable, ContextUpgradeable, IERC20, IERC20Metadata, IERC20Errors {\n    /// @custom:storage-location erc7201:openzeppelin.storage.ERC20\n    struct ERC20Storage {\n        mapping(address account => uint256) _balances;\n\n        mapping(address account => mapping(address spender => uint256)) _allowances;\n\n        uint256 _totalSupply;\n\n        string _name;\n        string _symbol;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.ERC20\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant ERC20StorageLocation = 0x52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace00;\n\n    function _getERC20Storage() private pure returns (ERC20Storage storage $) {\n        assembly {\n            $.slot := ERC20StorageLocation\n        }\n    }\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    function __ERC20_init(string memory name_, string memory symbol_) internal onlyInitializing {\n        __ERC20_init_unchained(name_, symbol_);\n    }\n\n    function __ERC20_init_unchained(string memory name_, string memory symbol_) internal onlyInitializing {\n        ERC20Storage storage $ = _getERC20Storage();\n        $._name = name_;\n        $._symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        ERC20Storage storage $ = _getERC20Storage();\n        return $._name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        ERC20Storage storage $ = _getERC20Storage();\n        return $._symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        ERC20Storage storage $ = _getERC20Storage();\n        return $._totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        ERC20Storage storage $ = _getERC20Storage();\n        return $._balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        ERC20Storage storage $ = _getERC20Storage();\n        return $._allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        ERC20Storage storage $ = _getERC20Storage();\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            $._totalSupply += value;\n        } else {\n            uint256 fromBalance = $._balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                $._balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                $._totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                $._balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     * ```\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        ERC20Storage storage $ = _getERC20Storage();\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        $._allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/ERC20Burnable.sol)\n\npragma solidity ^0.8.20;\n\nimport {ERC20Upgradeable} from \"../ERC20Upgradeable.sol\";\nimport {ContextUpgradeable} from \"../../../utils/ContextUpgradeable.sol\";\nimport {Initializable} from \"../../../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Extension of {ERC20} that allows token holders to destroy both their own\n * tokens and those that they have an allowance for, in a way that can be\n * recognized off-chain (via event analysis).\n */\nabstract contract ERC20BurnableUpgradeable is Initializable, ContextUpgradeable, ERC20Upgradeable {\n    function __ERC20Burnable_init() internal onlyInitializing {\n    }\n\n    function __ERC20Burnable_init_unchained() internal onlyInitializing {\n    }\n    /**\n     * @dev Destroys a `value` amount of tokens from the caller.\n     *\n     * See {ERC20-_burn}.\n     */\n    function burn(uint256 value) public virtual {\n        _burn(_msgSender(), value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, deducting from\n     * the caller's allowance.\n     *\n     * See {ERC20-_burn} and {ERC20-allowance}.\n     *\n     * Requirements:\n     *\n     * - the caller must have allowance for ``accounts``'s tokens of at least\n     * `value`.\n     */\n    function burnFrom(address account, uint256 value) public virtual {\n        _spendAllowance(account, _msgSender(), value);\n        _burn(account, value);\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20FlashMintUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/ERC20FlashMint.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC3156FlashBorrower} from \"@openzeppelin/contracts/interfaces/IERC3156FlashBorrower.sol\";\nimport {IERC3156FlashLender} from \"@openzeppelin/contracts/interfaces/IERC3156FlashLender.sol\";\nimport {ERC20Upgradeable} from \"../ERC20Upgradeable.sol\";\nimport {Initializable} from \"../../../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Implementation of the ERC3156 Flash loans extension, as defined in\n * https://eips.ethereum.org/EIPS/eip-3156[ERC-3156].\n *\n * Adds the {flashLoan} method, which provides flash loan support at the token\n * level. By default there is no fee, but this can be changed by overriding {flashFee}.\n *\n * NOTE: When this extension is used along with the {ERC20Capped} or {ERC20Votes} extensions,\n * {maxFlashLoan} will not correctly reflect the maximum that can be flash minted. We recommend\n * overriding {maxFlashLoan} so that it correctly reflects the supply cap.\n */\nabstract contract ERC20FlashMintUpgradeable is Initializable, ERC20Upgradeable, IERC3156FlashLender {\n    bytes32 private constant RETURN_VALUE = keccak256(\"ERC3156FlashBorrower.onFlashLoan\");\n\n    /**\n     * @dev The loan token is not valid.\n     */\n    error ERC3156UnsupportedToken(address token);\n\n    /**\n     * @dev The requested loan exceeds the max loan value for `token`.\n     */\n    error ERC3156ExceededMaxLoan(uint256 maxLoan);\n\n    /**\n     * @dev The receiver of a flashloan is not a valid {onFlashLoan} implementer.\n     */\n    error ERC3156InvalidReceiver(address receiver);\n\n    function __ERC20FlashMint_init() internal onlyInitializing {\n    }\n\n    function __ERC20FlashMint_init_unchained() internal onlyInitializing {\n    }\n    /**\n     * @dev Returns the maximum amount of tokens available for loan.\n     * @param token The address of the token that is requested.\n     * @return The amount of token that can be loaned.\n     *\n     * NOTE: This function does not consider any form of supply cap, so in case\n     * it's used in a token with a cap like {ERC20Capped}, make sure to override this\n     * function to integrate the cap instead of `type(uint256).max`.\n     */\n    function maxFlashLoan(address token) public view virtual returns (uint256) {\n        return token == address(this) ? type(uint256).max - totalSupply() : 0;\n    }\n\n    /**\n     * @dev Returns the fee applied when doing flash loans. This function calls\n     * the {_flashFee} function which returns the fee applied when doing flash\n     * loans.\n     * @param token The token to be flash loaned.\n     * @param value The amount of tokens to be loaned.\n     * @return The fees applied to the corresponding flash loan.\n     */\n    function flashFee(address token, uint256 value) public view virtual returns (uint256) {\n        if (token != address(this)) {\n            revert ERC3156UnsupportedToken(token);\n        }\n        return _flashFee(token, value);\n    }\n\n    /**\n     * @dev Returns the fee applied when doing flash loans. By default this\n     * implementation has 0 fees. This function can be overloaded to make\n     * the flash loan mechanism deflationary.\n     * @param token The token to be flash loaned.\n     * @param value The amount of tokens to be loaned.\n     * @return The fees applied to the corresponding flash loan.\n     */\n    function _flashFee(address token, uint256 value) internal view virtual returns (uint256) {\n        // silence warning about unused variable without the addition of bytecode.\n        token;\n        value;\n        return 0;\n    }\n\n    /**\n     * @dev Returns the receiver address of the flash fee. By default this\n     * implementation returns the address(0) which means the fee amount will be burnt.\n     * This function can be overloaded to change the fee receiver.\n     * @return The address for which the flash fee will be sent to.\n     */\n    function _flashFeeReceiver() internal view virtual returns (address) {\n        return address(0);\n    }\n\n    /**\n     * @dev Performs a flash loan. New tokens are minted and sent to the\n     * `receiver`, who is required to implement the {IERC3156FlashBorrower}\n     * interface. By the end of the flash loan, the receiver is expected to own\n     * value + fee tokens and have them approved back to the token contract itself so\n     * they can be burned.\n     * @param receiver The receiver of the flash loan. Should implement the\n     * {IERC3156FlashBorrower-onFlashLoan} interface.\n     * @param token The token to be flash loaned. Only `address(this)` is\n     * supported.\n     * @param value The amount of tokens to be loaned.\n     * @param data An arbitrary datafield that is passed to the receiver.\n     * @return `true` if the flash loan was successful.\n     */\n    // This function can reenter, but it doesn't pose a risk because it always preserves the property that the amount\n    // minted at the beginning is always recovered and burned at the end, or else the entire function will revert.\n    // slither-disable-next-line reentrancy-no-eth\n    function flashLoan(\n        IERC3156FlashBorrower receiver,\n        address token,\n        uint256 value,\n        bytes calldata data\n    ) public virtual returns (bool) {\n        uint256 maxLoan = maxFlashLoan(token);\n        if (value > maxLoan) {\n            revert ERC3156ExceededMaxLoan(maxLoan);\n        }\n        uint256 fee = flashFee(token, value);\n        _mint(address(receiver), value);\n        if (receiver.onFlashLoan(_msgSender(), token, value, fee, data) != RETURN_VALUE) {\n            revert ERC3156InvalidReceiver(address(receiver));\n        }\n        address flashFeeReceiver = _flashFeeReceiver();\n        _spendAllowance(address(receiver), address(this), value + fee);\n        if (fee == 0 || flashFeeReceiver == address(0)) {\n            _burn(address(receiver), value + fee);\n        } else {\n            _burn(address(receiver), value);\n            _transfer(address(receiver), flashFeeReceiver, fee);\n        }\n        return true;\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PausableUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/ERC20Pausable.sol)\n\npragma solidity ^0.8.20;\n\nimport {ERC20Upgradeable} from \"../ERC20Upgradeable.sol\";\nimport {PausableUpgradeable} from \"../../../utils/PausableUpgradeable.sol\";\nimport {Initializable} from \"../../../proxy/utils/Initializable.sol\";\n\n/**\n * @dev ERC20 token with pausable token transfers, minting and burning.\n *\n * Useful for scenarios such as preventing trades until the end of an evaluation\n * period, or having an emergency switch for freezing all token transfers in the\n * event of a large bug.\n *\n * IMPORTANT: This contract does not include public pause and unpause functions. In\n * addition to inheriting this contract, you must define both functions, invoking the\n * {Pausable-_pause} and {Pausable-_unpause} internal functions, with appropriate\n * access control, e.g. using {AccessControl} or {Ownable}. Not doing so will\n * make the contract pause mechanism of the contract unreachable, and thus unusable.\n */\nabstract contract ERC20PausableUpgradeable is Initializable, ERC20Upgradeable, PausableUpgradeable {\n    function __ERC20Pausable_init() internal onlyInitializing {\n        __Pausable_init_unchained();\n    }\n\n    function __ERC20Pausable_init_unchained() internal onlyInitializing {\n    }\n    /**\n     * @dev See {ERC20-_update}.\n     *\n     * Requirements:\n     *\n     * - the contract must not be paused.\n     */\n    function _update(address from, address to, uint256 value) internal virtual override whenNotPaused {\n        super._update(from, to, value);\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PermitUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/ERC20Permit.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20Permit} from \"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\";\nimport {ERC20Upgradeable} from \"../ERC20Upgradeable.sol\";\nimport {ECDSA} from \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\";\nimport {EIP712Upgradeable} from \"../../../utils/cryptography/EIP712Upgradeable.sol\";\nimport {NoncesUpgradeable} from \"../../../utils/NoncesUpgradeable.sol\";\nimport {Initializable} from \"../../../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Implementation of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n */\nabstract contract ERC20PermitUpgradeable is Initializable, ERC20Upgradeable, IERC20Permit, EIP712Upgradeable, NoncesUpgradeable {\n    bytes32 private constant PERMIT_TYPEHASH =\n        keccak256(\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\");\n\n    /**\n     * @dev Permit deadline has expired.\n     */\n    error ERC2612ExpiredSignature(uint256 deadline);\n\n    /**\n     * @dev Mismatched signature.\n     */\n    error ERC2612InvalidSigner(address signer, address owner);\n\n    /**\n     * @dev Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\"1\"`.\n     *\n     * It's a good idea to use the same `name` that is defined as the ERC20 token name.\n     */\n    function __ERC20Permit_init(string memory name) internal onlyInitializing {\n        __EIP712_init_unchained(name, \"1\");\n    }\n\n    function __ERC20Permit_init_unchained(string memory) internal onlyInitializing {}\n\n    /**\n     * @inheritdoc IERC20Permit\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) public virtual {\n        if (block.timestamp > deadline) {\n            revert ERC2612ExpiredSignature(deadline);\n        }\n\n        bytes32 structHash = keccak256(abi.encode(PERMIT_TYPEHASH, owner, spender, value, _useNonce(owner), deadline));\n\n        bytes32 hash = _hashTypedDataV4(structHash);\n\n        address signer = ECDSA.recover(hash, v, r, s);\n        if (signer != owner) {\n            revert ERC2612InvalidSigner(signer, owner);\n        }\n\n        _approve(owner, spender, value);\n    }\n\n    /**\n     * @inheritdoc IERC20Permit\n     */\n    function nonces(address owner) public view virtual override(IERC20Permit, NoncesUpgradeable) returns (uint256) {\n        return super.nonces(owner);\n    }\n\n    /**\n     * @inheritdoc IERC20Permit\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view virtual returns (bytes32) {\n        return _domainSeparatorV4();\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract ContextUpgradeable is Initializable {\n    function __Context_init() internal onlyInitializing {\n    }\n\n    function __Context_init_unchained() internal onlyInitializing {\n    }\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/cryptography/EIP712.sol)\n\npragma solidity ^0.8.20;\n\nimport {MessageHashUtils} from \"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\";\nimport {IERC5267} from \"@openzeppelin/contracts/interfaces/IERC5267.sol\";\nimport {Initializable} from \"../../proxy/utils/Initializable.sol\";\n\n/**\n * @dev https://eips.ethereum.org/EIPS/eip-712[EIP 712] is a standard for hashing and signing of typed structured data.\n *\n * The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose\n * encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract\n * does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to\n * produce the hash of their typed data using a combination of `abi.encode` and `keccak256`.\n *\n * This contract implements the EIP 712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding\n * scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA\n * ({_hashTypedDataV4}).\n *\n * The implementation of the domain separator was designed to be as efficient as possible while still properly updating\n * the chain id to protect against replay attacks on an eventual fork of the chain.\n *\n * NOTE: This contract implements the version of the encoding known as \"v4\", as implemented by the JSON RPC method\n * https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask].\n *\n * NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain\n * separator of the implementation contract. This will cause the {_domainSeparatorV4} function to always rebuild the\n * separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\n */\nabstract contract EIP712Upgradeable is Initializable, IERC5267 {\n    bytes32 private constant TYPE_HASH =\n        keccak256(\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\");\n\n    /// @custom:storage-location erc7201:openzeppelin.storage.EIP712\n    struct EIP712Storage {\n        /// @custom:oz-renamed-from _HASHED_NAME\n        bytes32 _hashedName;\n        /// @custom:oz-renamed-from _HASHED_VERSION\n        bytes32 _hashedVersion;\n\n        string _name;\n        string _version;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.EIP712\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant EIP712StorageLocation = 0xa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d100;\n\n    function _getEIP712Storage() private pure returns (EIP712Storage storage $) {\n        assembly {\n            $.slot := EIP712StorageLocation\n        }\n    }\n\n    /**\n     * @dev Initializes the domain separator and parameter caches.\n     *\n     * The meaning of `name` and `version` is specified in\n     * https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP 712]:\n     *\n     * - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol.\n     * - `version`: the current major version of the signing domain.\n     *\n     * NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart\n     * contract upgrade].\n     */\n    function __EIP712_init(string memory name, string memory version) internal onlyInitializing {\n        __EIP712_init_unchained(name, version);\n    }\n\n    function __EIP712_init_unchained(string memory name, string memory version) internal onlyInitializing {\n        EIP712Storage storage $ = _getEIP712Storage();\n        $._name = name;\n        $._version = version;\n\n        // Reset prior values in storage if upgrading\n        $._hashedName = 0;\n        $._hashedVersion = 0;\n    }\n\n    /**\n     * @dev Returns the domain separator for the current chain.\n     */\n    function _domainSeparatorV4() internal view returns (bytes32) {\n        return _buildDomainSeparator();\n    }\n\n    function _buildDomainSeparator() private view returns (bytes32) {\n        return keccak256(abi.encode(TYPE_HASH, _EIP712NameHash(), _EIP712VersionHash(), block.chainid, address(this)));\n    }\n\n    /**\n     * @dev Given an already https://eips.ethereum.org/EIPS/eip-712#definition-of-hashstruct[hashed struct], this\n     * function returns the hash of the fully encoded EIP712 message for this domain.\n     *\n     * This hash can be used together with {ECDSA-recover} to obtain the signer of a message. For example:\n     *\n     * ```solidity\n     * bytes32 digest = _hashTypedDataV4(keccak256(abi.encode(\n     *     keccak256(\"Mail(address to,string contents)\"),\n     *     mailTo,\n     *     keccak256(bytes(mailContents))\n     * )));\n     * address signer = ECDSA.recover(digest, signature);\n     * ```\n     */\n    function _hashTypedDataV4(bytes32 structHash) internal view virtual returns (bytes32) {\n        return MessageHashUtils.toTypedDataHash(_domainSeparatorV4(), structHash);\n    }\n\n    /**\n     * @dev See {IERC-5267}.\n     */\n    function eip712Domain()\n        public\n        view\n        virtual\n        returns (\n            bytes1 fields,\n            string memory name,\n            string memory version,\n            uint256 chainId,\n            address verifyingContract,\n            bytes32 salt,\n            uint256[] memory extensions\n        )\n    {\n        EIP712Storage storage $ = _getEIP712Storage();\n        // If the hashed name and version in storage are non-zero, the contract hasn't been properly initialized\n        // and the EIP712 domain is not reliable, as it will be missing name and version.\n        require($._hashedName == 0 && $._hashedVersion == 0, \"EIP712: Uninitialized\");\n\n        return (\n            hex\"0f\", // 01111\n            _EIP712Name(),\n            _EIP712Version(),\n            block.chainid,\n            address(this),\n            bytes32(0),\n            new uint256[](0)\n        );\n    }\n\n    /**\n     * @dev The name parameter for the EIP712 domain.\n     *\n     * NOTE: This function reads from storage by default, but can be redefined to return a constant value if gas costs\n     * are a concern.\n     */\n    function _EIP712Name() internal view virtual returns (string memory) {\n        EIP712Storage storage $ = _getEIP712Storage();\n        return $._name;\n    }\n\n    /**\n     * @dev The version parameter for the EIP712 domain.\n     *\n     * NOTE: This function reads from storage by default, but can be redefined to return a constant value if gas costs\n     * are a concern.\n     */\n    function _EIP712Version() internal view virtual returns (string memory) {\n        EIP712Storage storage $ = _getEIP712Storage();\n        return $._version;\n    }\n\n    /**\n     * @dev The hash of the name parameter for the EIP712 domain.\n     *\n     * NOTE: In previous versions this function was virtual. In this version you should override `_EIP712Name` instead.\n     */\n    function _EIP712NameHash() internal view returns (bytes32) {\n        EIP712Storage storage $ = _getEIP712Storage();\n        string memory name = _EIP712Name();\n        if (bytes(name).length > 0) {\n            return keccak256(bytes(name));\n        } else {\n            // If the name is empty, the contract may have been upgraded without initializing the new storage.\n            // We return the name hash in storage if non-zero, otherwise we assume the name is empty by design.\n            bytes32 hashedName = $._hashedName;\n            if (hashedName != 0) {\n                return hashedName;\n            } else {\n                return keccak256(\"\");\n            }\n        }\n    }\n\n    /**\n     * @dev The hash of the version parameter for the EIP712 domain.\n     *\n     * NOTE: In previous versions this function was virtual. In this version you should override `_EIP712Version` instead.\n     */\n    function _EIP712VersionHash() internal view returns (bytes32) {\n        EIP712Storage storage $ = _getEIP712Storage();\n        string memory version = _EIP712Version();\n        if (bytes(version).length > 0) {\n            return keccak256(bytes(version));\n        } else {\n            // If the version is empty, the contract may have been upgraded without initializing the new storage.\n            // We return the version hash in storage if non-zero, otherwise we assume the version is empty by design.\n            bytes32 hashedVersion = $._hashedVersion;\n            if (hashedVersion != 0) {\n                return hashedVersion;\n            } else {\n                return keccak256(\"\");\n            }\n        }\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/utils/NoncesUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Nonces.sol)\npragma solidity ^0.8.20;\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Provides tracking nonces for addresses. Nonces will only increment.\n */\nabstract contract NoncesUpgradeable is Initializable {\n    /**\n     * @dev The nonce used for an `account` is not the expected current nonce.\n     */\n    error InvalidAccountNonce(address account, uint256 currentNonce);\n\n    /// @custom:storage-location erc7201:openzeppelin.storage.Nonces\n    struct NoncesStorage {\n        mapping(address account => uint256) _nonces;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Nonces\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant NoncesStorageLocation = 0x5ab42ced628888259c08ac98db1eb0cf702fc1501344311d8b100cd1bfe4bb00;\n\n    function _getNoncesStorage() private pure returns (NoncesStorage storage $) {\n        assembly {\n            $.slot := NoncesStorageLocation\n        }\n    }\n\n    function __Nonces_init() internal onlyInitializing {\n    }\n\n    function __Nonces_init_unchained() internal onlyInitializing {\n    }\n    /**\n     * @dev Returns the next unused nonce for an address.\n     */\n    function nonces(address owner) public view virtual returns (uint256) {\n        NoncesStorage storage $ = _getNoncesStorage();\n        return $._nonces[owner];\n    }\n\n    /**\n     * @dev Consumes a nonce.\n     *\n     * Returns the current value and increments nonce.\n     */\n    function _useNonce(address owner) internal virtual returns (uint256) {\n        NoncesStorage storage $ = _getNoncesStorage();\n        // For each account, the nonce has an initial value of 0, can only be incremented by one, and cannot be\n        // decremented or reset. This guarantees that the nonce never overflows.\n        unchecked {\n            // It is important to do x++ and not ++x here.\n            return $._nonces[owner]++;\n        }\n    }\n\n    /**\n     * @dev Same as {_useNonce} but checking that `nonce` is the next valid for `owner`.\n     */\n    function _useCheckedNonce(address owner, uint256 nonce) internal virtual {\n        uint256 current = _useNonce(owner);\n        if (nonce != current) {\n            revert InvalidAccountNonce(owner, current);\n        }\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Pausable.sol)\n\npragma solidity ^0.8.20;\n\nimport {ContextUpgradeable} from \"../utils/ContextUpgradeable.sol\";\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract PausableUpgradeable is Initializable, ContextUpgradeable {\n    /// @custom:storage-location erc7201:openzeppelin.storage.Pausable\n    struct PausableStorage {\n        bool _paused;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Pausable\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant PausableStorageLocation = 0xcd5ed15c6e187e77e9aee88184c21f4f2182ab5827cb3b7e07fbedcd63f03300;\n\n    function _getPausableStorage() private pure returns (PausableStorage storage $) {\n        assembly {\n            $.slot := PausableStorageLocation\n        }\n    }\n\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    /**\n     * @dev The operation failed because the contract is paused.\n     */\n    error EnforcedPause();\n\n    /**\n     * @dev The operation failed because the contract is not paused.\n     */\n    error ExpectedPause();\n\n    /**\n     * @dev Initializes the contract in unpaused state.\n     */\n    function __Pausable_init() internal onlyInitializing {\n        __Pausable_init_unchained();\n    }\n\n    function __Pausable_init_unchained() internal onlyInitializing {\n        PausableStorage storage $ = _getPausableStorage();\n        $._paused = false;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        _requireNotPaused();\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        _requirePaused();\n        _;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        PausableStorage storage $ = _getPausableStorage();\n        return $._paused;\n    }\n\n    /**\n     * @dev Throws if the contract is paused.\n     */\n    function _requireNotPaused() internal view virtual {\n        if (paused()) {\n            revert EnforcedPause();\n        }\n    }\n\n    /**\n     * @dev Throws if the contract is not paused.\n     */\n    function _requirePaused() internal view virtual {\n        if (!paused()) {\n            revert ExpectedPause();\n        }\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        PausableStorage storage $ = _getPausableStorage();\n        $._paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        PausableStorage storage $ = _getPausableStorage();\n        $._paused = false;\n        emit Unpaused(_msgSender());\n    }\n}\n"},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"},"@openzeppelin/contracts/interfaces/IERC3156FlashBorrower.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC3156FlashBorrower.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC3156 FlashBorrower, as defined in\n * https://eips.ethereum.org/EIPS/eip-3156[ERC-3156].\n */\ninterface IERC3156FlashBorrower {\n    /**\n     * @dev Receive a flash loan.\n     * @param initiator The initiator of the loan.\n     * @param token The loan currency.\n     * @param amount The amount of tokens lent.\n     * @param fee The additional amount of tokens to repay.\n     * @param data Arbitrary data structure, intended to contain user-defined parameters.\n     * @return The keccak256 hash of \"ERC3156FlashBorrower.onFlashLoan\"\n     */\n    function onFlashLoan(\n        address initiator,\n        address token,\n        uint256 amount,\n        uint256 fee,\n        bytes calldata data\n    ) external returns (bytes32);\n}\n"},"@openzeppelin/contracts/interfaces/IERC3156FlashLender.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC3156FlashLender.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC3156FlashBorrower} from \"./IERC3156FlashBorrower.sol\";\n\n/**\n * @dev Interface of the ERC3156 FlashLender, as defined in\n * https://eips.ethereum.org/EIPS/eip-3156[ERC-3156].\n */\ninterface IERC3156FlashLender {\n    /**\n     * @dev The amount of currency available to be lended.\n     * @param token The loan currency.\n     * @return The amount of `token` that can be borrowed.\n     */\n    function maxFlashLoan(address token) external view returns (uint256);\n\n    /**\n     * @dev The fee to be charged for a given loan.\n     * @param token The loan currency.\n     * @param amount The amount of tokens lent.\n     * @return The amount of `token` to be charged for the loan, on top of the returned principal.\n     */\n    function flashFee(address token, uint256 amount) external view returns (uint256);\n\n    /**\n     * @dev Initiate a flash loan.\n     * @param receiver The receiver of the tokens in the loan, and the receiver of the callback.\n     * @param token The loan currency.\n     * @param amount The amount of tokens lent.\n     * @param data Arbitrary data structure, intended to contain user-defined parameters.\n     */\n    function flashLoan(\n        IERC3156FlashBorrower receiver,\n        address token,\n        uint256 amount,\n        bytes calldata data\n    ) external returns (bool);\n}\n"},"@openzeppelin/contracts/interfaces/IERC5267.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC5267.sol)\n\npragma solidity ^0.8.20;\n\ninterface IERC5267 {\n    /**\n     * @dev MAY be emitted to signal that the domain could have changed.\n     */\n    event EIP712DomainChanged();\n\n    /**\n     * @dev returns the fields and values that describe the domain separator used by this contract for EIP-712\n     * signature.\n     */\n    function eip712Domain()\n        external\n        view\n        returns (\n            bytes1 fields,\n            string memory name,\n            string memory version,\n            uint256 chainId,\n            address verifyingContract,\n            bytes32 salt,\n            uint256[] memory extensions\n        );\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Permit.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n *\n * ==== Security Considerations\n *\n * There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n * expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n * considered as an intention to spend the allowance in any specific way. The second is that because permits have\n * built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n * take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n * generally recommended is:\n *\n * ```solidity\n * function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n *     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n *     doThing(..., value);\n * }\n *\n * function doThing(..., uint256 value) public {\n *     token.safeTransferFrom(msg.sender, address(this), value);\n *     ...\n * }\n * ```\n *\n * Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n * `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n * {SafeERC20-safeTransferFrom}).\n *\n * Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n * contracts should have entry points that don't rely on permit.\n */\ninterface IERC20Permit {\n    /**\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n     * given ``owner``'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     *\n     * CAUTION: See Security Considerations above.\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    /**\n     * @dev Returns the current nonce for `owner`. This value must be\n     * included whenever a signature is generated for {permit}.\n     *\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\n     * prevents a signature from being used multiple times.\n     */\n    function nonces(address owner) external view returns (uint256);\n\n    /**\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/cryptography/ECDSA.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n *\n * These functions can be used to verify that a message was signed by the holder\n * of the private keys of a given address.\n */\nlibrary ECDSA {\n    enum RecoverError {\n        NoError,\n        InvalidSignature,\n        InvalidSignatureLength,\n        InvalidSignatureS\n    }\n\n    /**\n     * @dev The signature derives the `address(0)`.\n     */\n    error ECDSAInvalidSignature();\n\n    /**\n     * @dev The signature has an invalid length.\n     */\n    error ECDSAInvalidSignatureLength(uint256 length);\n\n    /**\n     * @dev The signature has an S value that is in the upper half order.\n     */\n    error ECDSAInvalidSignatureS(bytes32 s);\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with `signature` or an error. This will not\n     * return address(0) without also returning an error description. Errors are documented using an enum (error type)\n     * and a bytes32 providing additional information about the error.\n     *\n     * If no error is returned, then the address can be used for verification purposes.\n     *\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n     *\n     * Documentation for signature generation:\n     * - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n     * - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\n     */\n    function tryRecover(bytes32 hash, bytes memory signature) internal pure returns (address, RecoverError, bytes32) {\n        if (signature.length == 65) {\n            bytes32 r;\n            bytes32 s;\n            uint8 v;\n            // ecrecover takes the signature parameters, and the only way to get them\n            // currently is to use assembly.\n            /// @solidity memory-safe-assembly\n            assembly {\n                r := mload(add(signature, 0x20))\n                s := mload(add(signature, 0x40))\n                v := byte(0, mload(add(signature, 0x60)))\n            }\n            return tryRecover(hash, v, r, s);\n        } else {\n            return (address(0), RecoverError.InvalidSignatureLength, bytes32(signature.length));\n        }\n    }\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with\n     * `signature`. This address can then be used for verification purposes.\n     *\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n     */\n    function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, signature);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n     *\n     * See https://eips.ethereum.org/EIPS/eip-2098[EIP-2098 short signatures]\n     */\n    function tryRecover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address, RecoverError, bytes32) {\n        unchecked {\n            bytes32 s = vs & bytes32(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff);\n            // We do not check for an overflow here since the shift operation results in 0 or 1.\n            uint8 v = uint8((uint256(vs) >> 255) + 27);\n            return tryRecover(hash, v, r, s);\n        }\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\n     */\n    function recover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, r, vs);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function tryRecover(\n        bytes32 hash,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal pure returns (address, RecoverError, bytes32) {\n        // EIP-2 still allows signature malleability for ecrecover(). Remove this possibility and make the signature\n        // unique. Appendix F in the Ethereum Yellow paper (https://ethereum.github.io/yellowpaper/paper.pdf), defines\n        // the valid range for s in (301): 0 < s < secp256k1n ÷ 2 + 1, and for v in (302): v ∈ {27, 28}. Most\n        // signatures from current libraries generate a unique signature with an s-value in the lower half order.\n        //\n        // If your library generates malleable signatures, such as s-values in the upper range, calculate a new s-value\n        // with 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 - s1 and flip v from 27 to 28 or\n        // vice versa. If your library also generates signatures with 0/1 for v instead 27/28, add 27 to v to accept\n        // these malleable signatures as well.\n        if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {\n            return (address(0), RecoverError.InvalidSignatureS, s);\n        }\n\n        // If the signature is valid (and not malleable), return the signer address\n        address signer = ecrecover(hash, v, r, s);\n        if (signer == address(0)) {\n            return (address(0), RecoverError.InvalidSignature, bytes32(0));\n        }\n\n        return (signer, RecoverError.NoError, bytes32(0));\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function recover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, v, r, s);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Optionally reverts with the corresponding custom error according to the `error` argument provided.\n     */\n    function _throwError(RecoverError error, bytes32 errorArg) private pure {\n        if (error == RecoverError.NoError) {\n            return; // no error: do nothing\n        } else if (error == RecoverError.InvalidSignature) {\n            revert ECDSAInvalidSignature();\n        } else if (error == RecoverError.InvalidSignatureLength) {\n            revert ECDSAInvalidSignatureLength(uint256(errorArg));\n        } else if (error == RecoverError.InvalidSignatureS) {\n            revert ECDSAInvalidSignatureS(errorArg);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/cryptography/MessageHashUtils.sol)\n\npragma solidity ^0.8.20;\n\nimport {Strings} from \"../Strings.sol\";\n\n/**\n * @dev Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing.\n *\n * The library provides methods for generating a hash of a message that conforms to the\n * https://eips.ethereum.org/EIPS/eip-191[EIP 191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712]\n * specifications.\n */\nlibrary MessageHashUtils {\n    /**\n     * @dev Returns the keccak256 digest of an EIP-191 signed data with version\n     * `0x45` (`personal_sign` messages).\n     *\n     * The digest is calculated by prefixing a bytes32 `messageHash` with\n     * `\"\\x19Ethereum Signed Message:\\n32\"` and hashing the result. It corresponds with the\n     * hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n     *\n     * NOTE: The `messageHash` parameter is intended to be the result of hashing a raw message with\n     * keccak256, although any bytes32 value can be safely used because the final digest will\n     * be re-hashed.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toEthSignedMessageHash(bytes32 messageHash) internal pure returns (bytes32 digest) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(0x00, \"\\x19Ethereum Signed Message:\\n32\") // 32 is the bytes-length of messageHash\n            mstore(0x1c, messageHash) // 0x1c (28) is the length of the prefix\n            digest := keccak256(0x00, 0x3c) // 0x3c is the length of the prefix (0x1c) + messageHash (0x20)\n        }\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an EIP-191 signed data with version\n     * `0x45` (`personal_sign` messages).\n     *\n     * The digest is calculated by prefixing an arbitrary `message` with\n     * `\"\\x19Ethereum Signed Message:\\n\" + len(message)` and hashing the result. It corresponds with the\n     * hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toEthSignedMessageHash(bytes memory message) internal pure returns (bytes32) {\n        return\n            keccak256(bytes.concat(\"\\x19Ethereum Signed Message:\\n\", bytes(Strings.toString(message.length)), message));\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an EIP-191 signed data with version\n     * `0x00` (data with intended validator).\n     *\n     * The digest is calculated by prefixing an arbitrary `data` with `\"\\x19\\x00\"` and the intended\n     * `validator` address. Then hashing the result.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toDataWithIntendedValidatorHash(address validator, bytes memory data) internal pure returns (bytes32) {\n        return keccak256(abi.encodePacked(hex\"19_00\", validator, data));\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an EIP-712 typed data (EIP-191 version `0x01`).\n     *\n     * The digest is calculated from a `domainSeparator` and a `structHash`, by prefixing them with\n     * `\\x19\\x01` and hashing the result. It corresponds to the hash signed by the\n     * https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`] JSON-RPC method as part of EIP-712.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toTypedDataHash(bytes32 domainSeparator, bytes32 structHash) internal pure returns (bytes32 digest) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            let ptr := mload(0x40)\n            mstore(ptr, hex\"19_01\")\n            mstore(add(ptr, 0x02), domainSeparator)\n            mstore(add(ptr, 0x22), structHash)\n            digest := keccak256(ptr, 0x42)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    /**\n     * @dev Muldiv operation overflow.\n     */\n    error MathOverflowedMulDiv();\n\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            return a / b;\n        }\n\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            if (denominator <= prod1) {\n                revert MathOverflowedMulDiv();\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (unsignedRoundsUp(rounding) && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (unsignedRoundsUp(rounding) && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // must be unchecked in order to support `n = type(int256).min`\n            return uint256(n >= 0 ? n : -n);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Strings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Strings.sol)\n\npragma solidity ^0.8.20;\n\nimport {Math} from \"./math/Math.sol\";\nimport {SignedMath} from \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant HEX_DIGITS = \"0123456789abcdef\";\n    uint8 private constant ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev The `value` string doesn't fit in the specified `length`.\n     */\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toStringSigned(int256 value) internal pure returns (string memory) {\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        uint256 localValue = value;\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\n            localValue >>= 4;\n        }\n        if (localValue != 0) {\n            revert StringsInsufficientHexLength(value, length);\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n     * representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n"},"contracts/MoCoKoV1.sol":{"content":"// SPDX-License-Identifier: MIT\n// Compatible with OpenZeppelin Contracts ^5.0.0\npragma solidity ^0.8.20;\n\nimport \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PausableUpgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PermitUpgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20FlashMintUpgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\";\n\ncontract MoCoKoV1 is Initializable, ERC20Upgradeable, ERC20BurnableUpgradeable, ERC20PausableUpgradeable, OwnableUpgradeable, ERC20PermitUpgradeable, ERC20FlashMintUpgradeable {\n    /// @custom:oz-upgrades-unsafe-allow constructor\n    constructor() {\n        _disableInitializers();\n    }\n\n    function initialize(address initialOwner) initializer public {\n        __ERC20_init(\"MoCoKo\", \"MCK\");\n        __ERC20Burnable_init();\n        __ERC20Pausable_init();\n        __Ownable_init(initialOwner);\n        __ERC20Permit_init(\"MoCoKo\");\n        __ERC20FlashMint_init();\n    }\n\n    function pause() public onlyOwner {\n        _pause();\n    }\n\n    function unpause() public onlyOwner {\n        _unpause();\n    }\n\n    function mint(address to, uint256 amount) public onlyOwner {\n        _mint(to, amount);\n    }\n\n    // The following functions are overrides required by Solidity.\n\n    function _update(address from, address to, uint256 value)\n        internal\n        override(ERC20Upgradeable, ERC20PausableUpgradeable)\n    {\n        super._update(from, to, value);\n    }\n}\n"}},"settings":{"evmVersion":"paris","optimizer":{"enabled":false,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","storageLayout"],"":["ast"]}}}},"output":{"sources":{"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol","exportedSymbols":{"ContextUpgradeable":[1655],"Initializable":[448],"OwnableUpgradeable":[194]},"id":195,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"102:24:0"},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","file":"../utils/ContextUpgradeable.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":195,"sourceUnit":1656,"src":"128:67:0","symbolAliases":[{"foreign":{"id":2,"name":"ContextUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1655,"src":"136:18:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../proxy/utils/Initializable.sol","id":5,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":195,"sourceUnit":449,"src":"196:63:0","symbolAliases":[{"foreign":{"id":4,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":448,"src":"204:13:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":7,"name":"Initializable","nameLocations":["789:13:0"],"nodeType":"IdentifierPath","referencedDeclaration":448,"src":"789:13:0"},"id":8,"nodeType":"InheritanceSpecifier","src":"789:13:0"},{"baseName":{"id":9,"name":"ContextUpgradeable","nameLocations":["804:18:0"],"nodeType":"IdentifierPath","referencedDeclaration":1655,"src":"804:18:0"},"id":10,"nodeType":"InheritanceSpecifier","src":"804:18:0"}],"canonicalName":"OwnableUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":6,"nodeType":"StructuredDocumentation","src":"261:487:0","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":194,"linearizedBaseContracts":[194,1655,448],"name":"OwnableUpgradeable","nameLocation":"767:18:0","nodeType":"ContractDefinition","nodes":[{"canonicalName":"OwnableUpgradeable.OwnableStorage","documentation":{"id":11,"nodeType":"StructuredDocumentation","src":"829:65:0","text":"@custom:storage-location erc7201:openzeppelin.storage.Ownable"},"id":14,"members":[{"constant":false,"id":13,"mutability":"mutable","name":"_owner","nameLocation":"939:6:0","nodeType":"VariableDeclaration","scope":14,"src":"931:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12,"name":"address","nodeType":"ElementaryTypeName","src":"931:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"OwnableStorage","nameLocation":"906:14:0","nodeType":"StructDefinition","scope":194,"src":"899:53:0","visibility":"public"},{"constant":true,"id":17,"mutability":"constant","name":"OwnableStorageLocation","nameLocation":"1094:22:0","nodeType":"VariableDeclaration","scope":194,"src":"1069:116:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":15,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1069:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307839303136643039643732643430666461653266643863656163366236323334633737303632313466643339633163643165363039613035323863313939333030","id":16,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1119:66:0","typeDescriptions":{"typeIdentifier":"t_rational_65173360639460082030725920392146925864023520599682862633725751242436743107328_by_1","typeString":"int_const 6517...(69 digits omitted)...7328"},"value":"0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300"},"visibility":"private"},{"body":{"id":24,"nodeType":"Block","src":"1270:81:0","statements":[{"AST":{"nodeType":"YulBlock","src":"1289:56:0","statements":[{"nodeType":"YulAssignment","src":"1303:32:0","value":{"name":"OwnableStorageLocation","nodeType":"YulIdentifier","src":"1313:22:0"},"variableNames":[{"name":"$.slot","nodeType":"YulIdentifier","src":"1303:6:0"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":21,"isOffset":false,"isSlot":true,"src":"1303:6:0","suffix":"slot","valueSize":1},{"declaration":17,"isOffset":false,"isSlot":false,"src":"1313:22:0","valueSize":1}],"id":23,"nodeType":"InlineAssembly","src":"1280:65:0"}]},"id":25,"implemented":true,"kind":"function","modifiers":[],"name":"_getOwnableStorage","nameLocation":"1201:18:0","nodeType":"FunctionDefinition","parameters":{"id":18,"nodeType":"ParameterList","parameters":[],"src":"1219:2:0"},"returnParameters":{"id":22,"nodeType":"ParameterList","parameters":[{"constant":false,"id":21,"mutability":"mutable","name":"$","nameLocation":"1267:1:0","nodeType":"VariableDeclaration","scope":25,"src":"1244:24:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage"},"typeName":{"id":20,"nodeType":"UserDefinedTypeName","pathNode":{"id":19,"name":"OwnableStorage","nameLocations":["1244:14:0"],"nodeType":"IdentifierPath","referencedDeclaration":14,"src":"1244:14:0"},"referencedDeclaration":14,"src":"1244:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage"}},"visibility":"internal"}],"src":"1243:26:0"},"scope":194,"src":"1192:159:0","stateMutability":"pure","virtual":false,"visibility":"private"},{"documentation":{"id":26,"nodeType":"StructuredDocumentation","src":"1357:85:0","text":" @dev The caller account is not authorized to perform an operation."},"errorSelector":"118cdaa7","id":30,"name":"OwnableUnauthorizedAccount","nameLocation":"1453:26:0","nodeType":"ErrorDefinition","parameters":{"id":29,"nodeType":"ParameterList","parameters":[{"constant":false,"id":28,"mutability":"mutable","name":"account","nameLocation":"1488:7:0","nodeType":"VariableDeclaration","scope":30,"src":"1480:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":27,"name":"address","nodeType":"ElementaryTypeName","src":"1480:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1479:17:0"},"src":"1447:50:0"},{"documentation":{"id":31,"nodeType":"StructuredDocumentation","src":"1503:82:0","text":" @dev The owner is not a valid owner account. (eg. `address(0)`)"},"errorSelector":"1e4fbdf7","id":35,"name":"OwnableInvalidOwner","nameLocation":"1596:19:0","nodeType":"ErrorDefinition","parameters":{"id":34,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33,"mutability":"mutable","name":"owner","nameLocation":"1624:5:0","nodeType":"VariableDeclaration","scope":35,"src":"1616:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":32,"name":"address","nodeType":"ElementaryTypeName","src":"1616:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1615:15:0"},"src":"1590:41:0"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":41,"name":"OwnershipTransferred","nameLocation":"1643:20:0","nodeType":"EventDefinition","parameters":{"id":40,"nodeType":"ParameterList","parameters":[{"constant":false,"id":37,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"1680:13:0","nodeType":"VariableDeclaration","scope":41,"src":"1664:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":36,"name":"address","nodeType":"ElementaryTypeName","src":"1664:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":39,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"1711:8:0","nodeType":"VariableDeclaration","scope":41,"src":"1695:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":38,"name":"address","nodeType":"ElementaryTypeName","src":"1695:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1663:57:0"},"src":"1637:84:0"},{"body":{"id":53,"nodeType":"Block","src":"1919:55:0","statements":[{"expression":{"arguments":[{"id":50,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":44,"src":"1954:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":49,"name":"__Ownable_init_unchained","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":81,"src":"1929:24:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":51,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1929:38:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":52,"nodeType":"ExpressionStatement","src":"1929:38:0"}]},"documentation":{"id":42,"nodeType":"StructuredDocumentation","src":"1727:115:0","text":" @dev Initializes the contract setting the address provided by the deployer as the initial owner."},"id":54,"implemented":true,"kind":"function","modifiers":[{"id":47,"kind":"modifierInvocation","modifierName":{"id":46,"name":"onlyInitializing","nameLocations":["1902:16:0"],"nodeType":"IdentifierPath","referencedDeclaration":357,"src":"1902:16:0"},"nodeType":"ModifierInvocation","src":"1902:16:0"}],"name":"__Ownable_init","nameLocation":"1856:14:0","nodeType":"FunctionDefinition","parameters":{"id":45,"nodeType":"ParameterList","parameters":[{"constant":false,"id":44,"mutability":"mutable","name":"initialOwner","nameLocation":"1879:12:0","nodeType":"VariableDeclaration","scope":54,"src":"1871:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":43,"name":"address","nodeType":"ElementaryTypeName","src":"1871:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1870:22:0"},"returnParameters":{"id":48,"nodeType":"ParameterList","parameters":[],"src":"1919:0:0"},"scope":194,"src":"1847:127:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":80,"nodeType":"Block","src":"2062:153:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":66,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":61,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":56,"src":"2076:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":64,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2100:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":63,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2092:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":62,"name":"address","nodeType":"ElementaryTypeName","src":"2092:7:0","typeDescriptions":{}}},"id":65,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2092:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2076:26:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":75,"nodeType":"IfStatement","src":"2072:95:0","trueBody":{"id":74,"nodeType":"Block","src":"2104:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":70,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2153:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":69,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2145:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":68,"name":"address","nodeType":"ElementaryTypeName","src":"2145:7:0","typeDescriptions":{}}},"id":71,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2145:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":67,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":35,"src":"2125:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":72,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2125:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":73,"nodeType":"RevertStatement","src":"2118:38:0"}]}},{"expression":{"arguments":[{"id":77,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":56,"src":"2195:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":76,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":193,"src":"2176:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":78,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2176:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":79,"nodeType":"ExpressionStatement","src":"2176:32:0"}]},"id":81,"implemented":true,"kind":"function","modifiers":[{"id":59,"kind":"modifierInvocation","modifierName":{"id":58,"name":"onlyInitializing","nameLocations":["2045:16:0"],"nodeType":"IdentifierPath","referencedDeclaration":357,"src":"2045:16:0"},"nodeType":"ModifierInvocation","src":"2045:16:0"}],"name":"__Ownable_init_unchained","nameLocation":"1989:24:0","nodeType":"FunctionDefinition","parameters":{"id":57,"nodeType":"ParameterList","parameters":[{"constant":false,"id":56,"mutability":"mutable","name":"initialOwner","nameLocation":"2022:12:0","nodeType":"VariableDeclaration","scope":81,"src":"2014:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":55,"name":"address","nodeType":"ElementaryTypeName","src":"2014:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2013:22:0"},"returnParameters":{"id":60,"nodeType":"ParameterList","parameters":[],"src":"2062:0:0"},"scope":194,"src":"1980:235:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":88,"nodeType":"Block","src":"2324:41:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":84,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":122,"src":"2334:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":85,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2334:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":86,"nodeType":"ExpressionStatement","src":"2334:13:0"},{"id":87,"nodeType":"PlaceholderStatement","src":"2357:1:0"}]},"documentation":{"id":82,"nodeType":"StructuredDocumentation","src":"2221:77:0","text":" @dev Throws if called by any account other than the owner."},"id":89,"name":"onlyOwner","nameLocation":"2312:9:0","nodeType":"ModifierDefinition","parameters":{"id":83,"nodeType":"ParameterList","parameters":[],"src":"2321:2:0"},"src":"2303:62:0","virtual":false,"visibility":"internal"},{"body":{"id":104,"nodeType":"Block","src":"2496:89:0","statements":[{"assignments":[97],"declarations":[{"constant":false,"id":97,"mutability":"mutable","name":"$","nameLocation":"2529:1:0","nodeType":"VariableDeclaration","scope":104,"src":"2506:24:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage"},"typeName":{"id":96,"nodeType":"UserDefinedTypeName","pathNode":{"id":95,"name":"OwnableStorage","nameLocations":["2506:14:0"],"nodeType":"IdentifierPath","referencedDeclaration":14,"src":"2506:14:0"},"referencedDeclaration":14,"src":"2506:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage"}},"visibility":"internal"}],"id":100,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":98,"name":"_getOwnableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":25,"src":"2533:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_OwnableStorage_$14_storage_ptr_$","typeString":"function () pure returns (struct OwnableUpgradeable.OwnableStorage storage pointer)"}},"id":99,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2533:20:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"2506:47:0"},{"expression":{"expression":{"id":101,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":97,"src":"2570:1:0","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage storage pointer"}},"id":102,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2572:6:0","memberName":"_owner","nodeType":"MemberAccess","referencedDeclaration":13,"src":"2570:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":94,"id":103,"nodeType":"Return","src":"2563:15:0"}]},"documentation":{"id":90,"nodeType":"StructuredDocumentation","src":"2371:65:0","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":105,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"2450:5:0","nodeType":"FunctionDefinition","parameters":{"id":91,"nodeType":"ParameterList","parameters":[],"src":"2455:2:0"},"returnParameters":{"id":94,"nodeType":"ParameterList","parameters":[{"constant":false,"id":93,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":105,"src":"2487:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":92,"name":"address","nodeType":"ElementaryTypeName","src":"2487:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2486:9:0"},"scope":194,"src":"2441:144:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":121,"nodeType":"Block","src":"2703:117:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":113,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":109,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":105,"src":"2717:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":110,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2717:7:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":111,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1637,"src":"2728:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":112,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2728:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2717:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":120,"nodeType":"IfStatement","src":"2713:101:0","trueBody":{"id":119,"nodeType":"Block","src":"2742:72:0","statements":[{"errorCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":115,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1637,"src":"2790:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":116,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2790:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":114,"name":"OwnableUnauthorizedAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":30,"src":"2763:26:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":117,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2763:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":118,"nodeType":"RevertStatement","src":"2756:47:0"}]}}]},"documentation":{"id":106,"nodeType":"StructuredDocumentation","src":"2591:62:0","text":" @dev Throws if the sender is not the owner."},"id":122,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"2667:11:0","nodeType":"FunctionDefinition","parameters":{"id":107,"nodeType":"ParameterList","parameters":[],"src":"2678:2:0"},"returnParameters":{"id":108,"nodeType":"ParameterList","parameters":[],"src":"2703:0:0"},"scope":194,"src":"2658:162:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":135,"nodeType":"Block","src":"3209:47:0","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":131,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3246:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":130,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3238:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":129,"name":"address","nodeType":"ElementaryTypeName","src":"3238:7:0","typeDescriptions":{}}},"id":132,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3238:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":128,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":193,"src":"3219:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":133,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3219:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":134,"nodeType":"ExpressionStatement","src":"3219:30:0"}]},"documentation":{"id":123,"nodeType":"StructuredDocumentation","src":"2826:324:0","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."},"functionSelector":"715018a6","id":136,"implemented":true,"kind":"function","modifiers":[{"id":126,"kind":"modifierInvocation","modifierName":{"id":125,"name":"onlyOwner","nameLocations":["3199:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":89,"src":"3199:9:0"},"nodeType":"ModifierInvocation","src":"3199:9:0"}],"name":"renounceOwnership","nameLocation":"3164:17:0","nodeType":"FunctionDefinition","parameters":{"id":124,"nodeType":"ParameterList","parameters":[],"src":"3181:2:0"},"returnParameters":{"id":127,"nodeType":"ParameterList","parameters":[],"src":"3209:0:0"},"scope":194,"src":"3155:101:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":163,"nodeType":"Block","src":"3475:145:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":149,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":144,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":139,"src":"3489:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":147,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3509:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":146,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3501:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":145,"name":"address","nodeType":"ElementaryTypeName","src":"3501:7:0","typeDescriptions":{}}},"id":148,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3501:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3489:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":158,"nodeType":"IfStatement","src":"3485:91:0","trueBody":{"id":157,"nodeType":"Block","src":"3513:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":153,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3562:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":152,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3554:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":151,"name":"address","nodeType":"ElementaryTypeName","src":"3554:7:0","typeDescriptions":{}}},"id":154,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3554:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":150,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":35,"src":"3534:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":155,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3534:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":156,"nodeType":"RevertStatement","src":"3527:38:0"}]}},{"expression":{"arguments":[{"id":160,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":139,"src":"3604:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":159,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":193,"src":"3585:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":161,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3585:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":162,"nodeType":"ExpressionStatement","src":"3585:28:0"}]},"documentation":{"id":137,"nodeType":"StructuredDocumentation","src":"3262:138:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":164,"implemented":true,"kind":"function","modifiers":[{"id":142,"kind":"modifierInvocation","modifierName":{"id":141,"name":"onlyOwner","nameLocations":["3465:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":89,"src":"3465:9:0"},"nodeType":"ModifierInvocation","src":"3465:9:0"}],"name":"transferOwnership","nameLocation":"3414:17:0","nodeType":"FunctionDefinition","parameters":{"id":140,"nodeType":"ParameterList","parameters":[{"constant":false,"id":139,"mutability":"mutable","name":"newOwner","nameLocation":"3440:8:0","nodeType":"VariableDeclaration","scope":164,"src":"3432:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":138,"name":"address","nodeType":"ElementaryTypeName","src":"3432:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3431:18:0"},"returnParameters":{"id":143,"nodeType":"ParameterList","parameters":[],"src":"3475:0:0"},"scope":194,"src":"3405:215:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":192,"nodeType":"Block","src":"3837:185:0","statements":[{"assignments":[172],"declarations":[{"constant":false,"id":172,"mutability":"mutable","name":"$","nameLocation":"3870:1:0","nodeType":"VariableDeclaration","scope":192,"src":"3847:24:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage"},"typeName":{"id":171,"nodeType":"UserDefinedTypeName","pathNode":{"id":170,"name":"OwnableStorage","nameLocations":["3847:14:0"],"nodeType":"IdentifierPath","referencedDeclaration":14,"src":"3847:14:0"},"referencedDeclaration":14,"src":"3847:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage"}},"visibility":"internal"}],"id":175,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":173,"name":"_getOwnableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":25,"src":"3874:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_OwnableStorage_$14_storage_ptr_$","typeString":"function () pure returns (struct OwnableUpgradeable.OwnableStorage storage pointer)"}},"id":174,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3874:20:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"3847:47:0"},{"assignments":[177],"declarations":[{"constant":false,"id":177,"mutability":"mutable","name":"oldOwner","nameLocation":"3912:8:0","nodeType":"VariableDeclaration","scope":192,"src":"3904:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":176,"name":"address","nodeType":"ElementaryTypeName","src":"3904:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":180,"initialValue":{"expression":{"id":178,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":172,"src":"3923:1:0","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage storage pointer"}},"id":179,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3925:6:0","memberName":"_owner","nodeType":"MemberAccess","referencedDeclaration":13,"src":"3923:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3904:27:0"},{"expression":{"id":185,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":181,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":172,"src":"3941:1:0","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage storage pointer"}},"id":183,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3943:6:0","memberName":"_owner","nodeType":"MemberAccess","referencedDeclaration":13,"src":"3941:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":184,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":167,"src":"3952:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3941:19:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":186,"nodeType":"ExpressionStatement","src":"3941:19:0"},{"eventCall":{"arguments":[{"id":188,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":177,"src":"3996:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":189,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":167,"src":"4006:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":187,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":41,"src":"3975:20:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":190,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3975:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":191,"nodeType":"EmitStatement","src":"3970:45:0"}]},"documentation":{"id":165,"nodeType":"StructuredDocumentation","src":"3626:143:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":193,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"3783:18:0","nodeType":"FunctionDefinition","parameters":{"id":168,"nodeType":"ParameterList","parameters":[{"constant":false,"id":167,"mutability":"mutable","name":"newOwner","nameLocation":"3810:8:0","nodeType":"VariableDeclaration","scope":193,"src":"3802:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":166,"name":"address","nodeType":"ElementaryTypeName","src":"3802:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3801:18:0"},"returnParameters":{"id":169,"nodeType":"ParameterList","parameters":[],"src":"3837:0:0"},"scope":194,"src":"3774:248:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":195,"src":"749:3275:0","usedErrors":[30,35,211,214],"usedEvents":[41,219]}],"src":"102:3923:0"},"id":0},"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","exportedSymbols":{"Initializable":[448]},"id":449,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":196,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"113:24:1"},{"abstract":true,"baseContracts":[],"canonicalName":"Initializable","contractDependencies":[],"contractKind":"contract","documentation":{"id":197,"nodeType":"StructuredDocumentation","src":"139:2209:1","text":" @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n case an upgrade adds a module that needs to be initialized.\n For example:\n [.hljs-theme-light.nopadding]\n ```solidity\n contract MyToken is ERC20Upgradeable {\n     function initialize() initializer public {\n         __ERC20_init(\"MyToken\", \"MTK\");\n     }\n }\n contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n     function initializeV2() reinitializer(2) public {\n         __ERC20Permit_init(\"MyToken\");\n     }\n }\n ```\n TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n [CAUTION]\n ====\n Avoid leaving a contract uninitialized.\n An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n [.hljs-theme-light.nopadding]\n ```\n /// @custom:oz-upgrades-unsafe-allow constructor\n constructor() {\n     _disableInitializers();\n }\n ```\n ===="},"fullyImplemented":true,"id":448,"linearizedBaseContracts":[448],"name":"Initializable","nameLocation":"2367:13:1","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Initializable.InitializableStorage","documentation":{"id":198,"nodeType":"StructuredDocumentation","src":"2387:293:1","text":" @dev Storage of the initializable contract.\n It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n when using with upgradeable contracts.\n @custom:storage-location erc7201:openzeppelin.storage.Initializable"},"id":205,"members":[{"constant":false,"id":201,"mutability":"mutable","name":"_initialized","nameLocation":"2820:12:1","nodeType":"VariableDeclaration","scope":205,"src":"2813:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":200,"name":"uint64","nodeType":"ElementaryTypeName","src":"2813:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":204,"mutability":"mutable","name":"_initializing","nameLocation":"2955:13:1","nodeType":"VariableDeclaration","scope":205,"src":"2950:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":203,"name":"bool","nodeType":"ElementaryTypeName","src":"2950:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"InitializableStorage","nameLocation":"2692:20:1","nodeType":"StructDefinition","scope":448,"src":"2685:290:1","visibility":"public"},{"constant":true,"id":208,"mutability":"constant","name":"INITIALIZABLE_STORAGE","nameLocation":"3123:21:1","nodeType":"VariableDeclaration","scope":448,"src":"3098:115:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":206,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3098:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307866306335376531363834306466303430663135303838646332663831666533393163333932336265633733653233613936363265666339633232396336613030","id":207,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3147:66:1","typeDescriptions":{"typeIdentifier":"t_rational_108904022758810753673719992590105913556127789646572562039383141376366747609600_by_1","typeString":"int_const 1089...(70 digits omitted)...9600"},"value":"0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00"},"visibility":"private"},{"documentation":{"id":209,"nodeType":"StructuredDocumentation","src":"3220:60:1","text":" @dev The contract is already initialized."},"errorSelector":"f92ee8a9","id":211,"name":"InvalidInitialization","nameLocation":"3291:21:1","nodeType":"ErrorDefinition","parameters":{"id":210,"nodeType":"ParameterList","parameters":[],"src":"3312:2:1"},"src":"3285:30:1"},{"documentation":{"id":212,"nodeType":"StructuredDocumentation","src":"3321:57:1","text":" @dev The contract is not initializing."},"errorSelector":"d7e6bcf8","id":214,"name":"NotInitializing","nameLocation":"3389:15:1","nodeType":"ErrorDefinition","parameters":{"id":213,"nodeType":"ParameterList","parameters":[],"src":"3404:2:1"},"src":"3383:24:1"},{"anonymous":false,"documentation":{"id":215,"nodeType":"StructuredDocumentation","src":"3413:90:1","text":" @dev Triggered when the contract has been initialized or reinitialized."},"eventSelector":"c7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2","id":219,"name":"Initialized","nameLocation":"3514:11:1","nodeType":"EventDefinition","parameters":{"id":218,"nodeType":"ParameterList","parameters":[{"constant":false,"id":217,"indexed":false,"mutability":"mutable","name":"version","nameLocation":"3533:7:1","nodeType":"VariableDeclaration","scope":219,"src":"3526:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":216,"name":"uint64","nodeType":"ElementaryTypeName","src":"3526:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"3525:16:1"},"src":"3508:34:1"},{"body":{"id":301,"nodeType":"Block","src":"4092:1081:1","statements":[{"assignments":[224],"declarations":[{"constant":false,"id":224,"mutability":"mutable","name":"$","nameLocation":"4187:1:1","nodeType":"VariableDeclaration","scope":301,"src":"4158:30:1","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage"},"typeName":{"id":223,"nodeType":"UserDefinedTypeName","pathNode":{"id":222,"name":"InitializableStorage","nameLocations":["4158:20:1"],"nodeType":"IdentifierPath","referencedDeclaration":205,"src":"4158:20:1"},"referencedDeclaration":205,"src":"4158:20:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage"}},"visibility":"internal"}],"id":227,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":225,"name":"_getInitializableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":447,"src":"4191:24:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$","typeString":"function () pure returns (struct Initializable.InitializableStorage storage pointer)"}},"id":226,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4191:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"4158:59:1"},{"assignments":[229],"declarations":[{"constant":false,"id":229,"mutability":"mutable","name":"isTopLevelCall","nameLocation":"4284:14:1","nodeType":"VariableDeclaration","scope":301,"src":"4279:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":228,"name":"bool","nodeType":"ElementaryTypeName","src":"4279:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":233,"initialValue":{"id":232,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4301:16:1","subExpression":{"expression":{"id":230,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":224,"src":"4302:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":231,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4304:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":204,"src":"4302:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"4279:38:1"},{"assignments":[235],"declarations":[{"constant":false,"id":235,"mutability":"mutable","name":"initialized","nameLocation":"4334:11:1","nodeType":"VariableDeclaration","scope":301,"src":"4327:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":234,"name":"uint64","nodeType":"ElementaryTypeName","src":"4327:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"id":238,"initialValue":{"expression":{"id":236,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":224,"src":"4348:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":237,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4350:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":201,"src":"4348:14:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"VariableDeclarationStatement","src":"4327:35:1"},{"assignments":[240],"declarations":[{"constant":false,"id":240,"mutability":"mutable","name":"initialSetup","nameLocation":"4711:12:1","nodeType":"VariableDeclaration","scope":301,"src":"4706:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":239,"name":"bool","nodeType":"ElementaryTypeName","src":"4706:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":246,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":245,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":243,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":241,"name":"initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":235,"src":"4726:11:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":242,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4741:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4726:16:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":244,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":229,"src":"4746:14:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4726:34:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"4706:54:1"},{"assignments":[248],"declarations":[{"constant":false,"id":248,"mutability":"mutable","name":"construction","nameLocation":"4775:12:1","nodeType":"VariableDeclaration","scope":301,"src":"4770:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":247,"name":"bool","nodeType":"ElementaryTypeName","src":"4770:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":261,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":260,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":251,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":249,"name":"initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":235,"src":"4790:11:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":250,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4805:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4790:16:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"arguments":[{"id":254,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4818:4:1","typeDescriptions":{"typeIdentifier":"t_contract$_Initializable_$448","typeString":"contract Initializable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Initializable_$448","typeString":"contract Initializable"}],"id":253,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4810:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":252,"name":"address","nodeType":"ElementaryTypeName","src":"4810:7:1","typeDescriptions":{}}},"id":255,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4810:13:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":256,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4824:4:1","memberName":"code","nodeType":"MemberAccess","src":"4810:18:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":257,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4829:6:1","memberName":"length","nodeType":"MemberAccess","src":"4810:25:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":258,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4839:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4810:30:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4790:50:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"4770:70:1"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":266,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":263,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4855:13:1","subExpression":{"id":262,"name":"initialSetup","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":240,"src":"4856:12:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":265,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4872:13:1","subExpression":{"id":264,"name":"construction","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":248,"src":"4873:12:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4855:30:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":271,"nodeType":"IfStatement","src":"4851:91:1","trueBody":{"id":270,"nodeType":"Block","src":"4887:55:1","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":267,"name":"InvalidInitialization","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":211,"src":"4908:21:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":268,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4908:23:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":269,"nodeType":"RevertStatement","src":"4901:30:1"}]}},{"expression":{"id":276,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":272,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":224,"src":"4951:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":274,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4953:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":201,"src":"4951:14:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"31","id":275,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4968:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4951:18:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":277,"nodeType":"ExpressionStatement","src":"4951:18:1"},{"condition":{"id":278,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":229,"src":"4983:14:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":286,"nodeType":"IfStatement","src":"4979:67:1","trueBody":{"id":285,"nodeType":"Block","src":"4999:47:1","statements":[{"expression":{"id":283,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":279,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":224,"src":"5013:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":281,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5015:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":204,"src":"5013:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":282,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5031:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"5013:22:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":284,"nodeType":"ExpressionStatement","src":"5013:22:1"}]}},{"id":287,"nodeType":"PlaceholderStatement","src":"5055:1:1"},{"condition":{"id":288,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":229,"src":"5070:14:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":300,"nodeType":"IfStatement","src":"5066:101:1","trueBody":{"id":299,"nodeType":"Block","src":"5086:81:1","statements":[{"expression":{"id":293,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":289,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":224,"src":"5100:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":291,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5102:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":204,"src":"5100:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":292,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5118:5:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"5100:23:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":294,"nodeType":"ExpressionStatement","src":"5100:23:1"},{"eventCall":{"arguments":[{"hexValue":"31","id":296,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5154:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":295,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":219,"src":"5142:11:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint64_$returns$__$","typeString":"function (uint64)"}},"id":297,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5142:14:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":298,"nodeType":"EmitStatement","src":"5137:19:1"}]}}]},"documentation":{"id":220,"nodeType":"StructuredDocumentation","src":"3548:516:1","text":" @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n `onlyInitializing` functions can be used to initialize parent contracts.\n Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n production.\n Emits an {Initialized} event."},"id":302,"name":"initializer","nameLocation":"4078:11:1","nodeType":"ModifierDefinition","parameters":{"id":221,"nodeType":"ParameterList","parameters":[],"src":"4089:2:1"},"src":"4069:1104:1","virtual":false,"visibility":"internal"},{"body":{"id":348,"nodeType":"Block","src":"6291:392:1","statements":[{"assignments":[309],"declarations":[{"constant":false,"id":309,"mutability":"mutable","name":"$","nameLocation":"6386:1:1","nodeType":"VariableDeclaration","scope":348,"src":"6357:30:1","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage"},"typeName":{"id":308,"nodeType":"UserDefinedTypeName","pathNode":{"id":307,"name":"InitializableStorage","nameLocations":["6357:20:1"],"nodeType":"IdentifierPath","referencedDeclaration":205,"src":"6357:20:1"},"referencedDeclaration":205,"src":"6357:20:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage"}},"visibility":"internal"}],"id":312,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":310,"name":"_getInitializableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":447,"src":"6390:24:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$","typeString":"function () pure returns (struct Initializable.InitializableStorage storage pointer)"}},"id":311,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6390:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"6357:59:1"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":319,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":313,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":309,"src":"6431:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":314,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6433:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":204,"src":"6431:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":318,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":315,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":309,"src":"6450:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":316,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6452:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":201,"src":"6450:14:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":317,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":305,"src":"6468:7:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"6450:25:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6431:44:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":324,"nodeType":"IfStatement","src":"6427:105:1","trueBody":{"id":323,"nodeType":"Block","src":"6477:55:1","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":320,"name":"InvalidInitialization","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":211,"src":"6498:21:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":321,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6498:23:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":322,"nodeType":"RevertStatement","src":"6491:30:1"}]}},{"expression":{"id":329,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":325,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":309,"src":"6541:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":327,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6543:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":201,"src":"6541:14:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":328,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":305,"src":"6558:7:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"6541:24:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":330,"nodeType":"ExpressionStatement","src":"6541:24:1"},{"expression":{"id":335,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":331,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":309,"src":"6575:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":333,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6577:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":204,"src":"6575:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":334,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6593:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"6575:22:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":336,"nodeType":"ExpressionStatement","src":"6575:22:1"},{"id":337,"nodeType":"PlaceholderStatement","src":"6607:1:1"},{"expression":{"id":342,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":338,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":309,"src":"6618:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":340,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6620:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":204,"src":"6618:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":341,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6636:5:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"6618:23:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":343,"nodeType":"ExpressionStatement","src":"6618:23:1"},{"eventCall":{"arguments":[{"id":345,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":305,"src":"6668:7:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":344,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":219,"src":"6656:11:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint64_$returns$__$","typeString":"function (uint64)"}},"id":346,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6656:20:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":347,"nodeType":"EmitStatement","src":"6651:25:1"}]},"documentation":{"id":303,"nodeType":"StructuredDocumentation","src":"5179:1068:1","text":" @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n used to initialize parent contracts.\n A reinitializer may be used after the original initialization step. This is essential to configure modules that\n are added through upgrades and that require initialization.\n When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n cannot be nested. If one is invoked in the context of another, execution will revert.\n Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n a contract, executing them in the right order is up to the developer or operator.\n WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n Emits an {Initialized} event."},"id":349,"name":"reinitializer","nameLocation":"6261:13:1","nodeType":"ModifierDefinition","parameters":{"id":306,"nodeType":"ParameterList","parameters":[{"constant":false,"id":305,"mutability":"mutable","name":"version","nameLocation":"6282:7:1","nodeType":"VariableDeclaration","scope":349,"src":"6275:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":304,"name":"uint64","nodeType":"ElementaryTypeName","src":"6275:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"6274:16:1"},"src":"6252:431:1","virtual":false,"visibility":"internal"},{"body":{"id":356,"nodeType":"Block","src":"6921:48:1","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":352,"name":"_checkInitializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":370,"src":"6931:18:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":353,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6931:20:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":354,"nodeType":"ExpressionStatement","src":"6931:20:1"},{"id":355,"nodeType":"PlaceholderStatement","src":"6961:1:1"}]},"documentation":{"id":350,"nodeType":"StructuredDocumentation","src":"6689:199:1","text":" @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n {initializer} and {reinitializer} modifiers, directly or indirectly."},"id":357,"name":"onlyInitializing","nameLocation":"6902:16:1","nodeType":"ModifierDefinition","parameters":{"id":351,"nodeType":"ParameterList","parameters":[],"src":"6918:2:1"},"src":"6893:76:1","virtual":false,"visibility":"internal"},{"body":{"id":369,"nodeType":"Block","src":"7136:89:1","statements":[{"condition":{"id":363,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"7150:18:1","subExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":361,"name":"_isInitializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":438,"src":"7151:15:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":362,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7151:17:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":368,"nodeType":"IfStatement","src":"7146:73:1","trueBody":{"id":367,"nodeType":"Block","src":"7170:49:1","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":364,"name":"NotInitializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":214,"src":"7191:15:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":365,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7191:17:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":366,"nodeType":"RevertStatement","src":"7184:24:1"}]}}]},"documentation":{"id":358,"nodeType":"StructuredDocumentation","src":"6975:104:1","text":" @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}."},"id":370,"implemented":true,"kind":"function","modifiers":[],"name":"_checkInitializing","nameLocation":"7093:18:1","nodeType":"FunctionDefinition","parameters":{"id":359,"nodeType":"ParameterList","parameters":[],"src":"7111:2:1"},"returnParameters":{"id":360,"nodeType":"ParameterList","parameters":[],"src":"7136:0:1"},"scope":448,"src":"7084:141:1","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":415,"nodeType":"Block","src":"7760:373:1","statements":[{"assignments":[376],"declarations":[{"constant":false,"id":376,"mutability":"mutable","name":"$","nameLocation":"7855:1:1","nodeType":"VariableDeclaration","scope":415,"src":"7826:30:1","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage"},"typeName":{"id":375,"nodeType":"UserDefinedTypeName","pathNode":{"id":374,"name":"InitializableStorage","nameLocations":["7826:20:1"],"nodeType":"IdentifierPath","referencedDeclaration":205,"src":"7826:20:1"},"referencedDeclaration":205,"src":"7826:20:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage"}},"visibility":"internal"}],"id":379,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":377,"name":"_getInitializableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":447,"src":"7859:24:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$","typeString":"function () pure returns (struct Initializable.InitializableStorage storage pointer)"}},"id":378,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7859:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"7826:59:1"},{"condition":{"expression":{"id":380,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":376,"src":"7900:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":381,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7902:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":204,"src":"7900:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":386,"nodeType":"IfStatement","src":"7896:76:1","trueBody":{"id":385,"nodeType":"Block","src":"7917:55:1","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":382,"name":"InvalidInitialization","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":211,"src":"7938:21:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":383,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7938:23:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":384,"nodeType":"RevertStatement","src":"7931:30:1"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":394,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":387,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":376,"src":"7985:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":388,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7987:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":201,"src":"7985:14:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"arguments":[{"id":391,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8008:6:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":390,"name":"uint64","nodeType":"ElementaryTypeName","src":"8008:6:1","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":389,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8003:4:1","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":392,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8003:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":393,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8016:3:1","memberName":"max","nodeType":"MemberAccess","src":"8003:16:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"7985:34:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":414,"nodeType":"IfStatement","src":"7981:146:1","trueBody":{"id":413,"nodeType":"Block","src":"8021:106:1","statements":[{"expression":{"id":403,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":395,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":376,"src":"8035:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":397,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"8037:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":201,"src":"8035:14:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"arguments":[{"id":400,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8057:6:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":399,"name":"uint64","nodeType":"ElementaryTypeName","src":"8057:6:1","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":398,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8052:4:1","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":401,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8052:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":402,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8065:3:1","memberName":"max","nodeType":"MemberAccess","src":"8052:16:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"8035:33:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":404,"nodeType":"ExpressionStatement","src":"8035:33:1"},{"eventCall":{"arguments":[{"expression":{"arguments":[{"id":408,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8104:6:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":407,"name":"uint64","nodeType":"ElementaryTypeName","src":"8104:6:1","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":406,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8099:4:1","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":409,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8099:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":410,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8112:3:1","memberName":"max","nodeType":"MemberAccess","src":"8099:16:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":405,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":219,"src":"8087:11:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint64_$returns$__$","typeString":"function (uint64)"}},"id":411,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8087:29:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":412,"nodeType":"EmitStatement","src":"8082:34:1"}]}}]},"documentation":{"id":371,"nodeType":"StructuredDocumentation","src":"7231:475:1","text":" @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n through proxies.\n Emits an {Initialized} event the first time it is successfully executed."},"id":416,"implemented":true,"kind":"function","modifiers":[],"name":"_disableInitializers","nameLocation":"7720:20:1","nodeType":"FunctionDefinition","parameters":{"id":372,"nodeType":"ParameterList","parameters":[],"src":"7740:2:1"},"returnParameters":{"id":373,"nodeType":"ParameterList","parameters":[],"src":"7760:0:1"},"scope":448,"src":"7711:422:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":426,"nodeType":"Block","src":"8308:63:1","statements":[{"expression":{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":422,"name":"_getInitializableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":447,"src":"8325:24:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$","typeString":"function () pure returns (struct Initializable.InitializableStorage storage pointer)"}},"id":423,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8325:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":424,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8352:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":201,"src":"8325:39:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":421,"id":425,"nodeType":"Return","src":"8318:46:1"}]},"documentation":{"id":417,"nodeType":"StructuredDocumentation","src":"8139:99:1","text":" @dev Returns the highest version that has been initialized. See {reinitializer}."},"id":427,"implemented":true,"kind":"function","modifiers":[],"name":"_getInitializedVersion","nameLocation":"8252:22:1","nodeType":"FunctionDefinition","parameters":{"id":418,"nodeType":"ParameterList","parameters":[],"src":"8274:2:1"},"returnParameters":{"id":421,"nodeType":"ParameterList","parameters":[{"constant":false,"id":420,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":427,"src":"8300:6:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":419,"name":"uint64","nodeType":"ElementaryTypeName","src":"8300:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"8299:8:1"},"scope":448,"src":"8243:128:1","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":437,"nodeType":"Block","src":"8543:64:1","statements":[{"expression":{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":433,"name":"_getInitializableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":447,"src":"8560:24:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$","typeString":"function () pure returns (struct Initializable.InitializableStorage storage pointer)"}},"id":434,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8560:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":435,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8587:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":204,"src":"8560:40:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":432,"id":436,"nodeType":"Return","src":"8553:47:1"}]},"documentation":{"id":428,"nodeType":"StructuredDocumentation","src":"8377:105:1","text":" @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}."},"id":438,"implemented":true,"kind":"function","modifiers":[],"name":"_isInitializing","nameLocation":"8496:15:1","nodeType":"FunctionDefinition","parameters":{"id":429,"nodeType":"ParameterList","parameters":[],"src":"8511:2:1"},"returnParameters":{"id":432,"nodeType":"ParameterList","parameters":[{"constant":false,"id":431,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":438,"src":"8537:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":430,"name":"bool","nodeType":"ElementaryTypeName","src":"8537:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8536:6:1"},"scope":448,"src":"8487:120:1","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":446,"nodeType":"Block","src":"8827:80:1","statements":[{"AST":{"nodeType":"YulBlock","src":"8846:55:1","statements":[{"nodeType":"YulAssignment","src":"8860:31:1","value":{"name":"INITIALIZABLE_STORAGE","nodeType":"YulIdentifier","src":"8870:21:1"},"variableNames":[{"name":"$.slot","nodeType":"YulIdentifier","src":"8860:6:1"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":443,"isOffset":false,"isSlot":true,"src":"8860:6:1","suffix":"slot","valueSize":1},{"declaration":208,"isOffset":false,"isSlot":false,"src":"8870:21:1","valueSize":1}],"id":445,"nodeType":"InlineAssembly","src":"8837:64:1"}]},"documentation":{"id":439,"nodeType":"StructuredDocumentation","src":"8613:67:1","text":" @dev Returns a pointer to the storage namespace."},"id":447,"implemented":true,"kind":"function","modifiers":[],"name":"_getInitializableStorage","nameLocation":"8746:24:1","nodeType":"FunctionDefinition","parameters":{"id":440,"nodeType":"ParameterList","parameters":[],"src":"8770:2:1"},"returnParameters":{"id":444,"nodeType":"ParameterList","parameters":[{"constant":false,"id":443,"mutability":"mutable","name":"$","nameLocation":"8824:1:1","nodeType":"VariableDeclaration","scope":447,"src":"8795:30:1","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage"},"typeName":{"id":442,"nodeType":"UserDefinedTypeName","pathNode":{"id":441,"name":"InitializableStorage","nameLocations":["8795:20:1"],"nodeType":"IdentifierPath","referencedDeclaration":205,"src":"8795:20:1"},"referencedDeclaration":205,"src":"8795:20:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage"}},"visibility":"internal"}],"src":"8794:32:1"},"scope":448,"src":"8737:170:1","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":449,"src":"2349:6560:1","usedErrors":[211,214],"usedEvents":[219]}],"src":"113:8797:1"},"id":1},"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol","exportedSymbols":{"ContextUpgradeable":[1655],"ERC20Upgradeable":[1065],"IERC20":[2585],"IERC20Errors":[2412],"IERC20Metadata":[2611],"Initializable":[448]},"id":1066,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":450,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"105:24:2"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","id":452,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1066,"sourceUnit":2586,"src":"131:70:2","symbolAliases":[{"foreign":{"id":451,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2585,"src":"139:6:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","file":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","id":454,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1066,"sourceUnit":2612,"src":"202:97:2","symbolAliases":[{"foreign":{"id":453,"name":"IERC20Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2611,"src":"210:14:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","file":"../../utils/ContextUpgradeable.sol","id":456,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1066,"sourceUnit":1656,"src":"300:70:2","symbolAliases":[{"foreign":{"id":455,"name":"ContextUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1655,"src":"308:18:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","file":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","id":458,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1066,"sourceUnit":2508,"src":"371:83:2","symbolAliases":[{"foreign":{"id":457,"name":"IERC20Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2412,"src":"379:12:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../../proxy/utils/Initializable.sol","id":460,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1066,"sourceUnit":449,"src":"455:66:2","symbolAliases":[{"foreign":{"id":459,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":448,"src":"463:13:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":462,"name":"Initializable","nameLocations":["1614:13:2"],"nodeType":"IdentifierPath","referencedDeclaration":448,"src":"1614:13:2"},"id":463,"nodeType":"InheritanceSpecifier","src":"1614:13:2"},{"baseName":{"id":464,"name":"ContextUpgradeable","nameLocations":["1629:18:2"],"nodeType":"IdentifierPath","referencedDeclaration":1655,"src":"1629:18:2"},"id":465,"nodeType":"InheritanceSpecifier","src":"1629:18:2"},{"baseName":{"id":466,"name":"IERC20","nameLocations":["1649:6:2"],"nodeType":"IdentifierPath","referencedDeclaration":2585,"src":"1649:6:2"},"id":467,"nodeType":"InheritanceSpecifier","src":"1649:6:2"},{"baseName":{"id":468,"name":"IERC20Metadata","nameLocations":["1657:14:2"],"nodeType":"IdentifierPath","referencedDeclaration":2611,"src":"1657:14:2"},"id":469,"nodeType":"InheritanceSpecifier","src":"1657:14:2"},{"baseName":{"id":470,"name":"IERC20Errors","nameLocations":["1673:12:2"],"nodeType":"IdentifierPath","referencedDeclaration":2412,"src":"1673:12:2"},"id":471,"nodeType":"InheritanceSpecifier","src":"1673:12:2"}],"canonicalName":"ERC20Upgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":461,"nodeType":"StructuredDocumentation","src":"523:1052:2","text":" @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification."},"fullyImplemented":true,"id":1065,"linearizedBaseContracts":[1065,2412,2611,2585,1655,448],"name":"ERC20Upgradeable","nameLocation":"1594:16:2","nodeType":"ContractDefinition","nodes":[{"canonicalName":"ERC20Upgradeable.ERC20Storage","documentation":{"id":472,"nodeType":"StructuredDocumentation","src":"1692:63:2","text":"@custom:storage-location erc7201:openzeppelin.storage.ERC20"},"id":489,"members":[{"constant":false,"id":476,"mutability":"mutable","name":"_balances","nameLocation":"1826:9:2","nodeType":"VariableDeclaration","scope":489,"src":"1790:45:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":475,"keyName":"account","keyNameLocation":"1806:7:2","keyType":{"id":473,"name":"address","nodeType":"ElementaryTypeName","src":"1798:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1790:35:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":474,"name":"uint256","nodeType":"ElementaryTypeName","src":"1817:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"internal"},{"constant":false,"id":482,"mutability":"mutable","name":"_allowances","nameLocation":"1910:11:2","nodeType":"VariableDeclaration","scope":489,"src":"1846:75:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"typeName":{"id":481,"keyName":"account","keyNameLocation":"1862:7:2","keyType":{"id":477,"name":"address","nodeType":"ElementaryTypeName","src":"1854:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1846:63:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":480,"keyName":"spender","keyNameLocation":"1889:7:2","keyType":{"id":478,"name":"address","nodeType":"ElementaryTypeName","src":"1881:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1873:35:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":479,"name":"uint256","nodeType":"ElementaryTypeName","src":"1900:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"internal"},{"constant":false,"id":484,"mutability":"mutable","name":"_totalSupply","nameLocation":"1940:12:2","nodeType":"VariableDeclaration","scope":489,"src":"1932:20:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":483,"name":"uint256","nodeType":"ElementaryTypeName","src":"1932:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":486,"mutability":"mutable","name":"_name","nameLocation":"1970:5:2","nodeType":"VariableDeclaration","scope":489,"src":"1963:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":485,"name":"string","nodeType":"ElementaryTypeName","src":"1963:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":488,"mutability":"mutable","name":"_symbol","nameLocation":"1992:7:2","nodeType":"VariableDeclaration","scope":489,"src":"1985:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":487,"name":"string","nodeType":"ElementaryTypeName","src":"1985:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"ERC20Storage","nameLocation":"1767:12:2","nodeType":"StructDefinition","scope":1065,"src":"1760:246:2","visibility":"public"},{"constant":true,"id":492,"mutability":"constant","name":"ERC20StorageLocation","nameLocation":"2146:20:2","nodeType":"VariableDeclaration","scope":1065,"src":"2121:114:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":490,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2121:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307835326336333234376531663437646231396435636530343630303330633439376630363763613463656266373162613938656561646162653230626163653030","id":491,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2169:66:2","typeDescriptions":{"typeIdentifier":"t_rational_37439836327923360225337895871394760624280537466773280374265222508165906222592_by_1","typeString":"int_const 3743...(69 digits omitted)...2592"},"value":"0x52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace00"},"visibility":"private"},{"body":{"id":499,"nodeType":"Block","src":"2316:79:2","statements":[{"AST":{"nodeType":"YulBlock","src":"2335:54:2","statements":[{"nodeType":"YulAssignment","src":"2349:30:2","value":{"name":"ERC20StorageLocation","nodeType":"YulIdentifier","src":"2359:20:2"},"variableNames":[{"name":"$.slot","nodeType":"YulIdentifier","src":"2349:6:2"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":496,"isOffset":false,"isSlot":true,"src":"2349:6:2","suffix":"slot","valueSize":1},{"declaration":492,"isOffset":false,"isSlot":false,"src":"2359:20:2","valueSize":1}],"id":498,"nodeType":"InlineAssembly","src":"2326:63:2"}]},"id":500,"implemented":true,"kind":"function","modifiers":[],"name":"_getERC20Storage","nameLocation":"2251:16:2","nodeType":"FunctionDefinition","parameters":{"id":493,"nodeType":"ParameterList","parameters":[],"src":"2267:2:2"},"returnParameters":{"id":497,"nodeType":"ParameterList","parameters":[{"constant":false,"id":496,"mutability":"mutable","name":"$","nameLocation":"2313:1:2","nodeType":"VariableDeclaration","scope":500,"src":"2292:22:2","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$489_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"},"typeName":{"id":495,"nodeType":"UserDefinedTypeName","pathNode":{"id":494,"name":"ERC20Storage","nameLocations":["2292:12:2"],"nodeType":"IdentifierPath","referencedDeclaration":489,"src":"2292:12:2"},"referencedDeclaration":489,"src":"2292:12:2","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$489_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"}},"visibility":"internal"}],"src":"2291:24:2"},"scope":1065,"src":"2242:153:2","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":515,"nodeType":"Block","src":"2669:55:2","statements":[{"expression":{"arguments":[{"id":511,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":503,"src":"2702:5:2","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":512,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":505,"src":"2709:7:2","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":510,"name":"__ERC20_init_unchained","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":544,"src":"2679:22:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory,string memory)"}},"id":513,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2679:38:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":514,"nodeType":"ExpressionStatement","src":"2679:38:2"}]},"documentation":{"id":501,"nodeType":"StructuredDocumentation","src":"2401:171:2","text":" @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."},"id":516,"implemented":true,"kind":"function","modifiers":[{"id":508,"kind":"modifierInvocation","modifierName":{"id":507,"name":"onlyInitializing","nameLocations":["2652:16:2"],"nodeType":"IdentifierPath","referencedDeclaration":357,"src":"2652:16:2"},"nodeType":"ModifierInvocation","src":"2652:16:2"}],"name":"__ERC20_init","nameLocation":"2586:12:2","nodeType":"FunctionDefinition","parameters":{"id":506,"nodeType":"ParameterList","parameters":[{"constant":false,"id":503,"mutability":"mutable","name":"name_","nameLocation":"2613:5:2","nodeType":"VariableDeclaration","scope":516,"src":"2599:19:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":502,"name":"string","nodeType":"ElementaryTypeName","src":"2599:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":505,"mutability":"mutable","name":"symbol_","nameLocation":"2634:7:2","nodeType":"VariableDeclaration","scope":516,"src":"2620:21:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":504,"name":"string","nodeType":"ElementaryTypeName","src":"2620:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2598:44:2"},"returnParameters":{"id":509,"nodeType":"ParameterList","parameters":[],"src":"2669:0:2"},"scope":1065,"src":"2577:147:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":543,"nodeType":"Block","src":"2832:114:2","statements":[{"assignments":[527],"declarations":[{"constant":false,"id":527,"mutability":"mutable","name":"$","nameLocation":"2863:1:2","nodeType":"VariableDeclaration","scope":543,"src":"2842:22:2","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$489_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"},"typeName":{"id":526,"nodeType":"UserDefinedTypeName","pathNode":{"id":525,"name":"ERC20Storage","nameLocations":["2842:12:2"],"nodeType":"IdentifierPath","referencedDeclaration":489,"src":"2842:12:2"},"referencedDeclaration":489,"src":"2842:12:2","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$489_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"}},"visibility":"internal"}],"id":530,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":528,"name":"_getERC20Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":500,"src":"2867:16:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$489_storage_ptr_$","typeString":"function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"}},"id":529,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2867:18:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$489_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"2842:43:2"},{"expression":{"id":535,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":531,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":527,"src":"2895:1:2","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$489_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"id":533,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"2897:5:2","memberName":"_name","nodeType":"MemberAccess","referencedDeclaration":486,"src":"2895:7:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":534,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":518,"src":"2905:5:2","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"2895:15:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":536,"nodeType":"ExpressionStatement","src":"2895:15:2"},{"expression":{"id":541,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":537,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":527,"src":"2920:1:2","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$489_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"id":539,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"2922:7:2","memberName":"_symbol","nodeType":"MemberAccess","referencedDeclaration":488,"src":"2920:9:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":540,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":520,"src":"2932:7:2","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"2920:19:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":542,"nodeType":"ExpressionStatement","src":"2920:19:2"}]},"id":544,"implemented":true,"kind":"function","modifiers":[{"id":523,"kind":"modifierInvocation","modifierName":{"id":522,"name":"onlyInitializing","nameLocations":["2815:16:2"],"nodeType":"IdentifierPath","referencedDeclaration":357,"src":"2815:16:2"},"nodeType":"ModifierInvocation","src":"2815:16:2"}],"name":"__ERC20_init_unchained","nameLocation":"2739:22:2","nodeType":"FunctionDefinition","parameters":{"id":521,"nodeType":"ParameterList","parameters":[{"constant":false,"id":518,"mutability":"mutable","name":"name_","nameLocation":"2776:5:2","nodeType":"VariableDeclaration","scope":544,"src":"2762:19:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":517,"name":"string","nodeType":"ElementaryTypeName","src":"2762:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":520,"mutability":"mutable","name":"symbol_","nameLocation":"2797:7:2","nodeType":"VariableDeclaration","scope":544,"src":"2783:21:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":519,"name":"string","nodeType":"ElementaryTypeName","src":"2783:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2761:44:2"},"returnParameters":{"id":524,"nodeType":"ParameterList","parameters":[],"src":"2832:0:2"},"scope":1065,"src":"2730:216:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[2598],"body":{"id":559,"nodeType":"Block","src":"3071:84:2","statements":[{"assignments":[552],"declarations":[{"constant":false,"id":552,"mutability":"mutable","name":"$","nameLocation":"3102:1:2","nodeType":"VariableDeclaration","scope":559,"src":"3081:22:2","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$489_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"},"typeName":{"id":551,"nodeType":"UserDefinedTypeName","pathNode":{"id":550,"name":"ERC20Storage","nameLocations":["3081:12:2"],"nodeType":"IdentifierPath","referencedDeclaration":489,"src":"3081:12:2"},"referencedDeclaration":489,"src":"3081:12:2","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$489_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"}},"visibility":"internal"}],"id":555,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":553,"name":"_getERC20Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":500,"src":"3106:16:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$489_storage_ptr_$","typeString":"function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"}},"id":554,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3106:18:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$489_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"3081:43:2"},{"expression":{"expression":{"id":556,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":552,"src":"3141:1:2","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$489_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"id":557,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3143:5:2","memberName":"_name","nodeType":"MemberAccess","referencedDeclaration":486,"src":"3141:7:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":549,"id":558,"nodeType":"Return","src":"3134:14:2"}]},"documentation":{"id":545,"nodeType":"StructuredDocumentation","src":"2952:54:2","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":560,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"3020:4:2","nodeType":"FunctionDefinition","parameters":{"id":546,"nodeType":"ParameterList","parameters":[],"src":"3024:2:2"},"returnParameters":{"id":549,"nodeType":"ParameterList","parameters":[{"constant":false,"id":548,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":560,"src":"3056:13:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":547,"name":"string","nodeType":"ElementaryTypeName","src":"3056:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3055:15:2"},"scope":1065,"src":"3011:144:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2604],"body":{"id":575,"nodeType":"Block","src":"3330:86:2","statements":[{"assignments":[568],"declarations":[{"constant":false,"id":568,"mutability":"mutable","name":"$","nameLocation":"3361:1:2","nodeType":"VariableDeclaration","scope":575,"src":"3340:22:2","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$489_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"},"typeName":{"id":567,"nodeType":"UserDefinedTypeName","pathNode":{"id":566,"name":"ERC20Storage","nameLocations":["3340:12:2"],"nodeType":"IdentifierPath","referencedDeclaration":489,"src":"3340:12:2"},"referencedDeclaration":489,"src":"3340:12:2","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$489_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"}},"visibility":"internal"}],"id":571,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":569,"name":"_getERC20Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":500,"src":"3365:16:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$489_storage_ptr_$","typeString":"function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"}},"id":570,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3365:18:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$489_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"3340:43:2"},{"expression":{"expression":{"id":572,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":568,"src":"3400:1:2","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$489_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"id":573,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3402:7:2","memberName":"_symbol","nodeType":"MemberAccess","referencedDeclaration":488,"src":"3400:9:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":565,"id":574,"nodeType":"Return","src":"3393:16:2"}]},"documentation":{"id":561,"nodeType":"StructuredDocumentation","src":"3161:102:2","text":" @dev Returns the symbol of the token, usually a shorter version of the\n name."},"functionSelector":"95d89b41","id":576,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"3277:6:2","nodeType":"FunctionDefinition","parameters":{"id":562,"nodeType":"ParameterList","parameters":[],"src":"3283:2:2"},"returnParameters":{"id":565,"nodeType":"ParameterList","parameters":[{"constant":false,"id":564,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":576,"src":"3315:13:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":563,"name":"string","nodeType":"ElementaryTypeName","src":"3315:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3314:15:2"},"scope":1065,"src":"3268:148:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2610],"body":{"id":584,"nodeType":"Block","src":"4105:26:2","statements":[{"expression":{"hexValue":"3138","id":582,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4122:2:2","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"functionReturnParameters":581,"id":583,"nodeType":"Return","src":"4115:9:2"}]},"documentation":{"id":577,"nodeType":"StructuredDocumentation","src":"3422:622:2","text":" @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."},"functionSelector":"313ce567","id":585,"implemented":true,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"4058:8:2","nodeType":"FunctionDefinition","parameters":{"id":578,"nodeType":"ParameterList","parameters":[],"src":"4066:2:2"},"returnParameters":{"id":581,"nodeType":"ParameterList","parameters":[{"constant":false,"id":580,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":585,"src":"4098:5:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":579,"name":"uint8","nodeType":"ElementaryTypeName","src":"4098:5:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"4097:7:2"},"scope":1065,"src":"4049:82:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2534],"body":{"id":600,"nodeType":"Block","src":"4252:91:2","statements":[{"assignments":[593],"declarations":[{"constant":false,"id":593,"mutability":"mutable","name":"$","nameLocation":"4283:1:2","nodeType":"VariableDeclaration","scope":600,"src":"4262:22:2","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$489_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"},"typeName":{"id":592,"nodeType":"UserDefinedTypeName","pathNode":{"id":591,"name":"ERC20Storage","nameLocations":["4262:12:2"],"nodeType":"IdentifierPath","referencedDeclaration":489,"src":"4262:12:2"},"referencedDeclaration":489,"src":"4262:12:2","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$489_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"}},"visibility":"internal"}],"id":596,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":594,"name":"_getERC20Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":500,"src":"4287:16:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$489_storage_ptr_$","typeString":"function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"}},"id":595,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4287:18:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$489_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"4262:43:2"},{"expression":{"expression":{"id":597,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":593,"src":"4322:1:2","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$489_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"id":598,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4324:12:2","memberName":"_totalSupply","nodeType":"MemberAccess","referencedDeclaration":484,"src":"4322:14:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":590,"id":599,"nodeType":"Return","src":"4315:21:2"}]},"documentation":{"id":586,"nodeType":"StructuredDocumentation","src":"4137:49:2","text":" @dev See {IERC20-totalSupply}."},"functionSelector":"18160ddd","id":601,"implemented":true,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"4200:11:2","nodeType":"FunctionDefinition","parameters":{"id":587,"nodeType":"ParameterList","parameters":[],"src":"4211:2:2"},"returnParameters":{"id":590,"nodeType":"ParameterList","parameters":[{"constant":false,"id":589,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":601,"src":"4243:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":588,"name":"uint256","nodeType":"ElementaryTypeName","src":"4243:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4242:9:2"},"scope":1065,"src":"4191:152:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2542],"body":{"id":620,"nodeType":"Block","src":"4475:97:2","statements":[{"assignments":[611],"declarations":[{"constant":false,"id":611,"mutability":"mutable","name":"$","nameLocation":"4506:1:2","nodeType":"VariableDeclaration","scope":620,"src":"4485:22:2","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$489_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"},"typeName":{"id":610,"nodeType":"UserDefinedTypeName","pathNode":{"id":609,"name":"ERC20Storage","nameLocations":["4485:12:2"],"nodeType":"IdentifierPath","referencedDeclaration":489,"src":"4485:12:2"},"referencedDeclaration":489,"src":"4485:12:2","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$489_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"}},"visibility":"internal"}],"id":614,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":612,"name":"_getERC20Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":500,"src":"4510:16:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$489_storage_ptr_$","typeString":"function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"}},"id":613,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4510:18:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$489_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"4485:43:2"},{"expression":{"baseExpression":{"expression":{"id":615,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":611,"src":"4545:1:2","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$489_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"id":616,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4547:9:2","memberName":"_balances","nodeType":"MemberAccess","referencedDeclaration":476,"src":"4545:11:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":618,"indexExpression":{"id":617,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":604,"src":"4557:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4545:20:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":608,"id":619,"nodeType":"Return","src":"4538:27:2"}]},"documentation":{"id":602,"nodeType":"StructuredDocumentation","src":"4349:47:2","text":" @dev See {IERC20-balanceOf}."},"functionSelector":"70a08231","id":621,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"4410:9:2","nodeType":"FunctionDefinition","parameters":{"id":605,"nodeType":"ParameterList","parameters":[{"constant":false,"id":604,"mutability":"mutable","name":"account","nameLocation":"4428:7:2","nodeType":"VariableDeclaration","scope":621,"src":"4420:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":603,"name":"address","nodeType":"ElementaryTypeName","src":"4420:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4419:17:2"},"returnParameters":{"id":608,"nodeType":"ParameterList","parameters":[{"constant":false,"id":607,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":621,"src":"4466:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":606,"name":"uint256","nodeType":"ElementaryTypeName","src":"4466:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4465:9:2"},"scope":1065,"src":"4401:171:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2552],"body":{"id":644,"nodeType":"Block","src":"4842:103:2","statements":[{"assignments":[632],"declarations":[{"constant":false,"id":632,"mutability":"mutable","name":"owner","nameLocation":"4860:5:2","nodeType":"VariableDeclaration","scope":644,"src":"4852:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":631,"name":"address","nodeType":"ElementaryTypeName","src":"4852:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":635,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":633,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1637,"src":"4868:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":634,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4868:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4852:28:2"},{"expression":{"arguments":[{"id":637,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":632,"src":"4900:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":638,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":624,"src":"4907:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":639,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":626,"src":"4911:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":636,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":772,"src":"4890:9:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":640,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4890:27:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":641,"nodeType":"ExpressionStatement","src":"4890:27:2"},{"expression":{"hexValue":"74727565","id":642,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4934:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":630,"id":643,"nodeType":"Return","src":"4927:11:2"}]},"documentation":{"id":622,"nodeType":"StructuredDocumentation","src":"4578:184:2","text":" @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."},"functionSelector":"a9059cbb","id":645,"implemented":true,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"4776:8:2","nodeType":"FunctionDefinition","parameters":{"id":627,"nodeType":"ParameterList","parameters":[{"constant":false,"id":624,"mutability":"mutable","name":"to","nameLocation":"4793:2:2","nodeType":"VariableDeclaration","scope":645,"src":"4785:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":623,"name":"address","nodeType":"ElementaryTypeName","src":"4785:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":626,"mutability":"mutable","name":"value","nameLocation":"4805:5:2","nodeType":"VariableDeclaration","scope":645,"src":"4797:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":625,"name":"uint256","nodeType":"ElementaryTypeName","src":"4797:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4784:27:2"},"returnParameters":{"id":630,"nodeType":"ParameterList","parameters":[{"constant":false,"id":629,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":645,"src":"4836:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":628,"name":"bool","nodeType":"ElementaryTypeName","src":"4836:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4835:6:2"},"scope":1065,"src":"4767:178:2","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[2562],"body":{"id":668,"nodeType":"Block","src":"5092:106:2","statements":[{"assignments":[657],"declarations":[{"constant":false,"id":657,"mutability":"mutable","name":"$","nameLocation":"5123:1:2","nodeType":"VariableDeclaration","scope":668,"src":"5102:22:2","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$489_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"},"typeName":{"id":656,"nodeType":"UserDefinedTypeName","pathNode":{"id":655,"name":"ERC20Storage","nameLocations":["5102:12:2"],"nodeType":"IdentifierPath","referencedDeclaration":489,"src":"5102:12:2"},"referencedDeclaration":489,"src":"5102:12:2","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$489_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"}},"visibility":"internal"}],"id":660,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":658,"name":"_getERC20Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":500,"src":"5127:16:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$489_storage_ptr_$","typeString":"function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"}},"id":659,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5127:18:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$489_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"5102:43:2"},{"expression":{"baseExpression":{"baseExpression":{"expression":{"id":661,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":657,"src":"5162:1:2","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$489_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"id":662,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5164:11:2","memberName":"_allowances","nodeType":"MemberAccess","referencedDeclaration":482,"src":"5162:13:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":664,"indexExpression":{"id":663,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":648,"src":"5176:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5162:20:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":666,"indexExpression":{"id":665,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":650,"src":"5183:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5162:29:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":654,"id":667,"nodeType":"Return","src":"5155:36:2"}]},"documentation":{"id":646,"nodeType":"StructuredDocumentation","src":"4951:47:2","text":" @dev See {IERC20-allowance}."},"functionSelector":"dd62ed3e","id":669,"implemented":true,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"5012:9:2","nodeType":"FunctionDefinition","parameters":{"id":651,"nodeType":"ParameterList","parameters":[{"constant":false,"id":648,"mutability":"mutable","name":"owner","nameLocation":"5030:5:2","nodeType":"VariableDeclaration","scope":669,"src":"5022:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":647,"name":"address","nodeType":"ElementaryTypeName","src":"5022:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":650,"mutability":"mutable","name":"spender","nameLocation":"5045:7:2","nodeType":"VariableDeclaration","scope":669,"src":"5037:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":649,"name":"address","nodeType":"ElementaryTypeName","src":"5037:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5021:32:2"},"returnParameters":{"id":654,"nodeType":"ParameterList","parameters":[{"constant":false,"id":653,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":669,"src":"5083:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":652,"name":"uint256","nodeType":"ElementaryTypeName","src":"5083:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5082:9:2"},"scope":1065,"src":"5003:195:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2572],"body":{"id":692,"nodeType":"Block","src":"5584:107:2","statements":[{"assignments":[680],"declarations":[{"constant":false,"id":680,"mutability":"mutable","name":"owner","nameLocation":"5602:5:2","nodeType":"VariableDeclaration","scope":692,"src":"5594:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":679,"name":"address","nodeType":"ElementaryTypeName","src":"5594:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":683,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":681,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1637,"src":"5610:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":682,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5610:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5594:28:2"},{"expression":{"arguments":[{"id":685,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":680,"src":"5641:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":686,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":672,"src":"5648:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":687,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":674,"src":"5657:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":684,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[948,1016],"referencedDeclaration":948,"src":"5632:8:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":688,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5632:31:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":689,"nodeType":"ExpressionStatement","src":"5632:31:2"},{"expression":{"hexValue":"74727565","id":690,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5680:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":678,"id":691,"nodeType":"Return","src":"5673:11:2"}]},"documentation":{"id":670,"nodeType":"StructuredDocumentation","src":"5204:296:2","text":" @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"095ea7b3","id":693,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"5514:7:2","nodeType":"FunctionDefinition","parameters":{"id":675,"nodeType":"ParameterList","parameters":[{"constant":false,"id":672,"mutability":"mutable","name":"spender","nameLocation":"5530:7:2","nodeType":"VariableDeclaration","scope":693,"src":"5522:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":671,"name":"address","nodeType":"ElementaryTypeName","src":"5522:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":674,"mutability":"mutable","name":"value","nameLocation":"5547:5:2","nodeType":"VariableDeclaration","scope":693,"src":"5539:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":673,"name":"uint256","nodeType":"ElementaryTypeName","src":"5539:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5521:32:2"},"returnParameters":{"id":678,"nodeType":"ParameterList","parameters":[{"constant":false,"id":677,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":693,"src":"5578:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":676,"name":"bool","nodeType":"ElementaryTypeName","src":"5578:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5577:6:2"},"scope":1065,"src":"5505:186:2","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[2584],"body":{"id":724,"nodeType":"Block","src":"6344:151:2","statements":[{"assignments":[706],"declarations":[{"constant":false,"id":706,"mutability":"mutable","name":"spender","nameLocation":"6362:7:2","nodeType":"VariableDeclaration","scope":724,"src":"6354:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":705,"name":"address","nodeType":"ElementaryTypeName","src":"6354:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":709,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":707,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1637,"src":"6372:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":708,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6372:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6354:30:2"},{"expression":{"arguments":[{"id":711,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":696,"src":"6410:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":712,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":706,"src":"6416:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":713,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":700,"src":"6425:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":710,"name":"_spendAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1064,"src":"6394:15:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":714,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6394:37:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":715,"nodeType":"ExpressionStatement","src":"6394:37:2"},{"expression":{"arguments":[{"id":717,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":696,"src":"6451:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":718,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":698,"src":"6457:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":719,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":700,"src":"6461:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":716,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":772,"src":"6441:9:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":720,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6441:26:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":721,"nodeType":"ExpressionStatement","src":"6441:26:2"},{"expression":{"hexValue":"74727565","id":722,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6484:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":704,"id":723,"nodeType":"Return","src":"6477:11:2"}]},"documentation":{"id":694,"nodeType":"StructuredDocumentation","src":"5697:549:2","text":" @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."},"functionSelector":"23b872dd","id":725,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"6260:12:2","nodeType":"FunctionDefinition","parameters":{"id":701,"nodeType":"ParameterList","parameters":[{"constant":false,"id":696,"mutability":"mutable","name":"from","nameLocation":"6281:4:2","nodeType":"VariableDeclaration","scope":725,"src":"6273:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":695,"name":"address","nodeType":"ElementaryTypeName","src":"6273:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":698,"mutability":"mutable","name":"to","nameLocation":"6295:2:2","nodeType":"VariableDeclaration","scope":725,"src":"6287:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":697,"name":"address","nodeType":"ElementaryTypeName","src":"6287:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":700,"mutability":"mutable","name":"value","nameLocation":"6307:5:2","nodeType":"VariableDeclaration","scope":725,"src":"6299:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":699,"name":"uint256","nodeType":"ElementaryTypeName","src":"6299:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6272:41:2"},"returnParameters":{"id":704,"nodeType":"ParameterList","parameters":[{"constant":false,"id":703,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":725,"src":"6338:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":702,"name":"bool","nodeType":"ElementaryTypeName","src":"6338:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6337:6:2"},"scope":1065,"src":"6251:244:2","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":771,"nodeType":"Block","src":"6937:231:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":740,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":735,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":728,"src":"6951:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":738,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6967:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":737,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6959:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":736,"name":"address","nodeType":"ElementaryTypeName","src":"6959:7:2","typeDescriptions":{}}},"id":739,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6959:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6951:18:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":749,"nodeType":"IfStatement","src":"6947:86:2","trueBody":{"id":748,"nodeType":"Block","src":"6971:62:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":744,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7019:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":743,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7011:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":742,"name":"address","nodeType":"ElementaryTypeName","src":"7011:7:2","typeDescriptions":{}}},"id":745,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7011:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":741,"name":"ERC20InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2387,"src":"6992:18:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":746,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6992:30:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":747,"nodeType":"RevertStatement","src":"6985:37:2"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":755,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":750,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":730,"src":"7046:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":753,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7060:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":752,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7052:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":751,"name":"address","nodeType":"ElementaryTypeName","src":"7052:7:2","typeDescriptions":{}}},"id":754,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7052:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7046:16:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":764,"nodeType":"IfStatement","src":"7042:86:2","trueBody":{"id":763,"nodeType":"Block","src":"7064:64:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":759,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7114:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":758,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7106:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":757,"name":"address","nodeType":"ElementaryTypeName","src":"7106:7:2","typeDescriptions":{}}},"id":760,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7106:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":756,"name":"ERC20InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2392,"src":"7085:20:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":761,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7085:32:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":762,"nodeType":"RevertStatement","src":"7078:39:2"}]}},{"expression":{"arguments":[{"id":766,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":728,"src":"7145:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":767,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":730,"src":"7151:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":768,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":732,"src":"7155:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":765,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":864,"src":"7137:7:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":769,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7137:24:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":770,"nodeType":"ExpressionStatement","src":"7137:24:2"}]},"documentation":{"id":726,"nodeType":"StructuredDocumentation","src":"6501:362:2","text":" @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."},"id":772,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"6877:9:2","nodeType":"FunctionDefinition","parameters":{"id":733,"nodeType":"ParameterList","parameters":[{"constant":false,"id":728,"mutability":"mutable","name":"from","nameLocation":"6895:4:2","nodeType":"VariableDeclaration","scope":772,"src":"6887:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":727,"name":"address","nodeType":"ElementaryTypeName","src":"6887:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":730,"mutability":"mutable","name":"to","nameLocation":"6909:2:2","nodeType":"VariableDeclaration","scope":772,"src":"6901:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":729,"name":"address","nodeType":"ElementaryTypeName","src":"6901:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":732,"mutability":"mutable","name":"value","nameLocation":"6921:5:2","nodeType":"VariableDeclaration","scope":772,"src":"6913:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":731,"name":"uint256","nodeType":"ElementaryTypeName","src":"6913:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6886:41:2"},"returnParameters":{"id":734,"nodeType":"ParameterList","parameters":[],"src":"6937:0:2"},"scope":1065,"src":"6868:300:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":863,"nodeType":"Block","src":"7558:1095:2","statements":[{"assignments":[784],"declarations":[{"constant":false,"id":784,"mutability":"mutable","name":"$","nameLocation":"7589:1:2","nodeType":"VariableDeclaration","scope":863,"src":"7568:22:2","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$489_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"},"typeName":{"id":783,"nodeType":"UserDefinedTypeName","pathNode":{"id":782,"name":"ERC20Storage","nameLocations":["7568:12:2"],"nodeType":"IdentifierPath","referencedDeclaration":489,"src":"7568:12:2"},"referencedDeclaration":489,"src":"7568:12:2","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$489_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"}},"visibility":"internal"}],"id":787,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":785,"name":"_getERC20Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":500,"src":"7593:16:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$489_storage_ptr_$","typeString":"function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"}},"id":786,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7593:18:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$489_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"7568:43:2"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":793,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":788,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":775,"src":"7625:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":791,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7641:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":790,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7633:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":789,"name":"address","nodeType":"ElementaryTypeName","src":"7633:7:2","typeDescriptions":{}}},"id":792,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7633:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7625:18:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":830,"nodeType":"Block","src":"7801:366:2","statements":[{"assignments":[802],"declarations":[{"constant":false,"id":802,"mutability":"mutable","name":"fromBalance","nameLocation":"7823:11:2","nodeType":"VariableDeclaration","scope":830,"src":"7815:19:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":801,"name":"uint256","nodeType":"ElementaryTypeName","src":"7815:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":807,"initialValue":{"baseExpression":{"expression":{"id":803,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":784,"src":"7837:1:2","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$489_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"id":804,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7839:9:2","memberName":"_balances","nodeType":"MemberAccess","referencedDeclaration":476,"src":"7837:11:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":806,"indexExpression":{"id":805,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":775,"src":"7849:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7837:17:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7815:39:2"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":810,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":808,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":802,"src":"7872:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":809,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":779,"src":"7886:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7872:19:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":818,"nodeType":"IfStatement","src":"7868:115:2","trueBody":{"id":817,"nodeType":"Block","src":"7893:90:2","statements":[{"errorCall":{"arguments":[{"id":812,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":775,"src":"7943:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":813,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":802,"src":"7949:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":814,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":779,"src":"7962:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":811,"name":"ERC20InsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2382,"src":"7918:24:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256) pure"}},"id":815,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7918:50:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":816,"nodeType":"RevertStatement","src":"7911:57:2"}]}},{"id":829,"nodeType":"UncheckedBlock","src":"7996:161:2","statements":[{"expression":{"id":827,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":819,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":784,"src":"8103:1:2","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$489_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"id":822,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8105:9:2","memberName":"_balances","nodeType":"MemberAccess","referencedDeclaration":476,"src":"8103:11:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":823,"indexExpression":{"id":821,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":775,"src":"8115:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8103:17:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":826,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":824,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":802,"src":"8123:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":825,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":779,"src":"8137:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8123:19:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8103:39:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":828,"nodeType":"ExpressionStatement","src":"8103:39:2"}]}]},"id":831,"nodeType":"IfStatement","src":"7621:546:2","trueBody":{"id":800,"nodeType":"Block","src":"7645:150:2","statements":[{"expression":{"id":798,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":794,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":784,"src":"7761:1:2","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$489_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"id":796,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"7763:12:2","memberName":"_totalSupply","nodeType":"MemberAccess","referencedDeclaration":484,"src":"7761:14:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":797,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":779,"src":"7779:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7761:23:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":799,"nodeType":"ExpressionStatement","src":"7761:23:2"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":837,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":832,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":777,"src":"8181:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":835,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8195:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":834,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8187:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":833,"name":"address","nodeType":"ElementaryTypeName","src":"8187:7:2","typeDescriptions":{}}},"id":836,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8187:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8181:16:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":855,"nodeType":"Block","src":"8398:208:2","statements":[{"id":854,"nodeType":"UncheckedBlock","src":"8412:184:2","statements":[{"expression":{"id":852,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":846,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":784,"src":"8557:1:2","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$489_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"id":849,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8559:9:2","memberName":"_balances","nodeType":"MemberAccess","referencedDeclaration":476,"src":"8557:11:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":850,"indexExpression":{"id":848,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":777,"src":"8569:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8557:15:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":851,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":779,"src":"8576:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8557:24:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":853,"nodeType":"ExpressionStatement","src":"8557:24:2"}]}]},"id":856,"nodeType":"IfStatement","src":"8177:429:2","trueBody":{"id":845,"nodeType":"Block","src":"8199:193:2","statements":[{"id":844,"nodeType":"UncheckedBlock","src":"8213:169:2","statements":[{"expression":{"id":842,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":838,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":784,"src":"8344:1:2","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$489_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"id":840,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"8346:12:2","memberName":"_totalSupply","nodeType":"MemberAccess","referencedDeclaration":484,"src":"8344:14:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":841,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":779,"src":"8362:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8344:23:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":843,"nodeType":"ExpressionStatement","src":"8344:23:2"}]}]}},{"eventCall":{"arguments":[{"id":858,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":775,"src":"8630:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":859,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":777,"src":"8636:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":860,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":779,"src":"8640:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":857,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2519,"src":"8621:8:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":861,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8621:25:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":862,"nodeType":"EmitStatement","src":"8616:30:2"}]},"documentation":{"id":773,"nodeType":"StructuredDocumentation","src":"7174:304:2","text":" @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."},"id":864,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"7492:7:2","nodeType":"FunctionDefinition","parameters":{"id":780,"nodeType":"ParameterList","parameters":[{"constant":false,"id":775,"mutability":"mutable","name":"from","nameLocation":"7508:4:2","nodeType":"VariableDeclaration","scope":864,"src":"7500:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":774,"name":"address","nodeType":"ElementaryTypeName","src":"7500:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":777,"mutability":"mutable","name":"to","nameLocation":"7522:2:2","nodeType":"VariableDeclaration","scope":864,"src":"7514:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":776,"name":"address","nodeType":"ElementaryTypeName","src":"7514:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":779,"mutability":"mutable","name":"value","nameLocation":"7534:5:2","nodeType":"VariableDeclaration","scope":864,"src":"7526:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":778,"name":"uint256","nodeType":"ElementaryTypeName","src":"7526:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7499:41:2"},"returnParameters":{"id":781,"nodeType":"ParameterList","parameters":[],"src":"7558:0:2"},"scope":1065,"src":"7483:1170:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":896,"nodeType":"Block","src":"9052:152:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":877,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":872,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":867,"src":"9066:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":875,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9085:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":874,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9077:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":873,"name":"address","nodeType":"ElementaryTypeName","src":"9077:7:2","typeDescriptions":{}}},"id":876,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9077:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9066:21:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":886,"nodeType":"IfStatement","src":"9062:91:2","trueBody":{"id":885,"nodeType":"Block","src":"9089:64:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":881,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9139:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":880,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9131:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":879,"name":"address","nodeType":"ElementaryTypeName","src":"9131:7:2","typeDescriptions":{}}},"id":882,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9131:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":878,"name":"ERC20InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2392,"src":"9110:20:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":883,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9110:32:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":884,"nodeType":"RevertStatement","src":"9103:39:2"}]}},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":890,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9178:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":889,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9170:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":888,"name":"address","nodeType":"ElementaryTypeName","src":"9170:7:2","typeDescriptions":{}}},"id":891,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9170:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":892,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":867,"src":"9182:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":893,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":869,"src":"9191:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":887,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":864,"src":"9162:7:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":894,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9162:35:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":895,"nodeType":"ExpressionStatement","src":"9162:35:2"}]},"documentation":{"id":865,"nodeType":"StructuredDocumentation","src":"8659:332:2","text":" @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."},"id":897,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"9005:5:2","nodeType":"FunctionDefinition","parameters":{"id":870,"nodeType":"ParameterList","parameters":[{"constant":false,"id":867,"mutability":"mutable","name":"account","nameLocation":"9019:7:2","nodeType":"VariableDeclaration","scope":897,"src":"9011:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":866,"name":"address","nodeType":"ElementaryTypeName","src":"9011:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":869,"mutability":"mutable","name":"value","nameLocation":"9036:5:2","nodeType":"VariableDeclaration","scope":897,"src":"9028:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":868,"name":"uint256","nodeType":"ElementaryTypeName","src":"9028:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9010:32:2"},"returnParameters":{"id":871,"nodeType":"ParameterList","parameters":[],"src":"9052:0:2"},"scope":1065,"src":"8996:208:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":929,"nodeType":"Block","src":"9578:150:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":910,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":905,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":900,"src":"9592:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":908,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9611:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":907,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9603:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":906,"name":"address","nodeType":"ElementaryTypeName","src":"9603:7:2","typeDescriptions":{}}},"id":909,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9603:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9592:21:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":919,"nodeType":"IfStatement","src":"9588:89:2","trueBody":{"id":918,"nodeType":"Block","src":"9615:62:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":914,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9663:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":913,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9655:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":912,"name":"address","nodeType":"ElementaryTypeName","src":"9655:7:2","typeDescriptions":{}}},"id":915,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9655:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":911,"name":"ERC20InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2387,"src":"9636:18:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":916,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9636:30:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":917,"nodeType":"RevertStatement","src":"9629:37:2"}]}},{"expression":{"arguments":[{"id":921,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":900,"src":"9694:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":924,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9711:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":923,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9703:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":922,"name":"address","nodeType":"ElementaryTypeName","src":"9703:7:2","typeDescriptions":{}}},"id":925,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9703:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":926,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":902,"src":"9715:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":920,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":864,"src":"9686:7:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":927,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9686:35:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":928,"nodeType":"ExpressionStatement","src":"9686:35:2"}]},"documentation":{"id":898,"nodeType":"StructuredDocumentation","src":"9210:307:2","text":" @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"},"id":930,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"9531:5:2","nodeType":"FunctionDefinition","parameters":{"id":903,"nodeType":"ParameterList","parameters":[{"constant":false,"id":900,"mutability":"mutable","name":"account","nameLocation":"9545:7:2","nodeType":"VariableDeclaration","scope":930,"src":"9537:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":899,"name":"address","nodeType":"ElementaryTypeName","src":"9537:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":902,"mutability":"mutable","name":"value","nameLocation":"9562:5:2","nodeType":"VariableDeclaration","scope":930,"src":"9554:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":901,"name":"uint256","nodeType":"ElementaryTypeName","src":"9554:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9536:32:2"},"returnParameters":{"id":904,"nodeType":"ParameterList","parameters":[],"src":"9578:0:2"},"scope":1065,"src":"9522:206:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":947,"nodeType":"Block","src":"10338:54:2","statements":[{"expression":{"arguments":[{"id":941,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":933,"src":"10357:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":942,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":935,"src":"10364:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":943,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":937,"src":"10373:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":944,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10380:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":940,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[948,1016],"referencedDeclaration":1016,"src":"10348:8:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":945,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10348:37:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":946,"nodeType":"ExpressionStatement","src":"10348:37:2"}]},"documentation":{"id":931,"nodeType":"StructuredDocumentation","src":"9734:525:2","text":" @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."},"id":948,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"10273:8:2","nodeType":"FunctionDefinition","parameters":{"id":938,"nodeType":"ParameterList","parameters":[{"constant":false,"id":933,"mutability":"mutable","name":"owner","nameLocation":"10290:5:2","nodeType":"VariableDeclaration","scope":948,"src":"10282:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":932,"name":"address","nodeType":"ElementaryTypeName","src":"10282:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":935,"mutability":"mutable","name":"spender","nameLocation":"10305:7:2","nodeType":"VariableDeclaration","scope":948,"src":"10297:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":934,"name":"address","nodeType":"ElementaryTypeName","src":"10297:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":937,"mutability":"mutable","name":"value","nameLocation":"10322:5:2","nodeType":"VariableDeclaration","scope":948,"src":"10314:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":936,"name":"uint256","nodeType":"ElementaryTypeName","src":"10314:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10281:47:2"},"returnParameters":{"id":939,"nodeType":"ParameterList","parameters":[],"src":"10338:0:2"},"scope":1065,"src":"10264:128:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1015,"nodeType":"Block","src":"11322:389:2","statements":[{"assignments":[962],"declarations":[{"constant":false,"id":962,"mutability":"mutable","name":"$","nameLocation":"11353:1:2","nodeType":"VariableDeclaration","scope":1015,"src":"11332:22:2","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$489_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"},"typeName":{"id":961,"nodeType":"UserDefinedTypeName","pathNode":{"id":960,"name":"ERC20Storage","nameLocations":["11332:12:2"],"nodeType":"IdentifierPath","referencedDeclaration":489,"src":"11332:12:2"},"referencedDeclaration":489,"src":"11332:12:2","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$489_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"}},"visibility":"internal"}],"id":965,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":963,"name":"_getERC20Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":500,"src":"11357:16:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$489_storage_ptr_$","typeString":"function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"}},"id":964,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11357:18:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$489_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"11332:43:2"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":971,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":966,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":951,"src":"11389:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":969,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11406:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":968,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11398:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":967,"name":"address","nodeType":"ElementaryTypeName","src":"11398:7:2","typeDescriptions":{}}},"id":970,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11398:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11389:19:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":980,"nodeType":"IfStatement","src":"11385:89:2","trueBody":{"id":979,"nodeType":"Block","src":"11410:64:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":975,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11460:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":974,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11452:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":973,"name":"address","nodeType":"ElementaryTypeName","src":"11452:7:2","typeDescriptions":{}}},"id":976,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11452:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":972,"name":"ERC20InvalidApprover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2406,"src":"11431:20:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":977,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11431:32:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":978,"nodeType":"RevertStatement","src":"11424:39:2"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":986,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":981,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":953,"src":"11487:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":984,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11506:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":983,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11498:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":982,"name":"address","nodeType":"ElementaryTypeName","src":"11498:7:2","typeDescriptions":{}}},"id":985,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11498:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11487:21:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":995,"nodeType":"IfStatement","src":"11483:90:2","trueBody":{"id":994,"nodeType":"Block","src":"11510:63:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":990,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11559:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":989,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11551:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":988,"name":"address","nodeType":"ElementaryTypeName","src":"11551:7:2","typeDescriptions":{}}},"id":991,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11551:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":987,"name":"ERC20InvalidSpender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2411,"src":"11531:19:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":992,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11531:31:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":993,"nodeType":"RevertStatement","src":"11524:38:2"}]}},{"expression":{"id":1004,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"expression":{"id":996,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":962,"src":"11582:1:2","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$489_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"id":1000,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11584:11:2","memberName":"_allowances","nodeType":"MemberAccess","referencedDeclaration":482,"src":"11582:13:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":1001,"indexExpression":{"id":998,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":951,"src":"11596:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11582:20:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1002,"indexExpression":{"id":999,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":953,"src":"11603:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"11582:29:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1003,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":955,"src":"11614:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11582:37:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1005,"nodeType":"ExpressionStatement","src":"11582:37:2"},{"condition":{"id":1006,"name":"emitEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":957,"src":"11633:9:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1014,"nodeType":"IfStatement","src":"11629:76:2","trueBody":{"id":1013,"nodeType":"Block","src":"11644:61:2","statements":[{"eventCall":{"arguments":[{"id":1008,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":951,"src":"11672:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1009,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":953,"src":"11679:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1010,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":955,"src":"11688:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1007,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2528,"src":"11663:8:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1011,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11663:31:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1012,"nodeType":"EmitStatement","src":"11658:36:2"}]}}]},"documentation":{"id":949,"nodeType":"StructuredDocumentation","src":"10398:821:2","text":" @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."},"id":1016,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"11233:8:2","nodeType":"FunctionDefinition","parameters":{"id":958,"nodeType":"ParameterList","parameters":[{"constant":false,"id":951,"mutability":"mutable","name":"owner","nameLocation":"11250:5:2","nodeType":"VariableDeclaration","scope":1016,"src":"11242:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":950,"name":"address","nodeType":"ElementaryTypeName","src":"11242:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":953,"mutability":"mutable","name":"spender","nameLocation":"11265:7:2","nodeType":"VariableDeclaration","scope":1016,"src":"11257:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":952,"name":"address","nodeType":"ElementaryTypeName","src":"11257:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":955,"mutability":"mutable","name":"value","nameLocation":"11282:5:2","nodeType":"VariableDeclaration","scope":1016,"src":"11274:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":954,"name":"uint256","nodeType":"ElementaryTypeName","src":"11274:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":957,"mutability":"mutable","name":"emitEvent","nameLocation":"11294:9:2","nodeType":"VariableDeclaration","scope":1016,"src":"11289:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":956,"name":"bool","nodeType":"ElementaryTypeName","src":"11289:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"11241:63:2"},"returnParameters":{"id":959,"nodeType":"ParameterList","parameters":[],"src":"11322:0:2"},"scope":1065,"src":"11224:487:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1063,"nodeType":"Block","src":"12082:388:2","statements":[{"assignments":[1027],"declarations":[{"constant":false,"id":1027,"mutability":"mutable","name":"currentAllowance","nameLocation":"12100:16:2","nodeType":"VariableDeclaration","scope":1063,"src":"12092:24:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1026,"name":"uint256","nodeType":"ElementaryTypeName","src":"12092:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1032,"initialValue":{"arguments":[{"id":1029,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1019,"src":"12129:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1030,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1021,"src":"12136:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1028,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":669,"src":"12119:9:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":1031,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12119:25:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12092:52:2"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1039,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1033,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1027,"src":"12158:16:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"arguments":[{"id":1036,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12183:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1035,"name":"uint256","nodeType":"ElementaryTypeName","src":"12183:7:2","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":1034,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12178:4:2","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1037,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12178:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":1038,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12192:3:2","memberName":"max","nodeType":"MemberAccess","src":"12178:17:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12158:37:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1062,"nodeType":"IfStatement","src":"12154:310:2","trueBody":{"id":1061,"nodeType":"Block","src":"12197:267:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1042,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1040,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1027,"src":"12215:16:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1041,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1023,"src":"12234:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12215:24:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1050,"nodeType":"IfStatement","src":"12211:130:2","trueBody":{"id":1049,"nodeType":"Block","src":"12241:100:2","statements":[{"errorCall":{"arguments":[{"id":1044,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1021,"src":"12293:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1045,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1027,"src":"12302:16:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1046,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1023,"src":"12320:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1043,"name":"ERC20InsufficientAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2401,"src":"12266:26:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256) pure"}},"id":1047,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12266:60:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1048,"nodeType":"RevertStatement","src":"12259:67:2"}]}},{"id":1060,"nodeType":"UncheckedBlock","src":"12354:100:2","statements":[{"expression":{"arguments":[{"id":1052,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1019,"src":"12391:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1053,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1021,"src":"12398:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1056,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1054,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1027,"src":"12407:16:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1055,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1023,"src":"12426:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12407:24:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":1057,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"12433:5:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1051,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[948,1016],"referencedDeclaration":1016,"src":"12382:8:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":1058,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12382:57:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1059,"nodeType":"ExpressionStatement","src":"12382:57:2"}]}]}}]},"documentation":{"id":1017,"nodeType":"StructuredDocumentation","src":"11717:271:2","text":" @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."},"id":1064,"implemented":true,"kind":"function","modifiers":[],"name":"_spendAllowance","nameLocation":"12002:15:2","nodeType":"FunctionDefinition","parameters":{"id":1024,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1019,"mutability":"mutable","name":"owner","nameLocation":"12026:5:2","nodeType":"VariableDeclaration","scope":1064,"src":"12018:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1018,"name":"address","nodeType":"ElementaryTypeName","src":"12018:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1021,"mutability":"mutable","name":"spender","nameLocation":"12041:7:2","nodeType":"VariableDeclaration","scope":1064,"src":"12033:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1020,"name":"address","nodeType":"ElementaryTypeName","src":"12033:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1023,"mutability":"mutable","name":"value","nameLocation":"12058:5:2","nodeType":"VariableDeclaration","scope":1064,"src":"12050:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1022,"name":"uint256","nodeType":"ElementaryTypeName","src":"12050:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12017:47:2"},"returnParameters":{"id":1025,"nodeType":"ParameterList","parameters":[],"src":"12082:0:2"},"scope":1065,"src":"11993:477:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":1066,"src":"1576:10896:2","usedErrors":[211,214,2382,2387,2392,2401,2406,2411],"usedEvents":[219,2519,2528]}],"src":"105:12368:2"},"id":2},"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol","exportedSymbols":{"ContextUpgradeable":[1655],"ERC20BurnableUpgradeable":[1127],"ERC20Upgradeable":[1065],"Initializable":[448]},"id":1128,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1067,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"124:24:3"},{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol","file":"../ERC20Upgradeable.sol","id":1069,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1128,"sourceUnit":1066,"src":"150:57:3","symbolAliases":[{"foreign":{"id":1068,"name":"ERC20Upgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1065,"src":"158:16:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","file":"../../../utils/ContextUpgradeable.sol","id":1071,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1128,"sourceUnit":1656,"src":"208:73:3","symbolAliases":[{"foreign":{"id":1070,"name":"ContextUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1655,"src":"216:18:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../../../proxy/utils/Initializable.sol","id":1073,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1128,"sourceUnit":449,"src":"282:69:3","symbolAliases":[{"foreign":{"id":1072,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":448,"src":"290:13:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1075,"name":"Initializable","nameLocations":["608:13:3"],"nodeType":"IdentifierPath","referencedDeclaration":448,"src":"608:13:3"},"id":1076,"nodeType":"InheritanceSpecifier","src":"608:13:3"},{"baseName":{"id":1077,"name":"ContextUpgradeable","nameLocations":["623:18:3"],"nodeType":"IdentifierPath","referencedDeclaration":1655,"src":"623:18:3"},"id":1078,"nodeType":"InheritanceSpecifier","src":"623:18:3"},{"baseName":{"id":1079,"name":"ERC20Upgradeable","nameLocations":["643:16:3"],"nodeType":"IdentifierPath","referencedDeclaration":1065,"src":"643:16:3"},"id":1080,"nodeType":"InheritanceSpecifier","src":"643:16:3"}],"canonicalName":"ERC20BurnableUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":1074,"nodeType":"StructuredDocumentation","src":"353:208:3","text":" @dev Extension of {ERC20} that allows token holders to destroy both their own\n tokens and those that they have an allowance for, in a way that can be\n recognized off-chain (via event analysis)."},"fullyImplemented":true,"id":1127,"linearizedBaseContracts":[1127,1065,2412,2611,2585,1655,448],"name":"ERC20BurnableUpgradeable","nameLocation":"580:24:3","nodeType":"ContractDefinition","nodes":[{"body":{"id":1085,"nodeType":"Block","src":"724:7:3","statements":[]},"id":1086,"implemented":true,"kind":"function","modifiers":[{"id":1083,"kind":"modifierInvocation","modifierName":{"id":1082,"name":"onlyInitializing","nameLocations":["707:16:3"],"nodeType":"IdentifierPath","referencedDeclaration":357,"src":"707:16:3"},"nodeType":"ModifierInvocation","src":"707:16:3"}],"name":"__ERC20Burnable_init","nameLocation":"675:20:3","nodeType":"FunctionDefinition","parameters":{"id":1081,"nodeType":"ParameterList","parameters":[],"src":"695:2:3"},"returnParameters":{"id":1084,"nodeType":"ParameterList","parameters":[],"src":"724:0:3"},"scope":1127,"src":"666:65:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1091,"nodeType":"Block","src":"805:7:3","statements":[]},"id":1092,"implemented":true,"kind":"function","modifiers":[{"id":1089,"kind":"modifierInvocation","modifierName":{"id":1088,"name":"onlyInitializing","nameLocations":["788:16:3"],"nodeType":"IdentifierPath","referencedDeclaration":357,"src":"788:16:3"},"nodeType":"ModifierInvocation","src":"788:16:3"}],"name":"__ERC20Burnable_init_unchained","nameLocation":"746:30:3","nodeType":"FunctionDefinition","parameters":{"id":1087,"nodeType":"ParameterList","parameters":[],"src":"776:2:3"},"returnParameters":{"id":1090,"nodeType":"ParameterList","parameters":[],"src":"805:0:3"},"scope":1127,"src":"737:75:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1104,"nodeType":"Block","src":"975:43:3","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1099,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1637,"src":"991:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1100,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"991:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1101,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1095,"src":"1005:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1098,"name":"_burn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":930,"src":"985:5:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1102,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"985:26:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1103,"nodeType":"ExpressionStatement","src":"985:26:3"}]},"documentation":{"id":1093,"nodeType":"StructuredDocumentation","src":"817:109:3","text":" @dev Destroys a `value` amount of tokens from the caller.\n See {ERC20-_burn}."},"functionSelector":"42966c68","id":1105,"implemented":true,"kind":"function","modifiers":[],"name":"burn","nameLocation":"940:4:3","nodeType":"FunctionDefinition","parameters":{"id":1096,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1095,"mutability":"mutable","name":"value","nameLocation":"953:5:3","nodeType":"VariableDeclaration","scope":1105,"src":"945:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1094,"name":"uint256","nodeType":"ElementaryTypeName","src":"945:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"944:15:3"},"returnParameters":{"id":1097,"nodeType":"ParameterList","parameters":[],"src":"975:0:3"},"scope":1127,"src":"931:87:3","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":1125,"nodeType":"Block","src":"1399:93:3","statements":[{"expression":{"arguments":[{"id":1114,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1108,"src":"1425:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":1115,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1637,"src":"1434:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1116,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1434:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1117,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1110,"src":"1448:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1113,"name":"_spendAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1064,"src":"1409:15:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1118,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1409:45:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1119,"nodeType":"ExpressionStatement","src":"1409:45:3"},{"expression":{"arguments":[{"id":1121,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1108,"src":"1470:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1122,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1110,"src":"1479:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1120,"name":"_burn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":930,"src":"1464:5:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1123,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1464:21:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1124,"nodeType":"ExpressionStatement","src":"1464:21:3"}]},"documentation":{"id":1106,"nodeType":"StructuredDocumentation","src":"1024:305:3","text":" @dev Destroys a `value` amount of tokens from `account`, deducting from\n the caller's allowance.\n See {ERC20-_burn} and {ERC20-allowance}.\n Requirements:\n - the caller must have allowance for ``accounts``'s tokens of at least\n `value`."},"functionSelector":"79cc6790","id":1126,"implemented":true,"kind":"function","modifiers":[],"name":"burnFrom","nameLocation":"1343:8:3","nodeType":"FunctionDefinition","parameters":{"id":1111,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1108,"mutability":"mutable","name":"account","nameLocation":"1360:7:3","nodeType":"VariableDeclaration","scope":1126,"src":"1352:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1107,"name":"address","nodeType":"ElementaryTypeName","src":"1352:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1110,"mutability":"mutable","name":"value","nameLocation":"1377:5:3","nodeType":"VariableDeclaration","scope":1126,"src":"1369:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1109,"name":"uint256","nodeType":"ElementaryTypeName","src":"1369:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1351:32:3"},"returnParameters":{"id":1112,"nodeType":"ParameterList","parameters":[],"src":"1399:0:3"},"scope":1127,"src":"1334:158:3","stateMutability":"nonpayable","virtual":true,"visibility":"public"}],"scope":1128,"src":"562:932:3","usedErrors":[211,214,2382,2387,2392,2401,2406,2411],"usedEvents":[219,2519,2528]}],"src":"124:1371:3"},"id":3},"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20FlashMintUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20FlashMintUpgradeable.sol","exportedSymbols":{"ERC20FlashMintUpgradeable":[1387],"ERC20Upgradeable":[1065],"IERC3156FlashBorrower":[2306],"IERC3156FlashLender":[2345],"Initializable":[448]},"id":1388,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1129,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"125:24:4"},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC3156FlashBorrower.sol","file":"@openzeppelin/contracts/interfaces/IERC3156FlashBorrower.sol","id":1131,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1388,"sourceUnit":2307,"src":"151:99:4","symbolAliases":[{"foreign":{"id":1130,"name":"IERC3156FlashBorrower","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2306,"src":"159:21:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC3156FlashLender.sol","file":"@openzeppelin/contracts/interfaces/IERC3156FlashLender.sol","id":1133,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1388,"sourceUnit":2346,"src":"251:95:4","symbolAliases":[{"foreign":{"id":1132,"name":"IERC3156FlashLender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2345,"src":"259:19:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol","file":"../ERC20Upgradeable.sol","id":1135,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1388,"sourceUnit":1066,"src":"347:57:4","symbolAliases":[{"foreign":{"id":1134,"name":"ERC20Upgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1065,"src":"355:16:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../../../proxy/utils/Initializable.sol","id":1137,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1388,"sourceUnit":449,"src":"405:69:4","symbolAliases":[{"foreign":{"id":1136,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":448,"src":"413:13:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1139,"name":"Initializable","nameLocations":["1098:13:4"],"nodeType":"IdentifierPath","referencedDeclaration":448,"src":"1098:13:4"},"id":1140,"nodeType":"InheritanceSpecifier","src":"1098:13:4"},{"baseName":{"id":1141,"name":"ERC20Upgradeable","nameLocations":["1113:16:4"],"nodeType":"IdentifierPath","referencedDeclaration":1065,"src":"1113:16:4"},"id":1142,"nodeType":"InheritanceSpecifier","src":"1113:16:4"},{"baseName":{"id":1143,"name":"IERC3156FlashLender","nameLocations":["1131:19:4"],"nodeType":"IdentifierPath","referencedDeclaration":2345,"src":"1131:19:4"},"id":1144,"nodeType":"InheritanceSpecifier","src":"1131:19:4"}],"canonicalName":"ERC20FlashMintUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":1138,"nodeType":"StructuredDocumentation","src":"476:574:4","text":" @dev Implementation of the ERC3156 Flash loans extension, as defined in\n https://eips.ethereum.org/EIPS/eip-3156[ERC-3156].\n Adds the {flashLoan} method, which provides flash loan support at the token\n level. By default there is no fee, but this can be changed by overriding {flashFee}.\n NOTE: When this extension is used along with the {ERC20Capped} or {ERC20Votes} extensions,\n {maxFlashLoan} will not correctly reflect the maximum that can be flash minted. We recommend\n overriding {maxFlashLoan} so that it correctly reflects the supply cap."},"fullyImplemented":true,"id":1387,"linearizedBaseContracts":[1387,2345,1065,2412,2611,2585,1655,448],"name":"ERC20FlashMintUpgradeable","nameLocation":"1069:25:4","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":1149,"mutability":"constant","name":"RETURN_VALUE","nameLocation":"1182:12:4","nodeType":"VariableDeclaration","scope":1387,"src":"1157:85:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1145,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1157:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"45524333313536466c617368426f72726f7765722e6f6e466c6173684c6f616e","id":1147,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1207:34:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_439148f0bbc682ca079e46d6e2c2f0c1e3b820f1a291b069d8882abf8cf18dd9","typeString":"literal_string \"ERC3156FlashBorrower.onFlashLoan\""},"value":"ERC3156FlashBorrower.onFlashLoan"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_439148f0bbc682ca079e46d6e2c2f0c1e3b820f1a291b069d8882abf8cf18dd9","typeString":"literal_string \"ERC3156FlashBorrower.onFlashLoan\""}],"id":1146,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1197:9:4","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1148,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1197:45:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"documentation":{"id":1150,"nodeType":"StructuredDocumentation","src":"1249:52:4","text":" @dev The loan token is not valid."},"errorSelector":"b5a7db92","id":1154,"name":"ERC3156UnsupportedToken","nameLocation":"1312:23:4","nodeType":"ErrorDefinition","parameters":{"id":1153,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1152,"mutability":"mutable","name":"token","nameLocation":"1344:5:4","nodeType":"VariableDeclaration","scope":1154,"src":"1336:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1151,"name":"address","nodeType":"ElementaryTypeName","src":"1336:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1335:15:4"},"src":"1306:45:4"},{"documentation":{"id":1155,"nodeType":"StructuredDocumentation","src":"1357:82:4","text":" @dev The requested loan exceeds the max loan value for `token`."},"errorSelector":"fd9a7609","id":1159,"name":"ERC3156ExceededMaxLoan","nameLocation":"1450:22:4","nodeType":"ErrorDefinition","parameters":{"id":1158,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1157,"mutability":"mutable","name":"maxLoan","nameLocation":"1481:7:4","nodeType":"VariableDeclaration","scope":1159,"src":"1473:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1156,"name":"uint256","nodeType":"ElementaryTypeName","src":"1473:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1472:17:4"},"src":"1444:46:4"},{"documentation":{"id":1160,"nodeType":"StructuredDocumentation","src":"1496:93:4","text":" @dev The receiver of a flashloan is not a valid {onFlashLoan} implementer."},"errorSelector":"678c5b00","id":1164,"name":"ERC3156InvalidReceiver","nameLocation":"1600:22:4","nodeType":"ErrorDefinition","parameters":{"id":1163,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1162,"mutability":"mutable","name":"receiver","nameLocation":"1631:8:4","nodeType":"VariableDeclaration","scope":1164,"src":"1623:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1161,"name":"address","nodeType":"ElementaryTypeName","src":"1623:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1622:18:4"},"src":"1594:47:4"},{"body":{"id":1169,"nodeType":"Block","src":"1706:7:4","statements":[]},"id":1170,"implemented":true,"kind":"function","modifiers":[{"id":1167,"kind":"modifierInvocation","modifierName":{"id":1166,"name":"onlyInitializing","nameLocations":["1689:16:4"],"nodeType":"IdentifierPath","referencedDeclaration":357,"src":"1689:16:4"},"nodeType":"ModifierInvocation","src":"1689:16:4"}],"name":"__ERC20FlashMint_init","nameLocation":"1656:21:4","nodeType":"FunctionDefinition","parameters":{"id":1165,"nodeType":"ParameterList","parameters":[],"src":"1677:2:4"},"returnParameters":{"id":1168,"nodeType":"ParameterList","parameters":[],"src":"1706:0:4"},"scope":1387,"src":"1647:66:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1175,"nodeType":"Block","src":"1788:7:4","statements":[]},"id":1176,"implemented":true,"kind":"function","modifiers":[{"id":1173,"kind":"modifierInvocation","modifierName":{"id":1172,"name":"onlyInitializing","nameLocations":["1771:16:4"],"nodeType":"IdentifierPath","referencedDeclaration":357,"src":"1771:16:4"},"nodeType":"ModifierInvocation","src":"1771:16:4"}],"name":"__ERC20FlashMint_init_unchained","nameLocation":"1728:31:4","nodeType":"FunctionDefinition","parameters":{"id":1171,"nodeType":"ParameterList","parameters":[],"src":"1759:2:4"},"returnParameters":{"id":1174,"nodeType":"ParameterList","parameters":[],"src":"1788:0:4"},"scope":1387,"src":"1719:76:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[2319],"body":{"id":1201,"nodeType":"Block","src":"2321:86:4","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1189,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1184,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1179,"src":"2338:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"id":1187,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2355:4:4","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20FlashMintUpgradeable_$1387","typeString":"contract ERC20FlashMintUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ERC20FlashMintUpgradeable_$1387","typeString":"contract ERC20FlashMintUpgradeable"}],"id":1186,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2347:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1185,"name":"address","nodeType":"ElementaryTypeName","src":"2347:7:4","typeDescriptions":{}}},"id":1188,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2347:13:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2338:22:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":1198,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2399:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":1199,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2338:62:4","trueExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1197,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1192,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2368:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1191,"name":"uint256","nodeType":"ElementaryTypeName","src":"2368:7:4","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":1190,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2363:4:4","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1193,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2363:13:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":1194,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2377:3:4","memberName":"max","nodeType":"MemberAccess","src":"2363:17:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1195,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":601,"src":"2383:11:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":1196,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2383:13:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2363:33:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1183,"id":1200,"nodeType":"Return","src":"2331:69:4"}]},"documentation":{"id":1177,"nodeType":"StructuredDocumentation","src":"1800:441:4","text":" @dev Returns the maximum amount of tokens available for loan.\n @param token The address of the token that is requested.\n @return The amount of token that can be loaned.\n NOTE: This function does not consider any form of supply cap, so in case\n it's used in a token with a cap like {ERC20Capped}, make sure to override this\n function to integrate the cap instead of `type(uint256).max`."},"functionSelector":"613255ab","id":1202,"implemented":true,"kind":"function","modifiers":[],"name":"maxFlashLoan","nameLocation":"2255:12:4","nodeType":"FunctionDefinition","parameters":{"id":1180,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1179,"mutability":"mutable","name":"token","nameLocation":"2276:5:4","nodeType":"VariableDeclaration","scope":1202,"src":"2268:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1178,"name":"address","nodeType":"ElementaryTypeName","src":"2268:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2267:15:4"},"returnParameters":{"id":1183,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1182,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1202,"src":"2312:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1181,"name":"uint256","nodeType":"ElementaryTypeName","src":"2312:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2311:9:4"},"scope":1387,"src":"2246:161:4","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2329],"body":{"id":1229,"nodeType":"Block","src":"2858:146:4","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1217,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1212,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1205,"src":"2872:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"id":1215,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2889:4:4","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20FlashMintUpgradeable_$1387","typeString":"contract ERC20FlashMintUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ERC20FlashMintUpgradeable_$1387","typeString":"contract ERC20FlashMintUpgradeable"}],"id":1214,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2881:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1213,"name":"address","nodeType":"ElementaryTypeName","src":"2881:7:4","typeDescriptions":{}}},"id":1216,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2881:13:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2872:22:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1223,"nodeType":"IfStatement","src":"2868:90:4","trueBody":{"id":1222,"nodeType":"Block","src":"2896:62:4","statements":[{"errorCall":{"arguments":[{"id":1219,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1205,"src":"2941:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1218,"name":"ERC3156UnsupportedToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1154,"src":"2917:23:4","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1220,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2917:30:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1221,"nodeType":"RevertStatement","src":"2910:37:4"}]}},{"expression":{"arguments":[{"id":1225,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1205,"src":"2984:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1226,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1207,"src":"2991:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1224,"name":"_flashFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1247,"src":"2974:9:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,uint256) view returns (uint256)"}},"id":1227,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2974:23:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1211,"id":1228,"nodeType":"Return","src":"2967:30:4"}]},"documentation":{"id":1203,"nodeType":"StructuredDocumentation","src":"2413:354:4","text":" @dev Returns the fee applied when doing flash loans. This function calls\n the {_flashFee} function which returns the fee applied when doing flash\n loans.\n @param token The token to be flash loaned.\n @param value The amount of tokens to be loaned.\n @return The fees applied to the corresponding flash loan."},"functionSelector":"d9d98ce4","id":1230,"implemented":true,"kind":"function","modifiers":[],"name":"flashFee","nameLocation":"2781:8:4","nodeType":"FunctionDefinition","parameters":{"id":1208,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1205,"mutability":"mutable","name":"token","nameLocation":"2798:5:4","nodeType":"VariableDeclaration","scope":1230,"src":"2790:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1204,"name":"address","nodeType":"ElementaryTypeName","src":"2790:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1207,"mutability":"mutable","name":"value","nameLocation":"2813:5:4","nodeType":"VariableDeclaration","scope":1230,"src":"2805:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1206,"name":"uint256","nodeType":"ElementaryTypeName","src":"2805:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2789:30:4"},"returnParameters":{"id":1211,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1210,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1230,"src":"2849:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1209,"name":"uint256","nodeType":"ElementaryTypeName","src":"2849:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2848:9:4"},"scope":1387,"src":"2772:232:4","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":1246,"nodeType":"Block","src":"3481:138:4","statements":[{"expression":{"id":1240,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1233,"src":"3574:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1241,"nodeType":"ExpressionStatement","src":"3574:5:4"},{"expression":{"id":1242,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1235,"src":"3589:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1243,"nodeType":"ExpressionStatement","src":"3589:5:4"},{"expression":{"hexValue":"30","id":1244,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3611:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":1239,"id":1245,"nodeType":"Return","src":"3604:8:4"}]},"documentation":{"id":1231,"nodeType":"StructuredDocumentation","src":"3010:377:4","text":" @dev Returns the fee applied when doing flash loans. By default this\n implementation has 0 fees. This function can be overloaded to make\n the flash loan mechanism deflationary.\n @param token The token to be flash loaned.\n @param value The amount of tokens to be loaned.\n @return The fees applied to the corresponding flash loan."},"id":1247,"implemented":true,"kind":"function","modifiers":[],"name":"_flashFee","nameLocation":"3401:9:4","nodeType":"FunctionDefinition","parameters":{"id":1236,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1233,"mutability":"mutable","name":"token","nameLocation":"3419:5:4","nodeType":"VariableDeclaration","scope":1247,"src":"3411:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1232,"name":"address","nodeType":"ElementaryTypeName","src":"3411:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1235,"mutability":"mutable","name":"value","nameLocation":"3434:5:4","nodeType":"VariableDeclaration","scope":1247,"src":"3426:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1234,"name":"uint256","nodeType":"ElementaryTypeName","src":"3426:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3410:30:4"},"returnParameters":{"id":1239,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1238,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1247,"src":"3472:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1237,"name":"uint256","nodeType":"ElementaryTypeName","src":"3472:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3471:9:4"},"scope":1387,"src":"3392:227:4","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1258,"nodeType":"Block","src":"4007:34:4","statements":[{"expression":{"arguments":[{"hexValue":"30","id":1255,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4032:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1254,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4024:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1253,"name":"address","nodeType":"ElementaryTypeName","src":"4024:7:4","typeDescriptions":{}}},"id":1256,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4024:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1252,"id":1257,"nodeType":"Return","src":"4017:17:4"}]},"documentation":{"id":1248,"nodeType":"StructuredDocumentation","src":"3625:308:4","text":" @dev Returns the receiver address of the flash fee. By default this\n implementation returns the address(0) which means the fee amount will be burnt.\n This function can be overloaded to change the fee receiver.\n @return The address for which the flash fee will be sent to."},"id":1259,"implemented":true,"kind":"function","modifiers":[],"name":"_flashFeeReceiver","nameLocation":"3947:17:4","nodeType":"FunctionDefinition","parameters":{"id":1249,"nodeType":"ParameterList","parameters":[],"src":"3964:2:4"},"returnParameters":{"id":1252,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1251,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1259,"src":"3998:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1250,"name":"address","nodeType":"ElementaryTypeName","src":"3998:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3997:9:4"},"scope":1387,"src":"3938:103:4","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[2344],"body":{"id":1385,"nodeType":"Block","src":"5266:792:4","statements":[{"assignments":[1275],"declarations":[{"constant":false,"id":1275,"mutability":"mutable","name":"maxLoan","nameLocation":"5284:7:4","nodeType":"VariableDeclaration","scope":1385,"src":"5276:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1274,"name":"uint256","nodeType":"ElementaryTypeName","src":"5276:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1279,"initialValue":{"arguments":[{"id":1277,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1265,"src":"5307:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1276,"name":"maxFlashLoan","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1202,"src":"5294:12:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":1278,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5294:19:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5276:37:4"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1282,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1280,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1267,"src":"5327:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1281,"name":"maxLoan","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1275,"src":"5335:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5327:15:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1288,"nodeType":"IfStatement","src":"5323:84:4","trueBody":{"id":1287,"nodeType":"Block","src":"5344:63:4","statements":[{"errorCall":{"arguments":[{"id":1284,"name":"maxLoan","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1275,"src":"5388:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1283,"name":"ERC3156ExceededMaxLoan","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1159,"src":"5365:22:4","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":1285,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5365:31:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1286,"nodeType":"RevertStatement","src":"5358:38:4"}]}},{"assignments":[1290],"declarations":[{"constant":false,"id":1290,"mutability":"mutable","name":"fee","nameLocation":"5424:3:4","nodeType":"VariableDeclaration","scope":1385,"src":"5416:11:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1289,"name":"uint256","nodeType":"ElementaryTypeName","src":"5416:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1295,"initialValue":{"arguments":[{"id":1292,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1265,"src":"5439:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1293,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1267,"src":"5446:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1291,"name":"flashFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1230,"src":"5430:8:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,uint256) view returns (uint256)"}},"id":1294,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5430:22:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5416:36:4"},{"expression":{"arguments":[{"arguments":[{"id":1299,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1263,"src":"5476:8:4","typeDescriptions":{"typeIdentifier":"t_contract$_IERC3156FlashBorrower_$2306","typeString":"contract IERC3156FlashBorrower"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC3156FlashBorrower_$2306","typeString":"contract IERC3156FlashBorrower"}],"id":1298,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5468:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1297,"name":"address","nodeType":"ElementaryTypeName","src":"5468:7:4","typeDescriptions":{}}},"id":1300,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5468:17:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1301,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1267,"src":"5487:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1296,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":897,"src":"5462:5:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1302,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5462:31:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1303,"nodeType":"ExpressionStatement","src":"5462:31:4"},{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1314,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1306,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1637,"src":"5528:10:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1307,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5528:12:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1308,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1265,"src":"5542:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1309,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1267,"src":"5549:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1310,"name":"fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1290,"src":"5556:3:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1311,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1269,"src":"5561:4:4","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"expression":{"id":1304,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1263,"src":"5507:8:4","typeDescriptions":{"typeIdentifier":"t_contract$_IERC3156FlashBorrower_$2306","typeString":"contract IERC3156FlashBorrower"}},"id":1305,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5516:11:4","memberName":"onFlashLoan","nodeType":"MemberAccess","referencedDeclaration":2305,"src":"5507:20:4","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (address,address,uint256,uint256,bytes memory) external returns (bytes32)"}},"id":1312,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5507:59:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1313,"name":"RETURN_VALUE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1149,"src":"5570:12:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"5507:75:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1323,"nodeType":"IfStatement","src":"5503:154:4","trueBody":{"id":1322,"nodeType":"Block","src":"5584:73:4","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":1318,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1263,"src":"5636:8:4","typeDescriptions":{"typeIdentifier":"t_contract$_IERC3156FlashBorrower_$2306","typeString":"contract IERC3156FlashBorrower"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC3156FlashBorrower_$2306","typeString":"contract IERC3156FlashBorrower"}],"id":1317,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5628:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1316,"name":"address","nodeType":"ElementaryTypeName","src":"5628:7:4","typeDescriptions":{}}},"id":1319,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5628:17:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1315,"name":"ERC3156InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1164,"src":"5605:22:4","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1320,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5605:41:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1321,"nodeType":"RevertStatement","src":"5598:48:4"}]}},{"assignments":[1325],"declarations":[{"constant":false,"id":1325,"mutability":"mutable","name":"flashFeeReceiver","nameLocation":"5674:16:4","nodeType":"VariableDeclaration","scope":1385,"src":"5666:24:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1324,"name":"address","nodeType":"ElementaryTypeName","src":"5666:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1328,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1326,"name":"_flashFeeReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1259,"src":"5693:17:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1327,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5693:19:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5666:46:4"},{"expression":{"arguments":[{"arguments":[{"id":1332,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1263,"src":"5746:8:4","typeDescriptions":{"typeIdentifier":"t_contract$_IERC3156FlashBorrower_$2306","typeString":"contract IERC3156FlashBorrower"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC3156FlashBorrower_$2306","typeString":"contract IERC3156FlashBorrower"}],"id":1331,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5738:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1330,"name":"address","nodeType":"ElementaryTypeName","src":"5738:7:4","typeDescriptions":{}}},"id":1333,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5738:17:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":1336,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5765:4:4","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20FlashMintUpgradeable_$1387","typeString":"contract ERC20FlashMintUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ERC20FlashMintUpgradeable_$1387","typeString":"contract ERC20FlashMintUpgradeable"}],"id":1335,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5757:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1334,"name":"address","nodeType":"ElementaryTypeName","src":"5757:7:4","typeDescriptions":{}}},"id":1337,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5757:13:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1340,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1338,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1267,"src":"5772:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":1339,"name":"fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1290,"src":"5780:3:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5772:11:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1329,"name":"_spendAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1064,"src":"5722:15:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1341,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5722:62:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1342,"nodeType":"ExpressionStatement","src":"5722:62:4"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1352,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1345,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1343,"name":"fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1290,"src":"5798:3:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1344,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5805:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5798:8:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1351,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1346,"name":"flashFeeReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1325,"src":"5810:16:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1349,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5838:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1348,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5830:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1347,"name":"address","nodeType":"ElementaryTypeName","src":"5830:7:4","typeDescriptions":{}}},"id":1350,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5830:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5810:30:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5798:42:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1381,"nodeType":"Block","src":"5910:121:4","statements":[{"expression":{"arguments":[{"arguments":[{"id":1367,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1263,"src":"5938:8:4","typeDescriptions":{"typeIdentifier":"t_contract$_IERC3156FlashBorrower_$2306","typeString":"contract IERC3156FlashBorrower"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC3156FlashBorrower_$2306","typeString":"contract IERC3156FlashBorrower"}],"id":1366,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5930:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1365,"name":"address","nodeType":"ElementaryTypeName","src":"5930:7:4","typeDescriptions":{}}},"id":1368,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5930:17:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1369,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1267,"src":"5949:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1364,"name":"_burn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":930,"src":"5924:5:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1370,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5924:31:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1371,"nodeType":"ExpressionStatement","src":"5924:31:4"},{"expression":{"arguments":[{"arguments":[{"id":1375,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1263,"src":"5987:8:4","typeDescriptions":{"typeIdentifier":"t_contract$_IERC3156FlashBorrower_$2306","typeString":"contract IERC3156FlashBorrower"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC3156FlashBorrower_$2306","typeString":"contract IERC3156FlashBorrower"}],"id":1374,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5979:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1373,"name":"address","nodeType":"ElementaryTypeName","src":"5979:7:4","typeDescriptions":{}}},"id":1376,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5979:17:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1377,"name":"flashFeeReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1325,"src":"5998:16:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1378,"name":"fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1290,"src":"6016:3:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1372,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":772,"src":"5969:9:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1379,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5969:51:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1380,"nodeType":"ExpressionStatement","src":"5969:51:4"}]},"id":1382,"nodeType":"IfStatement","src":"5794:237:4","trueBody":{"id":1363,"nodeType":"Block","src":"5842:62:4","statements":[{"expression":{"arguments":[{"arguments":[{"id":1356,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1263,"src":"5870:8:4","typeDescriptions":{"typeIdentifier":"t_contract$_IERC3156FlashBorrower_$2306","typeString":"contract IERC3156FlashBorrower"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC3156FlashBorrower_$2306","typeString":"contract IERC3156FlashBorrower"}],"id":1355,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5862:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1354,"name":"address","nodeType":"ElementaryTypeName","src":"5862:7:4","typeDescriptions":{}}},"id":1357,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5862:17:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1360,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1358,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1267,"src":"5881:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":1359,"name":"fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1290,"src":"5889:3:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5881:11:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1353,"name":"_burn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":930,"src":"5856:5:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1361,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5856:37:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1362,"nodeType":"ExpressionStatement","src":"5856:37:4"}]}},{"expression":{"hexValue":"74727565","id":1383,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6047:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1273,"id":1384,"nodeType":"Return","src":"6040:11:4"}]},"documentation":{"id":1260,"nodeType":"StructuredDocumentation","src":"4047:760:4","text":" @dev Performs a flash loan. New tokens are minted and sent to the\n `receiver`, who is required to implement the {IERC3156FlashBorrower}\n interface. By the end of the flash loan, the receiver is expected to own\n value + fee tokens and have them approved back to the token contract itself so\n they can be burned.\n @param receiver The receiver of the flash loan. Should implement the\n {IERC3156FlashBorrower-onFlashLoan} interface.\n @param token The token to be flash loaned. Only `address(this)` is\n supported.\n @param value The amount of tokens to be loaned.\n @param data An arbitrary datafield that is passed to the receiver.\n @return `true` if the flash loan was successful."},"functionSelector":"5cffe9de","id":1386,"implemented":true,"kind":"function","modifiers":[],"name":"flashLoan","nameLocation":"5105:9:4","nodeType":"FunctionDefinition","parameters":{"id":1270,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1263,"mutability":"mutable","name":"receiver","nameLocation":"5146:8:4","nodeType":"VariableDeclaration","scope":1386,"src":"5124:30:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC3156FlashBorrower_$2306","typeString":"contract IERC3156FlashBorrower"},"typeName":{"id":1262,"nodeType":"UserDefinedTypeName","pathNode":{"id":1261,"name":"IERC3156FlashBorrower","nameLocations":["5124:21:4"],"nodeType":"IdentifierPath","referencedDeclaration":2306,"src":"5124:21:4"},"referencedDeclaration":2306,"src":"5124:21:4","typeDescriptions":{"typeIdentifier":"t_contract$_IERC3156FlashBorrower_$2306","typeString":"contract IERC3156FlashBorrower"}},"visibility":"internal"},{"constant":false,"id":1265,"mutability":"mutable","name":"token","nameLocation":"5172:5:4","nodeType":"VariableDeclaration","scope":1386,"src":"5164:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1264,"name":"address","nodeType":"ElementaryTypeName","src":"5164:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1267,"mutability":"mutable","name":"value","nameLocation":"5195:5:4","nodeType":"VariableDeclaration","scope":1386,"src":"5187:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1266,"name":"uint256","nodeType":"ElementaryTypeName","src":"5187:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1269,"mutability":"mutable","name":"data","nameLocation":"5225:4:4","nodeType":"VariableDeclaration","scope":1386,"src":"5210:19:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1268,"name":"bytes","nodeType":"ElementaryTypeName","src":"5210:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5114:121:4"},"returnParameters":{"id":1273,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1272,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1386,"src":"5260:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1271,"name":"bool","nodeType":"ElementaryTypeName","src":"5260:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5259:6:4"},"scope":1387,"src":"5096:962:4","stateMutability":"nonpayable","virtual":true,"visibility":"public"}],"scope":1388,"src":"1051:5009:4","usedErrors":[211,214,1154,1159,1164,2382,2387,2392,2401,2406,2411],"usedEvents":[219,2519,2528]}],"src":"125:5936:4"},"id":4},"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PausableUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PausableUpgradeable.sol","exportedSymbols":{"ERC20PausableUpgradeable":[1440],"ERC20Upgradeable":[1065],"Initializable":[448],"PausableUpgradeable":[1942]},"id":1441,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1389,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"124:24:5"},{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol","file":"../ERC20Upgradeable.sol","id":1391,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1441,"sourceUnit":1066,"src":"150:57:5","symbolAliases":[{"foreign":{"id":1390,"name":"ERC20Upgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1065,"src":"158:16:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol","file":"../../../utils/PausableUpgradeable.sol","id":1393,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1441,"sourceUnit":1943,"src":"208:75:5","symbolAliases":[{"foreign":{"id":1392,"name":"PausableUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1942,"src":"216:19:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../../../proxy/utils/Initializable.sol","id":1395,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1441,"sourceUnit":449,"src":"284:69:5","symbolAliases":[{"foreign":{"id":1394,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":448,"src":"292:13:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1397,"name":"Initializable","nameLocations":["1089:13:5"],"nodeType":"IdentifierPath","referencedDeclaration":448,"src":"1089:13:5"},"id":1398,"nodeType":"InheritanceSpecifier","src":"1089:13:5"},{"baseName":{"id":1399,"name":"ERC20Upgradeable","nameLocations":["1104:16:5"],"nodeType":"IdentifierPath","referencedDeclaration":1065,"src":"1104:16:5"},"id":1400,"nodeType":"InheritanceSpecifier","src":"1104:16:5"},{"baseName":{"id":1401,"name":"PausableUpgradeable","nameLocations":["1122:19:5"],"nodeType":"IdentifierPath","referencedDeclaration":1942,"src":"1122:19:5"},"id":1402,"nodeType":"InheritanceSpecifier","src":"1122:19:5"}],"canonicalName":"ERC20PausableUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":1396,"nodeType":"StructuredDocumentation","src":"355:687:5","text":" @dev ERC20 token with pausable token transfers, minting and burning.\n Useful for scenarios such as preventing trades until the end of an evaluation\n period, or having an emergency switch for freezing all token transfers in the\n event of a large bug.\n IMPORTANT: This contract does not include public pause and unpause functions. In\n addition to inheriting this contract, you must define both functions, invoking the\n {Pausable-_pause} and {Pausable-_unpause} internal functions, with appropriate\n access control, e.g. using {AccessControl} or {Ownable}. Not doing so will\n make the contract pause mechanism of the contract unreachable, and thus unusable."},"fullyImplemented":true,"id":1440,"linearizedBaseContracts":[1440,1942,1065,2412,2611,2585,1655,448],"name":"ERC20PausableUpgradeable","nameLocation":"1061:24:5","nodeType":"ContractDefinition","nodes":[{"body":{"id":1410,"nodeType":"Block","src":"1206:44:5","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1407,"name":"__Pausable_init_unchained","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1836,"src":"1216:25:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":1408,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1216:27:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1409,"nodeType":"ExpressionStatement","src":"1216:27:5"}]},"id":1411,"implemented":true,"kind":"function","modifiers":[{"id":1405,"kind":"modifierInvocation","modifierName":{"id":1404,"name":"onlyInitializing","nameLocations":["1189:16:5"],"nodeType":"IdentifierPath","referencedDeclaration":357,"src":"1189:16:5"},"nodeType":"ModifierInvocation","src":"1189:16:5"}],"name":"__ERC20Pausable_init","nameLocation":"1157:20:5","nodeType":"FunctionDefinition","parameters":{"id":1403,"nodeType":"ParameterList","parameters":[],"src":"1177:2:5"},"returnParameters":{"id":1406,"nodeType":"ParameterList","parameters":[],"src":"1206:0:5"},"scope":1440,"src":"1148:102:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1416,"nodeType":"Block","src":"1324:7:5","statements":[]},"id":1417,"implemented":true,"kind":"function","modifiers":[{"id":1414,"kind":"modifierInvocation","modifierName":{"id":1413,"name":"onlyInitializing","nameLocations":["1307:16:5"],"nodeType":"IdentifierPath","referencedDeclaration":357,"src":"1307:16:5"},"nodeType":"ModifierInvocation","src":"1307:16:5"}],"name":"__ERC20Pausable_init_unchained","nameLocation":"1265:30:5","nodeType":"FunctionDefinition","parameters":{"id":1412,"nodeType":"ParameterList","parameters":[],"src":"1295:2:5"},"returnParameters":{"id":1415,"nodeType":"ParameterList","parameters":[],"src":"1324:0:5"},"scope":1440,"src":"1256:75:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[864],"body":{"id":1438,"nodeType":"Block","src":"1560:47:5","statements":[{"expression":{"arguments":[{"id":1433,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1420,"src":"1584:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1434,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1422,"src":"1590:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1435,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1424,"src":"1594:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1430,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1570:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC20PausableUpgradeable_$1440_$","typeString":"type(contract super ERC20PausableUpgradeable)"}},"id":1432,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1576:7:5","memberName":"_update","nodeType":"MemberAccess","referencedDeclaration":864,"src":"1570:13:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1436,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1570:30:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1437,"nodeType":"ExpressionStatement","src":"1570:30:5"}]},"documentation":{"id":1418,"nodeType":"StructuredDocumentation","src":"1336:121:5","text":" @dev See {ERC20-_update}.\n Requirements:\n - the contract must not be paused."},"id":1439,"implemented":true,"kind":"function","modifiers":[{"id":1428,"kind":"modifierInvocation","modifierName":{"id":1427,"name":"whenNotPaused","nameLocations":["1546:13:5"],"nodeType":"IdentifierPath","referencedDeclaration":1844,"src":"1546:13:5"},"nodeType":"ModifierInvocation","src":"1546:13:5"}],"name":"_update","nameLocation":"1471:7:5","nodeType":"FunctionDefinition","overrides":{"id":1426,"nodeType":"OverrideSpecifier","overrides":[],"src":"1537:8:5"},"parameters":{"id":1425,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1420,"mutability":"mutable","name":"from","nameLocation":"1487:4:5","nodeType":"VariableDeclaration","scope":1439,"src":"1479:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1419,"name":"address","nodeType":"ElementaryTypeName","src":"1479:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1422,"mutability":"mutable","name":"to","nameLocation":"1501:2:5","nodeType":"VariableDeclaration","scope":1439,"src":"1493:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1421,"name":"address","nodeType":"ElementaryTypeName","src":"1493:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1424,"mutability":"mutable","name":"value","nameLocation":"1513:5:5","nodeType":"VariableDeclaration","scope":1439,"src":"1505:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1423,"name":"uint256","nodeType":"ElementaryTypeName","src":"1505:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1478:41:5"},"returnParameters":{"id":1429,"nodeType":"ParameterList","parameters":[],"src":"1560:0:5"},"scope":1440,"src":"1462:145:5","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":1441,"src":"1043:566:5","usedErrors":[211,214,1805,1808,2382,2387,2392,2401,2406,2411],"usedEvents":[219,1797,1802,2519,2528]}],"src":"124:1486:5"},"id":5},"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PermitUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PermitUpgradeable.sol","exportedSymbols":{"ECDSA":[3250],"EIP712Upgradeable":[2286],"ERC20PermitUpgradeable":[1609],"ERC20Upgradeable":[1065],"IERC20Permit":[2647],"Initializable":[448],"NoncesUpgradeable":[1766]},"id":1610,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1442,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"122:24:6"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol","file":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol","id":1444,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1610,"sourceUnit":2648,"src":"148:93:6","symbolAliases":[{"foreign":{"id":1443,"name":"IERC20Permit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2647,"src":"156:12:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol","file":"../ERC20Upgradeable.sol","id":1446,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1610,"sourceUnit":1066,"src":"242:57:6","symbolAliases":[{"foreign":{"id":1445,"name":"ERC20Upgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1065,"src":"250:16:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","file":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","id":1448,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1610,"sourceUnit":3251,"src":"300:75:6","symbolAliases":[{"foreign":{"id":1447,"name":"ECDSA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3250,"src":"308:5:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol","file":"../../../utils/cryptography/EIP712Upgradeable.sol","id":1450,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1610,"sourceUnit":2287,"src":"376:84:6","symbolAliases":[{"foreign":{"id":1449,"name":"EIP712Upgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2286,"src":"384:17:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/NoncesUpgradeable.sol","file":"../../../utils/NoncesUpgradeable.sol","id":1452,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1610,"sourceUnit":1767,"src":"461:71:6","symbolAliases":[{"foreign":{"id":1451,"name":"NoncesUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1766,"src":"469:17:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../../../proxy/utils/Initializable.sol","id":1454,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1610,"sourceUnit":449,"src":"533:69:6","symbolAliases":[{"foreign":{"id":1453,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":448,"src":"541:13:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1456,"name":"Initializable","nameLocations":["1136:13:6"],"nodeType":"IdentifierPath","referencedDeclaration":448,"src":"1136:13:6"},"id":1457,"nodeType":"InheritanceSpecifier","src":"1136:13:6"},{"baseName":{"id":1458,"name":"ERC20Upgradeable","nameLocations":["1151:16:6"],"nodeType":"IdentifierPath","referencedDeclaration":1065,"src":"1151:16:6"},"id":1459,"nodeType":"InheritanceSpecifier","src":"1151:16:6"},{"baseName":{"id":1460,"name":"IERC20Permit","nameLocations":["1169:12:6"],"nodeType":"IdentifierPath","referencedDeclaration":2647,"src":"1169:12:6"},"id":1461,"nodeType":"InheritanceSpecifier","src":"1169:12:6"},{"baseName":{"id":1462,"name":"EIP712Upgradeable","nameLocations":["1183:17:6"],"nodeType":"IdentifierPath","referencedDeclaration":2286,"src":"1183:17:6"},"id":1463,"nodeType":"InheritanceSpecifier","src":"1183:17:6"},{"baseName":{"id":1464,"name":"NoncesUpgradeable","nameLocations":["1202:17:6"],"nodeType":"IdentifierPath","referencedDeclaration":1766,"src":"1202:17:6"},"id":1465,"nodeType":"InheritanceSpecifier","src":"1202:17:6"}],"canonicalName":"ERC20PermitUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":1455,"nodeType":"StructuredDocumentation","src":"604:487:6","text":" @dev Implementation of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all."},"fullyImplemented":true,"id":1609,"linearizedBaseContracts":[1609,1766,2286,2370,2647,1065,2412,2611,2585,1655,448],"name":"ERC20PermitUpgradeable","nameLocation":"1110:22:6","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":1470,"mutability":"constant","name":"PERMIT_TYPEHASH","nameLocation":"1251:15:6","nodeType":"VariableDeclaration","scope":1609,"src":"1226:146:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1466,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1226:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"5065726d69742861646472657373206f776e65722c61646472657373207370656e6465722c75696e743235362076616c75652c75696e74323536206e6f6e63652c75696e7432353620646561646c696e6529","id":1468,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1287:84:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9","typeString":"literal_string \"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\""},"value":"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9","typeString":"literal_string \"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\""}],"id":1467,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1277:9:6","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1469,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1277:95:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"documentation":{"id":1471,"nodeType":"StructuredDocumentation","src":"1379:52:6","text":" @dev Permit deadline has expired."},"errorSelector":"62791302","id":1475,"name":"ERC2612ExpiredSignature","nameLocation":"1442:23:6","nodeType":"ErrorDefinition","parameters":{"id":1474,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1473,"mutability":"mutable","name":"deadline","nameLocation":"1474:8:6","nodeType":"VariableDeclaration","scope":1475,"src":"1466:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1472,"name":"uint256","nodeType":"ElementaryTypeName","src":"1466:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1465:18:6"},"src":"1436:48:6"},{"documentation":{"id":1476,"nodeType":"StructuredDocumentation","src":"1490:45:6","text":" @dev Mismatched signature."},"errorSelector":"4b800e46","id":1482,"name":"ERC2612InvalidSigner","nameLocation":"1546:20:6","nodeType":"ErrorDefinition","parameters":{"id":1481,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1478,"mutability":"mutable","name":"signer","nameLocation":"1575:6:6","nodeType":"VariableDeclaration","scope":1482,"src":"1567:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1477,"name":"address","nodeType":"ElementaryTypeName","src":"1567:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1480,"mutability":"mutable","name":"owner","nameLocation":"1591:5:6","nodeType":"VariableDeclaration","scope":1482,"src":"1583:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1479,"name":"address","nodeType":"ElementaryTypeName","src":"1583:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1566:31:6"},"src":"1540:58:6"},{"body":{"id":1495,"nodeType":"Block","src":"1903:51:6","statements":[{"expression":{"arguments":[{"id":1491,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1485,"src":"1937:4:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"31","id":1492,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1943:3:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6","typeString":"literal_string \"1\""},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6","typeString":"literal_string \"1\""}],"id":1490,"name":"__EIP712_init_unchained","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2039,"src":"1913:23:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory,string memory)"}},"id":1493,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1913:34:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1494,"nodeType":"ExpressionStatement","src":"1913:34:6"}]},"documentation":{"id":1483,"nodeType":"StructuredDocumentation","src":"1604:220:6","text":" @dev Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\"1\"`.\n It's a good idea to use the same `name` that is defined as the ERC20 token name."},"id":1496,"implemented":true,"kind":"function","modifiers":[{"id":1488,"kind":"modifierInvocation","modifierName":{"id":1487,"name":"onlyInitializing","nameLocations":["1886:16:6"],"nodeType":"IdentifierPath","referencedDeclaration":357,"src":"1886:16:6"},"nodeType":"ModifierInvocation","src":"1886:16:6"}],"name":"__ERC20Permit_init","nameLocation":"1838:18:6","nodeType":"FunctionDefinition","parameters":{"id":1486,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1485,"mutability":"mutable","name":"name","nameLocation":"1871:4:6","nodeType":"VariableDeclaration","scope":1496,"src":"1857:18:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1484,"name":"string","nodeType":"ElementaryTypeName","src":"1857:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1856:20:6"},"returnParameters":{"id":1489,"nodeType":"ParameterList","parameters":[],"src":"1903:0:6"},"scope":1609,"src":"1829:125:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1503,"nodeType":"Block","src":"2039:2:6","statements":[]},"id":1504,"implemented":true,"kind":"function","modifiers":[{"id":1501,"kind":"modifierInvocation","modifierName":{"id":1500,"name":"onlyInitializing","nameLocations":["2022:16:6"],"nodeType":"IdentifierPath","referencedDeclaration":357,"src":"2022:16:6"},"nodeType":"ModifierInvocation","src":"2022:16:6"}],"name":"__ERC20Permit_init_unchained","nameLocation":"1969:28:6","nodeType":"FunctionDefinition","parameters":{"id":1499,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1498,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1504,"src":"1998:13:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1497,"name":"string","nodeType":"ElementaryTypeName","src":"1998:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1997:15:6"},"returnParameters":{"id":1502,"nodeType":"ParameterList","parameters":[],"src":"2039:0:6"},"scope":1609,"src":"1960:81:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[2632],"body":{"id":1580,"nodeType":"Block","src":"2284:483:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1525,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1522,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"2298:5:6","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1523,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2304:9:6","memberName":"timestamp","nodeType":"MemberAccess","src":"2298:15:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1524,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1513,"src":"2316:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2298:26:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1531,"nodeType":"IfStatement","src":"2294:97:6","trueBody":{"id":1530,"nodeType":"Block","src":"2326:65:6","statements":[{"errorCall":{"arguments":[{"id":1527,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1513,"src":"2371:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1526,"name":"ERC2612ExpiredSignature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1475,"src":"2347:23:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":1528,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2347:33:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1529,"nodeType":"RevertStatement","src":"2340:40:6"}]}},{"assignments":[1533],"declarations":[{"constant":false,"id":1533,"mutability":"mutable","name":"structHash","nameLocation":"2409:10:6","nodeType":"VariableDeclaration","scope":1580,"src":"2401:18:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1532,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2401:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1547,"initialValue":{"arguments":[{"arguments":[{"id":1537,"name":"PERMIT_TYPEHASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1470,"src":"2443:15:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1538,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1507,"src":"2460:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1539,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1509,"src":"2467:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1540,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1511,"src":"2476:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":1542,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1507,"src":"2493:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1541,"name":"_useNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1740,"src":"2483:9:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$_t_uint256_$","typeString":"function (address) returns (uint256)"}},"id":1543,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2483:16:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1544,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1513,"src":"2501:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1535,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2432:3:6","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1536,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2436:6:6","memberName":"encode","nodeType":"MemberAccess","src":"2432:10:6","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1545,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2432:78:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1534,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2422:9:6","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1546,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2422:89:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"2401:110:6"},{"assignments":[1549],"declarations":[{"constant":false,"id":1549,"mutability":"mutable","name":"hash","nameLocation":"2530:4:6","nodeType":"VariableDeclaration","scope":1580,"src":"2522:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1548,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2522:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1553,"initialValue":{"arguments":[{"id":1551,"name":"structHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1533,"src":"2554:10:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1550,"name":"_hashTypedDataV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2088,"src":"2537:16:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":1552,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2537:28:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"2522:43:6"},{"assignments":[1555],"declarations":[{"constant":false,"id":1555,"mutability":"mutable","name":"signer","nameLocation":"2584:6:6","nodeType":"VariableDeclaration","scope":1580,"src":"2576:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1554,"name":"address","nodeType":"ElementaryTypeName","src":"2576:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1563,"initialValue":{"arguments":[{"id":1558,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1549,"src":"2607:4:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1559,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1515,"src":"2613:1:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":1560,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1517,"src":"2616:1:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1561,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1519,"src":"2619:1:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1556,"name":"ECDSA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3250,"src":"2593:5:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ECDSA_$3250_$","typeString":"type(library ECDSA)"}},"id":1557,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2599:7:6","memberName":"recover","nodeType":"MemberAccess","referencedDeclaration":3200,"src":"2593:13:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":1562,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2593:28:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2576:45:6"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1566,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1564,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1555,"src":"2635:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1565,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1507,"src":"2645:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2635:15:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1573,"nodeType":"IfStatement","src":"2631:88:6","trueBody":{"id":1572,"nodeType":"Block","src":"2652:67:6","statements":[{"errorCall":{"arguments":[{"id":1568,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1555,"src":"2694:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1569,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1507,"src":"2702:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1567,"name":"ERC2612InvalidSigner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1482,"src":"2673:20:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_address_$returns$__$","typeString":"function (address,address) pure"}},"id":1570,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2673:35:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1571,"nodeType":"RevertStatement","src":"2666:42:6"}]}},{"expression":{"arguments":[{"id":1575,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1507,"src":"2738:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1576,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1509,"src":"2745:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1577,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1511,"src":"2754:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1574,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[948,1016],"referencedDeclaration":948,"src":"2729:8:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1578,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2729:31:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1579,"nodeType":"ExpressionStatement","src":"2729:31:6"}]},"documentation":{"id":1505,"nodeType":"StructuredDocumentation","src":"2047:43:6","text":" @inheritdoc IERC20Permit"},"functionSelector":"d505accf","id":1581,"implemented":true,"kind":"function","modifiers":[],"name":"permit","nameLocation":"2104:6:6","nodeType":"FunctionDefinition","parameters":{"id":1520,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1507,"mutability":"mutable","name":"owner","nameLocation":"2128:5:6","nodeType":"VariableDeclaration","scope":1581,"src":"2120:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1506,"name":"address","nodeType":"ElementaryTypeName","src":"2120:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1509,"mutability":"mutable","name":"spender","nameLocation":"2151:7:6","nodeType":"VariableDeclaration","scope":1581,"src":"2143:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1508,"name":"address","nodeType":"ElementaryTypeName","src":"2143:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1511,"mutability":"mutable","name":"value","nameLocation":"2176:5:6","nodeType":"VariableDeclaration","scope":1581,"src":"2168:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1510,"name":"uint256","nodeType":"ElementaryTypeName","src":"2168:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1513,"mutability":"mutable","name":"deadline","nameLocation":"2199:8:6","nodeType":"VariableDeclaration","scope":1581,"src":"2191:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1512,"name":"uint256","nodeType":"ElementaryTypeName","src":"2191:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1515,"mutability":"mutable","name":"v","nameLocation":"2223:1:6","nodeType":"VariableDeclaration","scope":1581,"src":"2217:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1514,"name":"uint8","nodeType":"ElementaryTypeName","src":"2217:5:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1517,"mutability":"mutable","name":"r","nameLocation":"2242:1:6","nodeType":"VariableDeclaration","scope":1581,"src":"2234:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1516,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2234:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1519,"mutability":"mutable","name":"s","nameLocation":"2261:1:6","nodeType":"VariableDeclaration","scope":1581,"src":"2253:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1518,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2253:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2110:158:6"},"returnParameters":{"id":1521,"nodeType":"ParameterList","parameters":[],"src":"2284:0:6"},"scope":1609,"src":"2095:672:6","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1718,2640],"body":{"id":1597,"nodeType":"Block","src":"2932:43:6","statements":[{"expression":{"arguments":[{"id":1594,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1584,"src":"2962:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1592,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2949:5:6","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC20PermitUpgradeable_$1609_$","typeString":"type(contract super ERC20PermitUpgradeable)"}},"id":1593,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2955:6:6","memberName":"nonces","nodeType":"MemberAccess","referencedDeclaration":1718,"src":"2949:12:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":1595,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2949:19:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1591,"id":1596,"nodeType":"Return","src":"2942:26:6"}]},"documentation":{"id":1582,"nodeType":"StructuredDocumentation","src":"2773:43:6","text":" @inheritdoc IERC20Permit"},"functionSelector":"7ecebe00","id":1598,"implemented":true,"kind":"function","modifiers":[],"name":"nonces","nameLocation":"2830:6:6","nodeType":"FunctionDefinition","overrides":{"id":1588,"nodeType":"OverrideSpecifier","overrides":[{"id":1586,"name":"IERC20Permit","nameLocations":["2881:12:6"],"nodeType":"IdentifierPath","referencedDeclaration":2647,"src":"2881:12:6"},{"id":1587,"name":"NoncesUpgradeable","nameLocations":["2895:17:6"],"nodeType":"IdentifierPath","referencedDeclaration":1766,"src":"2895:17:6"}],"src":"2872:41:6"},"parameters":{"id":1585,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1584,"mutability":"mutable","name":"owner","nameLocation":"2845:5:6","nodeType":"VariableDeclaration","scope":1598,"src":"2837:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1583,"name":"address","nodeType":"ElementaryTypeName","src":"2837:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2836:15:6"},"returnParameters":{"id":1591,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1590,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1598,"src":"2923:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1589,"name":"uint256","nodeType":"ElementaryTypeName","src":"2923:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2922:9:6"},"scope":1609,"src":"2821:154:6","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2646],"body":{"id":1607,"nodeType":"Block","src":"3150:44:6","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1604,"name":"_domainSeparatorV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2049,"src":"3167:18:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":1605,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3167:20:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1603,"id":1606,"nodeType":"Return","src":"3160:27:6"}]},"documentation":{"id":1599,"nodeType":"StructuredDocumentation","src":"2981:43:6","text":" @inheritdoc IERC20Permit"},"functionSelector":"3644e515","id":1608,"implemented":true,"kind":"function","modifiers":[],"name":"DOMAIN_SEPARATOR","nameLocation":"3091:16:6","nodeType":"FunctionDefinition","parameters":{"id":1600,"nodeType":"ParameterList","parameters":[],"src":"3107:2:6"},"returnParameters":{"id":1603,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1602,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1608,"src":"3141:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1601,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3141:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3140:9:6"},"scope":1609,"src":"3082:112:6","stateMutability":"view","virtual":true,"visibility":"external"}],"scope":1610,"src":"1092:2104:6","usedErrors":[211,214,1475,1482,1669,2382,2387,2392,2401,2406,2411,2913,2918,2923],"usedEvents":[219,2350,2519,2528]}],"src":"122:3075:6"},"id":6},"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","exportedSymbols":{"ContextUpgradeable":[1655],"Initializable":[448]},"id":1656,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1611,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:7"},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../proxy/utils/Initializable.sol","id":1613,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1656,"sourceUnit":449,"src":"126:63:7","symbolAliases":[{"foreign":{"id":1612,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":448,"src":"134:13:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1615,"name":"Initializable","nameLocations":["728:13:7"],"nodeType":"IdentifierPath","referencedDeclaration":448,"src":"728:13:7"},"id":1616,"nodeType":"InheritanceSpecifier","src":"728:13:7"}],"canonicalName":"ContextUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":1614,"nodeType":"StructuredDocumentation","src":"191:496:7","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":1655,"linearizedBaseContracts":[1655,448],"name":"ContextUpgradeable","nameLocation":"706:18:7","nodeType":"ContractDefinition","nodes":[{"body":{"id":1621,"nodeType":"Block","src":"800:7:7","statements":[]},"id":1622,"implemented":true,"kind":"function","modifiers":[{"id":1619,"kind":"modifierInvocation","modifierName":{"id":1618,"name":"onlyInitializing","nameLocations":["783:16:7"],"nodeType":"IdentifierPath","referencedDeclaration":357,"src":"783:16:7"},"nodeType":"ModifierInvocation","src":"783:16:7"}],"name":"__Context_init","nameLocation":"757:14:7","nodeType":"FunctionDefinition","parameters":{"id":1617,"nodeType":"ParameterList","parameters":[],"src":"771:2:7"},"returnParameters":{"id":1620,"nodeType":"ParameterList","parameters":[],"src":"800:0:7"},"scope":1655,"src":"748:59:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1627,"nodeType":"Block","src":"875:7:7","statements":[]},"id":1628,"implemented":true,"kind":"function","modifiers":[{"id":1625,"kind":"modifierInvocation","modifierName":{"id":1624,"name":"onlyInitializing","nameLocations":["858:16:7"],"nodeType":"IdentifierPath","referencedDeclaration":357,"src":"858:16:7"},"nodeType":"ModifierInvocation","src":"858:16:7"}],"name":"__Context_init_unchained","nameLocation":"822:24:7","nodeType":"FunctionDefinition","parameters":{"id":1623,"nodeType":"ParameterList","parameters":[],"src":"846:2:7"},"returnParameters":{"id":1626,"nodeType":"ParameterList","parameters":[],"src":"875:0:7"},"scope":1655,"src":"813:69:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1636,"nodeType":"Block","src":"949:34:7","statements":[{"expression":{"expression":{"id":1633,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"966:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1634,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"970:6:7","memberName":"sender","nodeType":"MemberAccess","src":"966:10:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1632,"id":1635,"nodeType":"Return","src":"959:17:7"}]},"id":1637,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"896:10:7","nodeType":"FunctionDefinition","parameters":{"id":1629,"nodeType":"ParameterList","parameters":[],"src":"906:2:7"},"returnParameters":{"id":1632,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1631,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1637,"src":"940:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1630,"name":"address","nodeType":"ElementaryTypeName","src":"940:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"939:9:7"},"scope":1655,"src":"887:96:7","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1645,"nodeType":"Block","src":"1056:32:7","statements":[{"expression":{"expression":{"id":1642,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1073:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1643,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1077:4:7","memberName":"data","nodeType":"MemberAccess","src":"1073:8:7","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":1641,"id":1644,"nodeType":"Return","src":"1066:15:7"}]},"id":1646,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"998:8:7","nodeType":"FunctionDefinition","parameters":{"id":1638,"nodeType":"ParameterList","parameters":[],"src":"1006:2:7"},"returnParameters":{"id":1641,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1640,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1646,"src":"1040:14:7","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1639,"name":"bytes","nodeType":"ElementaryTypeName","src":"1040:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1039:16:7"},"scope":1655,"src":"989:99:7","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1653,"nodeType":"Block","src":"1166:25:7","statements":[{"expression":{"hexValue":"30","id":1651,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1183:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":1650,"id":1652,"nodeType":"Return","src":"1176:8:7"}]},"id":1654,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"1103:20:7","nodeType":"FunctionDefinition","parameters":{"id":1647,"nodeType":"ParameterList","parameters":[],"src":"1123:2:7"},"returnParameters":{"id":1650,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1649,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1654,"src":"1157:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1648,"name":"uint256","nodeType":"ElementaryTypeName","src":"1157:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1156:9:7"},"scope":1655,"src":"1094:97:7","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":1656,"src":"688:505:7","usedErrors":[211,214],"usedEvents":[219]}],"src":"101:1093:7"},"id":7},"@openzeppelin/contracts-upgradeable/utils/NoncesUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/NoncesUpgradeable.sol","exportedSymbols":{"Initializable":[448],"NoncesUpgradeable":[1766]},"id":1767,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1657,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"99:24:8"},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../proxy/utils/Initializable.sol","id":1659,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1767,"sourceUnit":449,"src":"124:63:8","symbolAliases":[{"foreign":{"id":1658,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":448,"src":"132:13:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1661,"name":"Initializable","nameLocations":["312:13:8"],"nodeType":"IdentifierPath","referencedDeclaration":448,"src":"312:13:8"},"id":1662,"nodeType":"InheritanceSpecifier","src":"312:13:8"}],"canonicalName":"NoncesUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":1660,"nodeType":"StructuredDocumentation","src":"189:83:8","text":" @dev Provides tracking nonces for addresses. Nonces will only increment."},"fullyImplemented":true,"id":1766,"linearizedBaseContracts":[1766,448],"name":"NoncesUpgradeable","nameLocation":"291:17:8","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1663,"nodeType":"StructuredDocumentation","src":"332:90:8","text":" @dev The nonce used for an `account` is not the expected current nonce."},"errorSelector":"752d88c0","id":1669,"name":"InvalidAccountNonce","nameLocation":"433:19:8","nodeType":"ErrorDefinition","parameters":{"id":1668,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1665,"mutability":"mutable","name":"account","nameLocation":"461:7:8","nodeType":"VariableDeclaration","scope":1669,"src":"453:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1664,"name":"address","nodeType":"ElementaryTypeName","src":"453:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1667,"mutability":"mutable","name":"currentNonce","nameLocation":"478:12:8","nodeType":"VariableDeclaration","scope":1669,"src":"470:20:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1666,"name":"uint256","nodeType":"ElementaryTypeName","src":"470:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"452:39:8"},"src":"427:65:8"},{"canonicalName":"NoncesUpgradeable.NoncesStorage","documentation":{"id":1670,"nodeType":"StructuredDocumentation","src":"498:64:8","text":"@custom:storage-location erc7201:openzeppelin.storage.Nonces"},"id":1675,"members":[{"constant":false,"id":1674,"mutability":"mutable","name":"_nonces","nameLocation":"634:7:8","nodeType":"VariableDeclaration","scope":1675,"src":"598:43:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":1673,"keyName":"account","keyNameLocation":"614:7:8","keyType":{"id":1671,"name":"address","nodeType":"ElementaryTypeName","src":"606:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"598:35:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1672,"name":"uint256","nodeType":"ElementaryTypeName","src":"625:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"internal"}],"name":"NoncesStorage","nameLocation":"574:13:8","nodeType":"StructDefinition","scope":1766,"src":"567:81:8","visibility":"public"},{"constant":true,"id":1678,"mutability":"constant","name":"NoncesStorageLocation","nameLocation":"789:21:8","nodeType":"VariableDeclaration","scope":1766,"src":"764:115:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1676,"name":"bytes32","nodeType":"ElementaryTypeName","src":"764:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307835616234326365643632383838383235396330386163393864623165623063663730326663313530313334343331316438623130306364316266653462623030","id":1677,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"813:66:8","typeDescriptions":{"typeIdentifier":"t_rational_41026498920877473550552694860415970151284396403628511442111957027090812156672_by_1","typeString":"int_const 4102...(69 digits omitted)...6672"},"value":"0x5ab42ced628888259c08ac98db1eb0cf702fc1501344311d8b100cd1bfe4bb00"},"visibility":"private"},{"body":{"id":1685,"nodeType":"Block","src":"962:80:8","statements":[{"AST":{"nodeType":"YulBlock","src":"981:55:8","statements":[{"nodeType":"YulAssignment","src":"995:31:8","value":{"name":"NoncesStorageLocation","nodeType":"YulIdentifier","src":"1005:21:8"},"variableNames":[{"name":"$.slot","nodeType":"YulIdentifier","src":"995:6:8"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1682,"isOffset":false,"isSlot":true,"src":"995:6:8","suffix":"slot","valueSize":1},{"declaration":1678,"isOffset":false,"isSlot":false,"src":"1005:21:8","valueSize":1}],"id":1684,"nodeType":"InlineAssembly","src":"972:64:8"}]},"id":1686,"implemented":true,"kind":"function","modifiers":[],"name":"_getNoncesStorage","nameLocation":"895:17:8","nodeType":"FunctionDefinition","parameters":{"id":1679,"nodeType":"ParameterList","parameters":[],"src":"912:2:8"},"returnParameters":{"id":1683,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1682,"mutability":"mutable","name":"$","nameLocation":"959:1:8","nodeType":"VariableDeclaration","scope":1686,"src":"937:23:8","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_NoncesStorage_$1675_storage_ptr","typeString":"struct NoncesUpgradeable.NoncesStorage"},"typeName":{"id":1681,"nodeType":"UserDefinedTypeName","pathNode":{"id":1680,"name":"NoncesStorage","nameLocations":["937:13:8"],"nodeType":"IdentifierPath","referencedDeclaration":1675,"src":"937:13:8"},"referencedDeclaration":1675,"src":"937:13:8","typeDescriptions":{"typeIdentifier":"t_struct$_NoncesStorage_$1675_storage_ptr","typeString":"struct NoncesUpgradeable.NoncesStorage"}},"visibility":"internal"}],"src":"936:25:8"},"scope":1766,"src":"886:156:8","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":1691,"nodeType":"Block","src":"1099:7:8","statements":[]},"id":1692,"implemented":true,"kind":"function","modifiers":[{"id":1689,"kind":"modifierInvocation","modifierName":{"id":1688,"name":"onlyInitializing","nameLocations":["1082:16:8"],"nodeType":"IdentifierPath","referencedDeclaration":357,"src":"1082:16:8"},"nodeType":"ModifierInvocation","src":"1082:16:8"}],"name":"__Nonces_init","nameLocation":"1057:13:8","nodeType":"FunctionDefinition","parameters":{"id":1687,"nodeType":"ParameterList","parameters":[],"src":"1070:2:8"},"returnParameters":{"id":1690,"nodeType":"ParameterList","parameters":[],"src":"1099:0:8"},"scope":1766,"src":"1048:58:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1697,"nodeType":"Block","src":"1173:7:8","statements":[]},"id":1698,"implemented":true,"kind":"function","modifiers":[{"id":1695,"kind":"modifierInvocation","modifierName":{"id":1694,"name":"onlyInitializing","nameLocations":["1156:16:8"],"nodeType":"IdentifierPath","referencedDeclaration":357,"src":"1156:16:8"},"nodeType":"ModifierInvocation","src":"1156:16:8"}],"name":"__Nonces_init_unchained","nameLocation":"1121:23:8","nodeType":"FunctionDefinition","parameters":{"id":1693,"nodeType":"ParameterList","parameters":[],"src":"1144:2:8"},"returnParameters":{"id":1696,"nodeType":"ParameterList","parameters":[],"src":"1173:0:8"},"scope":1766,"src":"1112:68:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1717,"nodeType":"Block","src":"1328:95:8","statements":[{"assignments":[1708],"declarations":[{"constant":false,"id":1708,"mutability":"mutable","name":"$","nameLocation":"1360:1:8","nodeType":"VariableDeclaration","scope":1717,"src":"1338:23:8","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_NoncesStorage_$1675_storage_ptr","typeString":"struct NoncesUpgradeable.NoncesStorage"},"typeName":{"id":1707,"nodeType":"UserDefinedTypeName","pathNode":{"id":1706,"name":"NoncesStorage","nameLocations":["1338:13:8"],"nodeType":"IdentifierPath","referencedDeclaration":1675,"src":"1338:13:8"},"referencedDeclaration":1675,"src":"1338:13:8","typeDescriptions":{"typeIdentifier":"t_struct$_NoncesStorage_$1675_storage_ptr","typeString":"struct NoncesUpgradeable.NoncesStorage"}},"visibility":"internal"}],"id":1711,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1709,"name":"_getNoncesStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1686,"src":"1364:17:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_NoncesStorage_$1675_storage_ptr_$","typeString":"function () pure returns (struct NoncesUpgradeable.NoncesStorage storage pointer)"}},"id":1710,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1364:19:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_NoncesStorage_$1675_storage_ptr","typeString":"struct NoncesUpgradeable.NoncesStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"1338:45:8"},{"expression":{"baseExpression":{"expression":{"id":1712,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1708,"src":"1400:1:8","typeDescriptions":{"typeIdentifier":"t_struct$_NoncesStorage_$1675_storage_ptr","typeString":"struct NoncesUpgradeable.NoncesStorage storage pointer"}},"id":1713,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1402:7:8","memberName":"_nonces","nodeType":"MemberAccess","referencedDeclaration":1674,"src":"1400:9:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1715,"indexExpression":{"id":1714,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1701,"src":"1410:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1400:16:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1705,"id":1716,"nodeType":"Return","src":"1393:23:8"}]},"documentation":{"id":1699,"nodeType":"StructuredDocumentation","src":"1185:69:8","text":" @dev Returns the next unused nonce for an address."},"functionSelector":"7ecebe00","id":1718,"implemented":true,"kind":"function","modifiers":[],"name":"nonces","nameLocation":"1268:6:8","nodeType":"FunctionDefinition","parameters":{"id":1702,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1701,"mutability":"mutable","name":"owner","nameLocation":"1283:5:8","nodeType":"VariableDeclaration","scope":1718,"src":"1275:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1700,"name":"address","nodeType":"ElementaryTypeName","src":"1275:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1274:15:8"},"returnParameters":{"id":1705,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1704,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1718,"src":"1319:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1703,"name":"uint256","nodeType":"ElementaryTypeName","src":"1319:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1318:9:8"},"scope":1766,"src":"1259:164:8","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":1739,"nodeType":"Block","src":"1606:383:8","statements":[{"assignments":[1728],"declarations":[{"constant":false,"id":1728,"mutability":"mutable","name":"$","nameLocation":"1638:1:8","nodeType":"VariableDeclaration","scope":1739,"src":"1616:23:8","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_NoncesStorage_$1675_storage_ptr","typeString":"struct NoncesUpgradeable.NoncesStorage"},"typeName":{"id":1727,"nodeType":"UserDefinedTypeName","pathNode":{"id":1726,"name":"NoncesStorage","nameLocations":["1616:13:8"],"nodeType":"IdentifierPath","referencedDeclaration":1675,"src":"1616:13:8"},"referencedDeclaration":1675,"src":"1616:13:8","typeDescriptions":{"typeIdentifier":"t_struct$_NoncesStorage_$1675_storage_ptr","typeString":"struct NoncesUpgradeable.NoncesStorage"}},"visibility":"internal"}],"id":1731,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1729,"name":"_getNoncesStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1686,"src":"1642:17:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_NoncesStorage_$1675_storage_ptr_$","typeString":"function () pure returns (struct NoncesUpgradeable.NoncesStorage storage pointer)"}},"id":1730,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1642:19:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_NoncesStorage_$1675_storage_ptr","typeString":"struct NoncesUpgradeable.NoncesStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"1616:45:8"},{"id":1738,"nodeType":"UncheckedBlock","src":"1864:119:8","statements":[{"expression":{"id":1736,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"1954:18:8","subExpression":{"baseExpression":{"expression":{"id":1732,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1728,"src":"1954:1:8","typeDescriptions":{"typeIdentifier":"t_struct$_NoncesStorage_$1675_storage_ptr","typeString":"struct NoncesUpgradeable.NoncesStorage storage pointer"}},"id":1733,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1956:7:8","memberName":"_nonces","nodeType":"MemberAccess","referencedDeclaration":1674,"src":"1954:9:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1735,"indexExpression":{"id":1734,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1721,"src":"1964:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1954:16:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1725,"id":1737,"nodeType":"Return","src":"1947:25:8"}]}]},"documentation":{"id":1719,"nodeType":"StructuredDocumentation","src":"1429:103:8","text":" @dev Consumes a nonce.\n Returns the current value and increments nonce."},"id":1740,"implemented":true,"kind":"function","modifiers":[],"name":"_useNonce","nameLocation":"1546:9:8","nodeType":"FunctionDefinition","parameters":{"id":1722,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1721,"mutability":"mutable","name":"owner","nameLocation":"1564:5:8","nodeType":"VariableDeclaration","scope":1740,"src":"1556:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1720,"name":"address","nodeType":"ElementaryTypeName","src":"1556:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1555:15:8"},"returnParameters":{"id":1725,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1724,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1740,"src":"1597:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1723,"name":"uint256","nodeType":"ElementaryTypeName","src":"1597:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1596:9:8"},"scope":1766,"src":"1537:452:8","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1764,"nodeType":"Block","src":"2173:149:8","statements":[{"assignments":[1749],"declarations":[{"constant":false,"id":1749,"mutability":"mutable","name":"current","nameLocation":"2191:7:8","nodeType":"VariableDeclaration","scope":1764,"src":"2183:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1748,"name":"uint256","nodeType":"ElementaryTypeName","src":"2183:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1753,"initialValue":{"arguments":[{"id":1751,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1743,"src":"2211:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1750,"name":"_useNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1740,"src":"2201:9:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$_t_uint256_$","typeString":"function (address) returns (uint256)"}},"id":1752,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2201:16:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2183:34:8"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1756,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1754,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1745,"src":"2231:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1755,"name":"current","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1749,"src":"2240:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2231:16:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1763,"nodeType":"IfStatement","src":"2227:89:8","trueBody":{"id":1762,"nodeType":"Block","src":"2249:67:8","statements":[{"errorCall":{"arguments":[{"id":1758,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1743,"src":"2290:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1759,"name":"current","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1749,"src":"2297:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1757,"name":"InvalidAccountNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1669,"src":"2270:19:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256) pure"}},"id":1760,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2270:35:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1761,"nodeType":"RevertStatement","src":"2263:42:8"}]}}]},"documentation":{"id":1741,"nodeType":"StructuredDocumentation","src":"1995:100:8","text":" @dev Same as {_useNonce} but checking that `nonce` is the next valid for `owner`."},"id":1765,"implemented":true,"kind":"function","modifiers":[],"name":"_useCheckedNonce","nameLocation":"2109:16:8","nodeType":"FunctionDefinition","parameters":{"id":1746,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1743,"mutability":"mutable","name":"owner","nameLocation":"2134:5:8","nodeType":"VariableDeclaration","scope":1765,"src":"2126:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1742,"name":"address","nodeType":"ElementaryTypeName","src":"2126:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1745,"mutability":"mutable","name":"nonce","nameLocation":"2149:5:8","nodeType":"VariableDeclaration","scope":1765,"src":"2141:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1744,"name":"uint256","nodeType":"ElementaryTypeName","src":"2141:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2125:30:8"},"returnParameters":{"id":1747,"nodeType":"ParameterList","parameters":[],"src":"2173:0:8"},"scope":1766,"src":"2100:222:8","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":1767,"src":"273:2051:8","usedErrors":[211,214,1669],"usedEvents":[219]}],"src":"99:2226:8"},"id":8},"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol","exportedSymbols":{"ContextUpgradeable":[1655],"Initializable":[448],"PausableUpgradeable":[1942]},"id":1943,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1768,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"102:24:9"},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","file":"../utils/ContextUpgradeable.sol","id":1770,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1943,"sourceUnit":1656,"src":"128:67:9","symbolAliases":[{"foreign":{"id":1769,"name":"ContextUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1655,"src":"136:18:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../proxy/utils/Initializable.sol","id":1772,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1943,"sourceUnit":449,"src":"196:63:9","symbolAliases":[{"foreign":{"id":1771,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":448,"src":"204:13:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1774,"name":"Initializable","nameLocations":["742:13:9"],"nodeType":"IdentifierPath","referencedDeclaration":448,"src":"742:13:9"},"id":1775,"nodeType":"InheritanceSpecifier","src":"742:13:9"},{"baseName":{"id":1776,"name":"ContextUpgradeable","nameLocations":["757:18:9"],"nodeType":"IdentifierPath","referencedDeclaration":1655,"src":"757:18:9"},"id":1777,"nodeType":"InheritanceSpecifier","src":"757:18:9"}],"canonicalName":"PausableUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":1773,"nodeType":"StructuredDocumentation","src":"261:439:9","text":" @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."},"fullyImplemented":true,"id":1942,"linearizedBaseContracts":[1942,1655,448],"name":"PausableUpgradeable","nameLocation":"719:19:9","nodeType":"ContractDefinition","nodes":[{"canonicalName":"PausableUpgradeable.PausableStorage","documentation":{"id":1778,"nodeType":"StructuredDocumentation","src":"782:66:9","text":"@custom:storage-location erc7201:openzeppelin.storage.Pausable"},"id":1781,"members":[{"constant":false,"id":1780,"mutability":"mutable","name":"_paused","nameLocation":"891:7:9","nodeType":"VariableDeclaration","scope":1781,"src":"886:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1779,"name":"bool","nodeType":"ElementaryTypeName","src":"886:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"PausableStorage","nameLocation":"860:15:9","nodeType":"StructDefinition","scope":1942,"src":"853:52:9","visibility":"public"},{"constant":true,"id":1784,"mutability":"constant","name":"PausableStorageLocation","nameLocation":"1048:23:9","nodeType":"VariableDeclaration","scope":1942,"src":"1023:117:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1782,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1023:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307863643565643135633665313837653737653961656538383138346332316634663231383261623538323763623362376530376662656463643633663033333030","id":1783,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1074:66:9","typeDescriptions":{"typeIdentifier":"t_rational_92891662540554778686986514950364265630913525426840345632122912437671245656832_by_1","typeString":"int_const 9289...(69 digits omitted)...6832"},"value":"0xcd5ed15c6e187e77e9aee88184c21f4f2182ab5827cb3b7e07fbedcd63f03300"},"visibility":"private"},{"body":{"id":1791,"nodeType":"Block","src":"1227:82:9","statements":[{"AST":{"nodeType":"YulBlock","src":"1246:57:9","statements":[{"nodeType":"YulAssignment","src":"1260:33:9","value":{"name":"PausableStorageLocation","nodeType":"YulIdentifier","src":"1270:23:9"},"variableNames":[{"name":"$.slot","nodeType":"YulIdentifier","src":"1260:6:9"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1788,"isOffset":false,"isSlot":true,"src":"1260:6:9","suffix":"slot","valueSize":1},{"declaration":1784,"isOffset":false,"isSlot":false,"src":"1270:23:9","valueSize":1}],"id":1790,"nodeType":"InlineAssembly","src":"1237:66:9"}]},"id":1792,"implemented":true,"kind":"function","modifiers":[],"name":"_getPausableStorage","nameLocation":"1156:19:9","nodeType":"FunctionDefinition","parameters":{"id":1785,"nodeType":"ParameterList","parameters":[],"src":"1175:2:9"},"returnParameters":{"id":1789,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1788,"mutability":"mutable","name":"$","nameLocation":"1224:1:9","nodeType":"VariableDeclaration","scope":1792,"src":"1200:25:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_PausableStorage_$1781_storage_ptr","typeString":"struct PausableUpgradeable.PausableStorage"},"typeName":{"id":1787,"nodeType":"UserDefinedTypeName","pathNode":{"id":1786,"name":"PausableStorage","nameLocations":["1200:15:9"],"nodeType":"IdentifierPath","referencedDeclaration":1781,"src":"1200:15:9"},"referencedDeclaration":1781,"src":"1200:15:9","typeDescriptions":{"typeIdentifier":"t_struct$_PausableStorage_$1781_storage_ptr","typeString":"struct PausableUpgradeable.PausableStorage"}},"visibility":"internal"}],"src":"1199:27:9"},"scope":1942,"src":"1147:162:9","stateMutability":"pure","virtual":false,"visibility":"private"},{"anonymous":false,"documentation":{"id":1793,"nodeType":"StructuredDocumentation","src":"1315:73:9","text":" @dev Emitted when the pause is triggered by `account`."},"eventSelector":"62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258","id":1797,"name":"Paused","nameLocation":"1399:6:9","nodeType":"EventDefinition","parameters":{"id":1796,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1795,"indexed":false,"mutability":"mutable","name":"account","nameLocation":"1414:7:9","nodeType":"VariableDeclaration","scope":1797,"src":"1406:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1794,"name":"address","nodeType":"ElementaryTypeName","src":"1406:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1405:17:9"},"src":"1393:30:9"},{"anonymous":false,"documentation":{"id":1798,"nodeType":"StructuredDocumentation","src":"1429:70:9","text":" @dev Emitted when the pause is lifted by `account`."},"eventSelector":"5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa","id":1802,"name":"Unpaused","nameLocation":"1510:8:9","nodeType":"EventDefinition","parameters":{"id":1801,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1800,"indexed":false,"mutability":"mutable","name":"account","nameLocation":"1527:7:9","nodeType":"VariableDeclaration","scope":1802,"src":"1519:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1799,"name":"address","nodeType":"ElementaryTypeName","src":"1519:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1518:17:9"},"src":"1504:32:9"},{"documentation":{"id":1803,"nodeType":"StructuredDocumentation","src":"1542:76:9","text":" @dev The operation failed because the contract is paused."},"errorSelector":"d93c0665","id":1805,"name":"EnforcedPause","nameLocation":"1629:13:9","nodeType":"ErrorDefinition","parameters":{"id":1804,"nodeType":"ParameterList","parameters":[],"src":"1642:2:9"},"src":"1623:22:9"},{"documentation":{"id":1806,"nodeType":"StructuredDocumentation","src":"1651:80:9","text":" @dev The operation failed because the contract is not paused."},"errorSelector":"8dfc202b","id":1808,"name":"ExpectedPause","nameLocation":"1742:13:9","nodeType":"ErrorDefinition","parameters":{"id":1807,"nodeType":"ParameterList","parameters":[],"src":"1755:2:9"},"src":"1736:22:9"},{"body":{"id":1817,"nodeType":"Block","src":"1889:44:9","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1814,"name":"__Pausable_init_unchained","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1836,"src":"1899:25:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":1815,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1899:27:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1816,"nodeType":"ExpressionStatement","src":"1899:27:9"}]},"documentation":{"id":1809,"nodeType":"StructuredDocumentation","src":"1764:67:9","text":" @dev Initializes the contract in unpaused state."},"id":1818,"implemented":true,"kind":"function","modifiers":[{"id":1812,"kind":"modifierInvocation","modifierName":{"id":1811,"name":"onlyInitializing","nameLocations":["1872:16:9"],"nodeType":"IdentifierPath","referencedDeclaration":357,"src":"1872:16:9"},"nodeType":"ModifierInvocation","src":"1872:16:9"}],"name":"__Pausable_init","nameLocation":"1845:15:9","nodeType":"FunctionDefinition","parameters":{"id":1810,"nodeType":"ParameterList","parameters":[],"src":"1860:2:9"},"returnParameters":{"id":1813,"nodeType":"ParameterList","parameters":[],"src":"1889:0:9"},"scope":1942,"src":"1836:97:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1835,"nodeType":"Block","src":"2002:93:9","statements":[{"assignments":[1825],"declarations":[{"constant":false,"id":1825,"mutability":"mutable","name":"$","nameLocation":"2036:1:9","nodeType":"VariableDeclaration","scope":1835,"src":"2012:25:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_PausableStorage_$1781_storage_ptr","typeString":"struct PausableUpgradeable.PausableStorage"},"typeName":{"id":1824,"nodeType":"UserDefinedTypeName","pathNode":{"id":1823,"name":"PausableStorage","nameLocations":["2012:15:9"],"nodeType":"IdentifierPath","referencedDeclaration":1781,"src":"2012:15:9"},"referencedDeclaration":1781,"src":"2012:15:9","typeDescriptions":{"typeIdentifier":"t_struct$_PausableStorage_$1781_storage_ptr","typeString":"struct PausableUpgradeable.PausableStorage"}},"visibility":"internal"}],"id":1828,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1826,"name":"_getPausableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1792,"src":"2040:19:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_PausableStorage_$1781_storage_ptr_$","typeString":"function () pure returns (struct PausableUpgradeable.PausableStorage storage pointer)"}},"id":1827,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2040:21:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_PausableStorage_$1781_storage_ptr","typeString":"struct PausableUpgradeable.PausableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"2012:49:9"},{"expression":{"id":1833,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1829,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1825,"src":"2071:1:9","typeDescriptions":{"typeIdentifier":"t_struct$_PausableStorage_$1781_storage_ptr","typeString":"struct PausableUpgradeable.PausableStorage storage pointer"}},"id":1831,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"2073:7:9","memberName":"_paused","nodeType":"MemberAccess","referencedDeclaration":1780,"src":"2071:9:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":1832,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2083:5:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"2071:17:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1834,"nodeType":"ExpressionStatement","src":"2071:17:9"}]},"id":1836,"implemented":true,"kind":"function","modifiers":[{"id":1821,"kind":"modifierInvocation","modifierName":{"id":1820,"name":"onlyInitializing","nameLocations":["1985:16:9"],"nodeType":"IdentifierPath","referencedDeclaration":357,"src":"1985:16:9"},"nodeType":"ModifierInvocation","src":"1985:16:9"}],"name":"__Pausable_init_unchained","nameLocation":"1948:25:9","nodeType":"FunctionDefinition","parameters":{"id":1819,"nodeType":"ParameterList","parameters":[],"src":"1973:2:9"},"returnParameters":{"id":1822,"nodeType":"ParameterList","parameters":[],"src":"2002:0:9"},"scope":1942,"src":"1939:156:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1843,"nodeType":"Block","src":"2306:47:9","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1839,"name":"_requireNotPaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1880,"src":"2316:17:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":1840,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2316:19:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1841,"nodeType":"ExpressionStatement","src":"2316:19:9"},{"id":1842,"nodeType":"PlaceholderStatement","src":"2345:1:9"}]},"documentation":{"id":1837,"nodeType":"StructuredDocumentation","src":"2101:175:9","text":" @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."},"id":1844,"name":"whenNotPaused","nameLocation":"2290:13:9","nodeType":"ModifierDefinition","parameters":{"id":1838,"nodeType":"ParameterList","parameters":[],"src":"2303:2:9"},"src":"2281:72:9","virtual":false,"visibility":"internal"},{"body":{"id":1851,"nodeType":"Block","src":"2553:44:9","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1847,"name":"_requirePaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1893,"src":"2563:14:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":1848,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2563:16:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1849,"nodeType":"ExpressionStatement","src":"2563:16:9"},{"id":1850,"nodeType":"PlaceholderStatement","src":"2589:1:9"}]},"documentation":{"id":1845,"nodeType":"StructuredDocumentation","src":"2359:167:9","text":" @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."},"id":1852,"name":"whenPaused","nameLocation":"2540:10:9","nodeType":"ModifierDefinition","parameters":{"id":1846,"nodeType":"ParameterList","parameters":[],"src":"2550:2:9"},"src":"2531:66:9","virtual":false,"visibility":"internal"},{"body":{"id":1867,"nodeType":"Block","src":"2745:92:9","statements":[{"assignments":[1860],"declarations":[{"constant":false,"id":1860,"mutability":"mutable","name":"$","nameLocation":"2779:1:9","nodeType":"VariableDeclaration","scope":1867,"src":"2755:25:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_PausableStorage_$1781_storage_ptr","typeString":"struct PausableUpgradeable.PausableStorage"},"typeName":{"id":1859,"nodeType":"UserDefinedTypeName","pathNode":{"id":1858,"name":"PausableStorage","nameLocations":["2755:15:9"],"nodeType":"IdentifierPath","referencedDeclaration":1781,"src":"2755:15:9"},"referencedDeclaration":1781,"src":"2755:15:9","typeDescriptions":{"typeIdentifier":"t_struct$_PausableStorage_$1781_storage_ptr","typeString":"struct PausableUpgradeable.PausableStorage"}},"visibility":"internal"}],"id":1863,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1861,"name":"_getPausableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1792,"src":"2783:19:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_PausableStorage_$1781_storage_ptr_$","typeString":"function () pure returns (struct PausableUpgradeable.PausableStorage storage pointer)"}},"id":1862,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2783:21:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_PausableStorage_$1781_storage_ptr","typeString":"struct PausableUpgradeable.PausableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"2755:49:9"},{"expression":{"expression":{"id":1864,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1860,"src":"2821:1:9","typeDescriptions":{"typeIdentifier":"t_struct$_PausableStorage_$1781_storage_ptr","typeString":"struct PausableUpgradeable.PausableStorage storage pointer"}},"id":1865,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2823:7:9","memberName":"_paused","nodeType":"MemberAccess","referencedDeclaration":1780,"src":"2821:9:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1857,"id":1866,"nodeType":"Return","src":"2814:16:9"}]},"documentation":{"id":1853,"nodeType":"StructuredDocumentation","src":"2603:84:9","text":" @dev Returns true if the contract is paused, and false otherwise."},"functionSelector":"5c975abb","id":1868,"implemented":true,"kind":"function","modifiers":[],"name":"paused","nameLocation":"2701:6:9","nodeType":"FunctionDefinition","parameters":{"id":1854,"nodeType":"ParameterList","parameters":[],"src":"2707:2:9"},"returnParameters":{"id":1857,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1856,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1868,"src":"2739:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1855,"name":"bool","nodeType":"ElementaryTypeName","src":"2739:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2738:6:9"},"scope":1942,"src":"2692:145:9","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":1879,"nodeType":"Block","src":"2956:77:9","statements":[{"condition":{"arguments":[],"expression":{"argumentTypes":[],"id":1872,"name":"paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1868,"src":"2970:6:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":1873,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2970:8:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1878,"nodeType":"IfStatement","src":"2966:61:9","trueBody":{"id":1877,"nodeType":"Block","src":"2980:47:9","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1874,"name":"EnforcedPause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1805,"src":"3001:13:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1875,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3001:15:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1876,"nodeType":"RevertStatement","src":"2994:22:9"}]}}]},"documentation":{"id":1869,"nodeType":"StructuredDocumentation","src":"2843:57:9","text":" @dev Throws if the contract is paused."},"id":1880,"implemented":true,"kind":"function","modifiers":[],"name":"_requireNotPaused","nameLocation":"2914:17:9","nodeType":"FunctionDefinition","parameters":{"id":1870,"nodeType":"ParameterList","parameters":[],"src":"2931:2:9"},"returnParameters":{"id":1871,"nodeType":"ParameterList","parameters":[],"src":"2956:0:9"},"scope":1942,"src":"2905:128:9","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1892,"nodeType":"Block","src":"3153:78:9","statements":[{"condition":{"id":1886,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3167:9:9","subExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1884,"name":"paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1868,"src":"3168:6:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":1885,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3168:8:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1891,"nodeType":"IfStatement","src":"3163:62:9","trueBody":{"id":1890,"nodeType":"Block","src":"3178:47:9","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1887,"name":"ExpectedPause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1808,"src":"3199:13:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1888,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3199:15:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1889,"nodeType":"RevertStatement","src":"3192:22:9"}]}}]},"documentation":{"id":1881,"nodeType":"StructuredDocumentation","src":"3039:61:9","text":" @dev Throws if the contract is not paused."},"id":1893,"implemented":true,"kind":"function","modifiers":[],"name":"_requirePaused","nameLocation":"3114:14:9","nodeType":"FunctionDefinition","parameters":{"id":1882,"nodeType":"ParameterList","parameters":[],"src":"3128:2:9"},"returnParameters":{"id":1883,"nodeType":"ParameterList","parameters":[],"src":"3153:0:9"},"scope":1942,"src":"3105:126:9","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1916,"nodeType":"Block","src":"3415:127:9","statements":[{"assignments":[1901],"declarations":[{"constant":false,"id":1901,"mutability":"mutable","name":"$","nameLocation":"3449:1:9","nodeType":"VariableDeclaration","scope":1916,"src":"3425:25:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_PausableStorage_$1781_storage_ptr","typeString":"struct PausableUpgradeable.PausableStorage"},"typeName":{"id":1900,"nodeType":"UserDefinedTypeName","pathNode":{"id":1899,"name":"PausableStorage","nameLocations":["3425:15:9"],"nodeType":"IdentifierPath","referencedDeclaration":1781,"src":"3425:15:9"},"referencedDeclaration":1781,"src":"3425:15:9","typeDescriptions":{"typeIdentifier":"t_struct$_PausableStorage_$1781_storage_ptr","typeString":"struct PausableUpgradeable.PausableStorage"}},"visibility":"internal"}],"id":1904,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1902,"name":"_getPausableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1792,"src":"3453:19:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_PausableStorage_$1781_storage_ptr_$","typeString":"function () pure returns (struct PausableUpgradeable.PausableStorage storage pointer)"}},"id":1903,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3453:21:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_PausableStorage_$1781_storage_ptr","typeString":"struct PausableUpgradeable.PausableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"3425:49:9"},{"expression":{"id":1909,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1905,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1901,"src":"3484:1:9","typeDescriptions":{"typeIdentifier":"t_struct$_PausableStorage_$1781_storage_ptr","typeString":"struct PausableUpgradeable.PausableStorage storage pointer"}},"id":1907,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3486:7:9","memberName":"_paused","nodeType":"MemberAccess","referencedDeclaration":1780,"src":"3484:9:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":1908,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3496:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"3484:16:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1910,"nodeType":"ExpressionStatement","src":"3484:16:9"},{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1912,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1637,"src":"3522:10:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1913,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3522:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1911,"name":"Paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1797,"src":"3515:6:9","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1914,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3515:20:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1915,"nodeType":"EmitStatement","src":"3510:25:9"}]},"documentation":{"id":1894,"nodeType":"StructuredDocumentation","src":"3237:124:9","text":" @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."},"id":1917,"implemented":true,"kind":"function","modifiers":[{"id":1897,"kind":"modifierInvocation","modifierName":{"id":1896,"name":"whenNotPaused","nameLocations":["3401:13:9"],"nodeType":"IdentifierPath","referencedDeclaration":1844,"src":"3401:13:9"},"nodeType":"ModifierInvocation","src":"3401:13:9"}],"name":"_pause","nameLocation":"3375:6:9","nodeType":"FunctionDefinition","parameters":{"id":1895,"nodeType":"ParameterList","parameters":[],"src":"3381:2:9"},"returnParameters":{"id":1898,"nodeType":"ParameterList","parameters":[],"src":"3415:0:9"},"scope":1942,"src":"3366:176:9","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1940,"nodeType":"Block","src":"3722:130:9","statements":[{"assignments":[1925],"declarations":[{"constant":false,"id":1925,"mutability":"mutable","name":"$","nameLocation":"3756:1:9","nodeType":"VariableDeclaration","scope":1940,"src":"3732:25:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_PausableStorage_$1781_storage_ptr","typeString":"struct PausableUpgradeable.PausableStorage"},"typeName":{"id":1924,"nodeType":"UserDefinedTypeName","pathNode":{"id":1923,"name":"PausableStorage","nameLocations":["3732:15:9"],"nodeType":"IdentifierPath","referencedDeclaration":1781,"src":"3732:15:9"},"referencedDeclaration":1781,"src":"3732:15:9","typeDescriptions":{"typeIdentifier":"t_struct$_PausableStorage_$1781_storage_ptr","typeString":"struct PausableUpgradeable.PausableStorage"}},"visibility":"internal"}],"id":1928,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1926,"name":"_getPausableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1792,"src":"3760:19:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_PausableStorage_$1781_storage_ptr_$","typeString":"function () pure returns (struct PausableUpgradeable.PausableStorage storage pointer)"}},"id":1927,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3760:21:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_PausableStorage_$1781_storage_ptr","typeString":"struct PausableUpgradeable.PausableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"3732:49:9"},{"expression":{"id":1933,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1929,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1925,"src":"3791:1:9","typeDescriptions":{"typeIdentifier":"t_struct$_PausableStorage_$1781_storage_ptr","typeString":"struct PausableUpgradeable.PausableStorage storage pointer"}},"id":1931,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3793:7:9","memberName":"_paused","nodeType":"MemberAccess","referencedDeclaration":1780,"src":"3791:9:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":1932,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3803:5:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"3791:17:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1934,"nodeType":"ExpressionStatement","src":"3791:17:9"},{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1936,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1637,"src":"3832:10:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1937,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3832:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1935,"name":"Unpaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1802,"src":"3823:8:9","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1938,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3823:22:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1939,"nodeType":"EmitStatement","src":"3818:27:9"}]},"documentation":{"id":1918,"nodeType":"StructuredDocumentation","src":"3548:121:9","text":" @dev Returns to normal state.\n Requirements:\n - The contract must be paused."},"id":1941,"implemented":true,"kind":"function","modifiers":[{"id":1921,"kind":"modifierInvocation","modifierName":{"id":1920,"name":"whenPaused","nameLocations":["3711:10:9"],"nodeType":"IdentifierPath","referencedDeclaration":1852,"src":"3711:10:9"},"nodeType":"ModifierInvocation","src":"3711:10:9"}],"name":"_unpause","nameLocation":"3683:8:9","nodeType":"FunctionDefinition","parameters":{"id":1919,"nodeType":"ParameterList","parameters":[],"src":"3691:2:9"},"returnParameters":{"id":1922,"nodeType":"ParameterList","parameters":[],"src":"3722:0:9"},"scope":1942,"src":"3674:178:9","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":1943,"src":"701:3153:9","usedErrors":[211,214,1805,1808],"usedEvents":[219,1797,1802]}],"src":"102:3753:9"},"id":9},"@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol","exportedSymbols":{"EIP712Upgradeable":[2286],"IERC5267":[2370],"Initializable":[448],"MessageHashUtils":[3324]},"id":2287,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1944,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"113:24:10"},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol","file":"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol","id":1946,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2287,"sourceUnit":3325,"src":"139:97:10","symbolAliases":[{"foreign":{"id":1945,"name":"MessageHashUtils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3324,"src":"147:16:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC5267.sol","file":"@openzeppelin/contracts/interfaces/IERC5267.sol","id":1948,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2287,"sourceUnit":2371,"src":"237:73:10","symbolAliases":[{"foreign":{"id":1947,"name":"IERC5267","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2370,"src":"245:8:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../../proxy/utils/Initializable.sol","id":1950,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2287,"sourceUnit":449,"src":"311:66:10","symbolAliases":[{"foreign":{"id":1949,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":448,"src":"319:13:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1952,"name":"Initializable","nameLocations":["1998:13:10"],"nodeType":"IdentifierPath","referencedDeclaration":448,"src":"1998:13:10"},"id":1953,"nodeType":"InheritanceSpecifier","src":"1998:13:10"},{"baseName":{"id":1954,"name":"IERC5267","nameLocations":["2013:8:10"],"nodeType":"IdentifierPath","referencedDeclaration":2370,"src":"2013:8:10"},"id":1955,"nodeType":"InheritanceSpecifier","src":"2013:8:10"}],"canonicalName":"EIP712Upgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":1951,"nodeType":"StructuredDocumentation","src":"379:1579:10","text":" @dev https://eips.ethereum.org/EIPS/eip-712[EIP 712] is a standard for hashing and signing of typed structured data.\n The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose\n encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract\n does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to\n produce the hash of their typed data using a combination of `abi.encode` and `keccak256`.\n This contract implements the EIP 712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding\n scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA\n ({_hashTypedDataV4}).\n The implementation of the domain separator was designed to be as efficient as possible while still properly updating\n the chain id to protect against replay attacks on an eventual fork of the chain.\n NOTE: This contract implements the version of the encoding known as \"v4\", as implemented by the JSON RPC method\n https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask].\n NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain\n separator of the implementation contract. This will cause the {_domainSeparatorV4} function to always rebuild the\n separator from the immutable values, which is cheaper than accessing a cached version in cold storage."},"fullyImplemented":true,"id":2286,"linearizedBaseContracts":[2286,2370,448],"name":"EIP712Upgradeable","nameLocation":"1977:17:10","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":1960,"mutability":"constant","name":"TYPE_HASH","nameLocation":"2053:9:10","nodeType":"VariableDeclaration","scope":2286,"src":"2028:140:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1956,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2028:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429","id":1958,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2083:84:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f","typeString":"literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""},"value":"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f","typeString":"literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""}],"id":1957,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2073:9:10","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1959,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2073:95:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"canonicalName":"EIP712Upgradeable.EIP712Storage","documentation":{"id":1961,"nodeType":"StructuredDocumentation","src":"2175:64:10","text":"@custom:storage-location erc7201:openzeppelin.storage.EIP712"},"id":1972,"members":[{"constant":false,"id":1964,"mutability":"mutable","name":"_hashedName","nameLocation":"2332:11:10","nodeType":"VariableDeclaration","scope":1972,"src":"2324:19:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1963,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2324:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1967,"mutability":"mutable","name":"_hashedVersion","nameLocation":"2413:14:10","nodeType":"VariableDeclaration","scope":1972,"src":"2405:22:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1966,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2405:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1969,"mutability":"mutable","name":"_name","nameLocation":"2445:5:10","nodeType":"VariableDeclaration","scope":1972,"src":"2438:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1968,"name":"string","nodeType":"ElementaryTypeName","src":"2438:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1971,"mutability":"mutable","name":"_version","nameLocation":"2467:8:10","nodeType":"VariableDeclaration","scope":1972,"src":"2460:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1970,"name":"string","nodeType":"ElementaryTypeName","src":"2460:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"EIP712Storage","nameLocation":"2251:13:10","nodeType":"StructDefinition","scope":2286,"src":"2244:238:10","visibility":"public"},{"constant":true,"id":1975,"mutability":"constant","name":"EIP712StorageLocation","nameLocation":"2623:21:10","nodeType":"VariableDeclaration","scope":2286,"src":"2598:115:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1973,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2598:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307861313661343664393432363163373531376363386666383966363163306365393335393865336338343938303130313164656536343961366135353764313030","id":1974,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2647:66:10","typeDescriptions":{"typeIdentifier":"t_rational_73010143390315934406010559831118728393600729754696197287367516085911467577600_by_1","typeString":"int_const 7301...(69 digits omitted)...7600"},"value":"0xa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d100"},"visibility":"private"},{"body":{"id":1982,"nodeType":"Block","src":"2796:80:10","statements":[{"AST":{"nodeType":"YulBlock","src":"2815:55:10","statements":[{"nodeType":"YulAssignment","src":"2829:31:10","value":{"name":"EIP712StorageLocation","nodeType":"YulIdentifier","src":"2839:21:10"},"variableNames":[{"name":"$.slot","nodeType":"YulIdentifier","src":"2829:6:10"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1979,"isOffset":false,"isSlot":true,"src":"2829:6:10","suffix":"slot","valueSize":1},{"declaration":1975,"isOffset":false,"isSlot":false,"src":"2839:21:10","valueSize":1}],"id":1981,"nodeType":"InlineAssembly","src":"2806:64:10"}]},"id":1983,"implemented":true,"kind":"function","modifiers":[],"name":"_getEIP712Storage","nameLocation":"2729:17:10","nodeType":"FunctionDefinition","parameters":{"id":1976,"nodeType":"ParameterList","parameters":[],"src":"2746:2:10"},"returnParameters":{"id":1980,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1979,"mutability":"mutable","name":"$","nameLocation":"2793:1:10","nodeType":"VariableDeclaration","scope":1983,"src":"2771:23:10","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_EIP712Storage_$1972_storage_ptr","typeString":"struct EIP712Upgradeable.EIP712Storage"},"typeName":{"id":1978,"nodeType":"UserDefinedTypeName","pathNode":{"id":1977,"name":"EIP712Storage","nameLocations":["2771:13:10"],"nodeType":"IdentifierPath","referencedDeclaration":1972,"src":"2771:13:10"},"referencedDeclaration":1972,"src":"2771:13:10","typeDescriptions":{"typeIdentifier":"t_struct$_EIP712Storage_$1972_storage_ptr","typeString":"struct EIP712Upgradeable.EIP712Storage"}},"visibility":"internal"}],"src":"2770:25:10"},"scope":2286,"src":"2720:156:10","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":1998,"nodeType":"Block","src":"3538:55:10","statements":[{"expression":{"arguments":[{"id":1994,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1986,"src":"3572:4:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":1995,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1988,"src":"3578:7:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1993,"name":"__EIP712_init_unchained","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2039,"src":"3548:23:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory,string memory)"}},"id":1996,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3548:38:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1997,"nodeType":"ExpressionStatement","src":"3548:38:10"}]},"documentation":{"id":1984,"nodeType":"StructuredDocumentation","src":"2882:559:10","text":" @dev Initializes the domain separator and parameter caches.\n The meaning of `name` and `version` is specified in\n https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP 712]:\n - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol.\n - `version`: the current major version of the signing domain.\n NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart\n contract upgrade]."},"id":1999,"implemented":true,"kind":"function","modifiers":[{"id":1991,"kind":"modifierInvocation","modifierName":{"id":1990,"name":"onlyInitializing","nameLocations":["3521:16:10"],"nodeType":"IdentifierPath","referencedDeclaration":357,"src":"3521:16:10"},"nodeType":"ModifierInvocation","src":"3521:16:10"}],"name":"__EIP712_init","nameLocation":"3455:13:10","nodeType":"FunctionDefinition","parameters":{"id":1989,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1986,"mutability":"mutable","name":"name","nameLocation":"3483:4:10","nodeType":"VariableDeclaration","scope":1999,"src":"3469:18:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1985,"name":"string","nodeType":"ElementaryTypeName","src":"3469:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1988,"mutability":"mutable","name":"version","nameLocation":"3503:7:10","nodeType":"VariableDeclaration","scope":1999,"src":"3489:21:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1987,"name":"string","nodeType":"ElementaryTypeName","src":"3489:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3468:43:10"},"returnParameters":{"id":1992,"nodeType":"ParameterList","parameters":[],"src":"3538:0:10"},"scope":2286,"src":"3446:147:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2038,"nodeType":"Block","src":"3701:228:10","statements":[{"assignments":[2010],"declarations":[{"constant":false,"id":2010,"mutability":"mutable","name":"$","nameLocation":"3733:1:10","nodeType":"VariableDeclaration","scope":2038,"src":"3711:23:10","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_EIP712Storage_$1972_storage_ptr","typeString":"struct EIP712Upgradeable.EIP712Storage"},"typeName":{"id":2009,"nodeType":"UserDefinedTypeName","pathNode":{"id":2008,"name":"EIP712Storage","nameLocations":["3711:13:10"],"nodeType":"IdentifierPath","referencedDeclaration":1972,"src":"3711:13:10"},"referencedDeclaration":1972,"src":"3711:13:10","typeDescriptions":{"typeIdentifier":"t_struct$_EIP712Storage_$1972_storage_ptr","typeString":"struct EIP712Upgradeable.EIP712Storage"}},"visibility":"internal"}],"id":2013,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":2011,"name":"_getEIP712Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1983,"src":"3737:17:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_EIP712Storage_$1972_storage_ptr_$","typeString":"function () pure returns (struct EIP712Upgradeable.EIP712Storage storage pointer)"}},"id":2012,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3737:19:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_EIP712Storage_$1972_storage_ptr","typeString":"struct EIP712Upgradeable.EIP712Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"3711:45:10"},{"expression":{"id":2018,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2014,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2010,"src":"3766:1:10","typeDescriptions":{"typeIdentifier":"t_struct$_EIP712Storage_$1972_storage_ptr","typeString":"struct EIP712Upgradeable.EIP712Storage storage pointer"}},"id":2016,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3768:5:10","memberName":"_name","nodeType":"MemberAccess","referencedDeclaration":1969,"src":"3766:7:10","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2017,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2001,"src":"3776:4:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"3766:14:10","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":2019,"nodeType":"ExpressionStatement","src":"3766:14:10"},{"expression":{"id":2024,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2020,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2010,"src":"3790:1:10","typeDescriptions":{"typeIdentifier":"t_struct$_EIP712Storage_$1972_storage_ptr","typeString":"struct EIP712Upgradeable.EIP712Storage storage pointer"}},"id":2022,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3792:8:10","memberName":"_version","nodeType":"MemberAccess","referencedDeclaration":1971,"src":"3790:10:10","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2023,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2003,"src":"3803:7:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"3790:20:10","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":2025,"nodeType":"ExpressionStatement","src":"3790:20:10"},{"expression":{"id":2030,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2026,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2010,"src":"3875:1:10","typeDescriptions":{"typeIdentifier":"t_struct$_EIP712Storage_$1972_storage_ptr","typeString":"struct EIP712Upgradeable.EIP712Storage storage pointer"}},"id":2028,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3877:11:10","memberName":"_hashedName","nodeType":"MemberAccess","referencedDeclaration":1964,"src":"3875:13:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":2029,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3891:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3875:17:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2031,"nodeType":"ExpressionStatement","src":"3875:17:10"},{"expression":{"id":2036,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2032,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2010,"src":"3902:1:10","typeDescriptions":{"typeIdentifier":"t_struct$_EIP712Storage_$1972_storage_ptr","typeString":"struct EIP712Upgradeable.EIP712Storage storage pointer"}},"id":2034,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3904:14:10","memberName":"_hashedVersion","nodeType":"MemberAccess","referencedDeclaration":1967,"src":"3902:16:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":2035,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3921:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3902:20:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2037,"nodeType":"ExpressionStatement","src":"3902:20:10"}]},"id":2039,"implemented":true,"kind":"function","modifiers":[{"id":2006,"kind":"modifierInvocation","modifierName":{"id":2005,"name":"onlyInitializing","nameLocations":["3684:16:10"],"nodeType":"IdentifierPath","referencedDeclaration":357,"src":"3684:16:10"},"nodeType":"ModifierInvocation","src":"3684:16:10"}],"name":"__EIP712_init_unchained","nameLocation":"3608:23:10","nodeType":"FunctionDefinition","parameters":{"id":2004,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2001,"mutability":"mutable","name":"name","nameLocation":"3646:4:10","nodeType":"VariableDeclaration","scope":2039,"src":"3632:18:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2000,"name":"string","nodeType":"ElementaryTypeName","src":"3632:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2003,"mutability":"mutable","name":"version","nameLocation":"3666:7:10","nodeType":"VariableDeclaration","scope":2039,"src":"3652:21:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2002,"name":"string","nodeType":"ElementaryTypeName","src":"3652:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3631:43:10"},"returnParameters":{"id":2007,"nodeType":"ParameterList","parameters":[],"src":"3701:0:10"},"scope":2286,"src":"3599:330:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2048,"nodeType":"Block","src":"4077:47:10","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":2045,"name":"_buildDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2072,"src":"4094:21:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":2046,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4094:23:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2044,"id":2047,"nodeType":"Return","src":"4087:30:10"}]},"documentation":{"id":2040,"nodeType":"StructuredDocumentation","src":"3935:75:10","text":" @dev Returns the domain separator for the current chain."},"id":2049,"implemented":true,"kind":"function","modifiers":[],"name":"_domainSeparatorV4","nameLocation":"4024:18:10","nodeType":"FunctionDefinition","parameters":{"id":2041,"nodeType":"ParameterList","parameters":[],"src":"4042:2:10"},"returnParameters":{"id":2044,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2043,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2049,"src":"4068:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2042,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4068:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4067:9:10"},"scope":2286,"src":"4015:109:10","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2071,"nodeType":"Block","src":"4194:127:10","statements":[{"expression":{"arguments":[{"arguments":[{"id":2057,"name":"TYPE_HASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1960,"src":"4232:9:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[],"expression":{"argumentTypes":[],"id":2058,"name":"_EIP712NameHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2233,"src":"4243:15:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":2059,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4243:17:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[],"expression":{"argumentTypes":[],"id":2060,"name":"_EIP712VersionHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2285,"src":"4262:18:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":2061,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4262:20:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":2062,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4284:5:10","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2063,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4290:7:10","memberName":"chainid","nodeType":"MemberAccess","src":"4284:13:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":2066,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4307:4:10","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712Upgradeable_$2286","typeString":"contract EIP712Upgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712Upgradeable_$2286","typeString":"contract EIP712Upgradeable"}],"id":2065,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4299:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2064,"name":"address","nodeType":"ElementaryTypeName","src":"4299:7:10","typeDescriptions":{}}},"id":2067,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4299:13:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2055,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4221:3:10","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2056,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4225:6:10","memberName":"encode","nodeType":"MemberAccess","src":"4221:10:10","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2068,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4221:92:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2054,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4211:9:10","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2069,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4211:103:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2053,"id":2070,"nodeType":"Return","src":"4204:110:10"}]},"id":2072,"implemented":true,"kind":"function","modifiers":[],"name":"_buildDomainSeparator","nameLocation":"4139:21:10","nodeType":"FunctionDefinition","parameters":{"id":2050,"nodeType":"ParameterList","parameters":[],"src":"4160:2:10"},"returnParameters":{"id":2053,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2052,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2072,"src":"4185:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2051,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4185:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4184:9:10"},"scope":2286,"src":"4130:191:10","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":2087,"nodeType":"Block","src":"5032:90:10","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":2082,"name":"_domainSeparatorV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2049,"src":"5082:18:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":2083,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5082:20:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2084,"name":"structHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2075,"src":"5104:10:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":2080,"name":"MessageHashUtils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3324,"src":"5049:16:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_MessageHashUtils_$3324_$","typeString":"type(library MessageHashUtils)"}},"id":2081,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5066:15:10","memberName":"toTypedDataHash","nodeType":"MemberAccess","referencedDeclaration":3323,"src":"5049:32:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":2085,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5049:66:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2079,"id":2086,"nodeType":"Return","src":"5042:73:10"}]},"documentation":{"id":2073,"nodeType":"StructuredDocumentation","src":"4327:614:10","text":" @dev Given an already https://eips.ethereum.org/EIPS/eip-712#definition-of-hashstruct[hashed struct], this\n function returns the hash of the fully encoded EIP712 message for this domain.\n This hash can be used together with {ECDSA-recover} to obtain the signer of a message. For example:\n ```solidity\n bytes32 digest = _hashTypedDataV4(keccak256(abi.encode(\n     keccak256(\"Mail(address to,string contents)\"),\n     mailTo,\n     keccak256(bytes(mailContents))\n )));\n address signer = ECDSA.recover(digest, signature);\n ```"},"id":2088,"implemented":true,"kind":"function","modifiers":[],"name":"_hashTypedDataV4","nameLocation":"4955:16:10","nodeType":"FunctionDefinition","parameters":{"id":2076,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2075,"mutability":"mutable","name":"structHash","nameLocation":"4980:10:10","nodeType":"VariableDeclaration","scope":2088,"src":"4972:18:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2074,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4972:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4971:20:10"},"returnParameters":{"id":2079,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2078,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2088,"src":"5023:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2077,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5023:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5022:9:10"},"scope":2286,"src":"4946:176:10","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[2369],"body":{"id":2148,"nodeType":"Block","src":"5501:575:10","statements":[{"assignments":[2109],"declarations":[{"constant":false,"id":2109,"mutability":"mutable","name":"$","nameLocation":"5533:1:10","nodeType":"VariableDeclaration","scope":2148,"src":"5511:23:10","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_EIP712Storage_$1972_storage_ptr","typeString":"struct EIP712Upgradeable.EIP712Storage"},"typeName":{"id":2108,"nodeType":"UserDefinedTypeName","pathNode":{"id":2107,"name":"EIP712Storage","nameLocations":["5511:13:10"],"nodeType":"IdentifierPath","referencedDeclaration":1972,"src":"5511:13:10"},"referencedDeclaration":1972,"src":"5511:13:10","typeDescriptions":{"typeIdentifier":"t_struct$_EIP712Storage_$1972_storage_ptr","typeString":"struct EIP712Upgradeable.EIP712Storage"}},"visibility":"internal"}],"id":2112,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":2110,"name":"_getEIP712Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1983,"src":"5537:17:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_EIP712Storage_$1972_storage_ptr_$","typeString":"function () pure returns (struct EIP712Upgradeable.EIP712Storage storage pointer)"}},"id":2111,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5537:19:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_EIP712Storage_$1972_storage_ptr","typeString":"struct EIP712Upgradeable.EIP712Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"5511:45:10"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2122,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2117,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2114,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2109,"src":"5777:1:10","typeDescriptions":{"typeIdentifier":"t_struct$_EIP712Storage_$1972_storage_ptr","typeString":"struct EIP712Upgradeable.EIP712Storage storage pointer"}},"id":2115,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5779:11:10","memberName":"_hashedName","nodeType":"MemberAccess","referencedDeclaration":1964,"src":"5777:13:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2116,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5794:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5777:18:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2121,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2118,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2109,"src":"5799:1:10","typeDescriptions":{"typeIdentifier":"t_struct$_EIP712Storage_$1972_storage_ptr","typeString":"struct EIP712Upgradeable.EIP712Storage storage pointer"}},"id":2119,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5801:14:10","memberName":"_hashedVersion","nodeType":"MemberAccess","referencedDeclaration":1967,"src":"5799:16:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2120,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5819:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5799:21:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5777:43:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4549503731323a20556e696e697469616c697a6564","id":2123,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5822:23:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_2e5045ff73280aa8e8acd8c82710f23812497f87f7f576e2220a2ddd0d45eade","typeString":"literal_string \"EIP712: Uninitialized\""},"value":"EIP712: Uninitialized"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2e5045ff73280aa8e8acd8c82710f23812497f87f7f576e2220a2ddd0d45eade","typeString":"literal_string \"EIP712: Uninitialized\""}],"id":2113,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5769:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2124,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5769:77:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2125,"nodeType":"ExpressionStatement","src":"5769:77:10"},{"expression":{"components":[{"hexValue":"0f","id":2126,"isConstant":false,"isLValue":false,"isPure":true,"kind":"hexString","lValueRequested":false,"nodeType":"Literal","src":"5878:7:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_3d725c5ee53025f027da36bea8d3af3b6a3e9d2d1542d47c162631de48e66c1c","typeString":"literal_string hex\"0f\""},"value":"\u000f"},{"arguments":[],"expression":{"argumentTypes":[],"id":2127,"name":"_EIP712Name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2165,"src":"5908:11:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":2128,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5908:13:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[],"expression":{"argumentTypes":[],"id":2129,"name":"_EIP712Version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2181,"src":"5935:14:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":2130,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5935:16:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"expression":{"id":2131,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"5965:5:10","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2132,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5971:7:10","memberName":"chainid","nodeType":"MemberAccess","src":"5965:13:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":2135,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"6000:4:10","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712Upgradeable_$2286","typeString":"contract EIP712Upgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712Upgradeable_$2286","typeString":"contract EIP712Upgradeable"}],"id":2134,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5992:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2133,"name":"address","nodeType":"ElementaryTypeName","src":"5992:7:10","typeDescriptions":{}}},"id":2136,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5992:13:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":2139,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6027:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2138,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6019:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2137,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6019:7:10","typeDescriptions":{}}},"id":2140,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6019:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"hexValue":"30","id":2144,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6057:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2143,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"6043:13:10","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":2141,"name":"uint256","nodeType":"ElementaryTypeName","src":"6047:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2142,"nodeType":"ArrayTypeName","src":"6047:9:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":2145,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6043:16:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"id":2146,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5864:205:10","typeDescriptions":{"typeIdentifier":"t_tuple$_t_stringliteral_3d725c5ee53025f027da36bea8d3af3b6a3e9d2d1542d47c162631de48e66c1c_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_address_$_t_bytes32_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(literal_string hex\"0f\",string memory,string memory,uint256,address,bytes32,uint256[] memory)"}},"functionReturnParameters":2106,"id":2147,"nodeType":"Return","src":"5857:212:10"}]},"documentation":{"id":2089,"nodeType":"StructuredDocumentation","src":"5128:40:10","text":" @dev See {IERC-5267}."},"functionSelector":"84b0196e","id":2149,"implemented":true,"kind":"function","modifiers":[],"name":"eip712Domain","nameLocation":"5182:12:10","nodeType":"FunctionDefinition","parameters":{"id":2090,"nodeType":"ParameterList","parameters":[],"src":"5194:2:10"},"returnParameters":{"id":2106,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2092,"mutability":"mutable","name":"fields","nameLocation":"5278:6:10","nodeType":"VariableDeclaration","scope":2149,"src":"5271:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":2091,"name":"bytes1","nodeType":"ElementaryTypeName","src":"5271:6:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"},{"constant":false,"id":2094,"mutability":"mutable","name":"name","nameLocation":"5312:4:10","nodeType":"VariableDeclaration","scope":2149,"src":"5298:18:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2093,"name":"string","nodeType":"ElementaryTypeName","src":"5298:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2096,"mutability":"mutable","name":"version","nameLocation":"5344:7:10","nodeType":"VariableDeclaration","scope":2149,"src":"5330:21:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2095,"name":"string","nodeType":"ElementaryTypeName","src":"5330:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2098,"mutability":"mutable","name":"chainId","nameLocation":"5373:7:10","nodeType":"VariableDeclaration","scope":2149,"src":"5365:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2097,"name":"uint256","nodeType":"ElementaryTypeName","src":"5365:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2100,"mutability":"mutable","name":"verifyingContract","nameLocation":"5402:17:10","nodeType":"VariableDeclaration","scope":2149,"src":"5394:25:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2099,"name":"address","nodeType":"ElementaryTypeName","src":"5394:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2102,"mutability":"mutable","name":"salt","nameLocation":"5441:4:10","nodeType":"VariableDeclaration","scope":2149,"src":"5433:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2101,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5433:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2105,"mutability":"mutable","name":"extensions","nameLocation":"5476:10:10","nodeType":"VariableDeclaration","scope":2149,"src":"5459:27:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2103,"name":"uint256","nodeType":"ElementaryTypeName","src":"5459:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2104,"nodeType":"ArrayTypeName","src":"5459:9:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"5257:239:10"},"scope":2286,"src":"5173:903:10","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":2164,"nodeType":"Block","src":"6369:86:10","statements":[{"assignments":[2157],"declarations":[{"constant":false,"id":2157,"mutability":"mutable","name":"$","nameLocation":"6401:1:10","nodeType":"VariableDeclaration","scope":2164,"src":"6379:23:10","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_EIP712Storage_$1972_storage_ptr","typeString":"struct EIP712Upgradeable.EIP712Storage"},"typeName":{"id":2156,"nodeType":"UserDefinedTypeName","pathNode":{"id":2155,"name":"EIP712Storage","nameLocations":["6379:13:10"],"nodeType":"IdentifierPath","referencedDeclaration":1972,"src":"6379:13:10"},"referencedDeclaration":1972,"src":"6379:13:10","typeDescriptions":{"typeIdentifier":"t_struct$_EIP712Storage_$1972_storage_ptr","typeString":"struct EIP712Upgradeable.EIP712Storage"}},"visibility":"internal"}],"id":2160,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":2158,"name":"_getEIP712Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1983,"src":"6405:17:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_EIP712Storage_$1972_storage_ptr_$","typeString":"function () pure returns (struct EIP712Upgradeable.EIP712Storage storage pointer)"}},"id":2159,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6405:19:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_EIP712Storage_$1972_storage_ptr","typeString":"struct EIP712Upgradeable.EIP712Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"6379:45:10"},{"expression":{"expression":{"id":2161,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2157,"src":"6441:1:10","typeDescriptions":{"typeIdentifier":"t_struct$_EIP712Storage_$1972_storage_ptr","typeString":"struct EIP712Upgradeable.EIP712Storage storage pointer"}},"id":2162,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6443:5:10","memberName":"_name","nodeType":"MemberAccess","referencedDeclaration":1969,"src":"6441:7:10","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":2154,"id":2163,"nodeType":"Return","src":"6434:14:10"}]},"documentation":{"id":2150,"nodeType":"StructuredDocumentation","src":"6082:213:10","text":" @dev The name parameter for the EIP712 domain.\n NOTE: This function reads from storage by default, but can be redefined to return a constant value if gas costs\n are a concern."},"id":2165,"implemented":true,"kind":"function","modifiers":[],"name":"_EIP712Name","nameLocation":"6309:11:10","nodeType":"FunctionDefinition","parameters":{"id":2151,"nodeType":"ParameterList","parameters":[],"src":"6320:2:10"},"returnParameters":{"id":2154,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2153,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2165,"src":"6354:13:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2152,"name":"string","nodeType":"ElementaryTypeName","src":"6354:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6353:15:10"},"scope":2286,"src":"6300:155:10","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2180,"nodeType":"Block","src":"6754:89:10","statements":[{"assignments":[2173],"declarations":[{"constant":false,"id":2173,"mutability":"mutable","name":"$","nameLocation":"6786:1:10","nodeType":"VariableDeclaration","scope":2180,"src":"6764:23:10","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_EIP712Storage_$1972_storage_ptr","typeString":"struct EIP712Upgradeable.EIP712Storage"},"typeName":{"id":2172,"nodeType":"UserDefinedTypeName","pathNode":{"id":2171,"name":"EIP712Storage","nameLocations":["6764:13:10"],"nodeType":"IdentifierPath","referencedDeclaration":1972,"src":"6764:13:10"},"referencedDeclaration":1972,"src":"6764:13:10","typeDescriptions":{"typeIdentifier":"t_struct$_EIP712Storage_$1972_storage_ptr","typeString":"struct EIP712Upgradeable.EIP712Storage"}},"visibility":"internal"}],"id":2176,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":2174,"name":"_getEIP712Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1983,"src":"6790:17:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_EIP712Storage_$1972_storage_ptr_$","typeString":"function () pure returns (struct EIP712Upgradeable.EIP712Storage storage pointer)"}},"id":2175,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6790:19:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_EIP712Storage_$1972_storage_ptr","typeString":"struct EIP712Upgradeable.EIP712Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"6764:45:10"},{"expression":{"expression":{"id":2177,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2173,"src":"6826:1:10","typeDescriptions":{"typeIdentifier":"t_struct$_EIP712Storage_$1972_storage_ptr","typeString":"struct EIP712Upgradeable.EIP712Storage storage pointer"}},"id":2178,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6828:8:10","memberName":"_version","nodeType":"MemberAccess","referencedDeclaration":1971,"src":"6826:10:10","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":2170,"id":2179,"nodeType":"Return","src":"6819:17:10"}]},"documentation":{"id":2166,"nodeType":"StructuredDocumentation","src":"6461:216:10","text":" @dev The version parameter for the EIP712 domain.\n NOTE: This function reads from storage by default, but can be redefined to return a constant value if gas costs\n are a concern."},"id":2181,"implemented":true,"kind":"function","modifiers":[],"name":"_EIP712Version","nameLocation":"6691:14:10","nodeType":"FunctionDefinition","parameters":{"id":2167,"nodeType":"ParameterList","parameters":[],"src":"6705:2:10"},"returnParameters":{"id":2170,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2169,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2181,"src":"6739:13:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2168,"name":"string","nodeType":"ElementaryTypeName","src":"6739:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6738:15:10"},"scope":2286,"src":"6682:161:10","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2232,"nodeType":"Block","src":"7117:628:10","statements":[{"assignments":[2189],"declarations":[{"constant":false,"id":2189,"mutability":"mutable","name":"$","nameLocation":"7149:1:10","nodeType":"VariableDeclaration","scope":2232,"src":"7127:23:10","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_EIP712Storage_$1972_storage_ptr","typeString":"struct EIP712Upgradeable.EIP712Storage"},"typeName":{"id":2188,"nodeType":"UserDefinedTypeName","pathNode":{"id":2187,"name":"EIP712Storage","nameLocations":["7127:13:10"],"nodeType":"IdentifierPath","referencedDeclaration":1972,"src":"7127:13:10"},"referencedDeclaration":1972,"src":"7127:13:10","typeDescriptions":{"typeIdentifier":"t_struct$_EIP712Storage_$1972_storage_ptr","typeString":"struct EIP712Upgradeable.EIP712Storage"}},"visibility":"internal"}],"id":2192,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":2190,"name":"_getEIP712Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1983,"src":"7153:17:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_EIP712Storage_$1972_storage_ptr_$","typeString":"function () pure returns (struct EIP712Upgradeable.EIP712Storage storage pointer)"}},"id":2191,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7153:19:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_EIP712Storage_$1972_storage_ptr","typeString":"struct EIP712Upgradeable.EIP712Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"7127:45:10"},{"assignments":[2194],"declarations":[{"constant":false,"id":2194,"mutability":"mutable","name":"name","nameLocation":"7196:4:10","nodeType":"VariableDeclaration","scope":2232,"src":"7182:18:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2193,"name":"string","nodeType":"ElementaryTypeName","src":"7182:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":2197,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":2195,"name":"_EIP712Name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2165,"src":"7203:11:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":2196,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7203:13:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"7182:34:10"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2204,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2200,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2194,"src":"7236:4:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2199,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7230:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2198,"name":"bytes","nodeType":"ElementaryTypeName","src":"7230:5:10","typeDescriptions":{}}},"id":2201,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7230:11:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2202,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7242:6:10","memberName":"length","nodeType":"MemberAccess","src":"7230:18:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2203,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7251:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7230:22:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2230,"nodeType":"Block","src":"7314:425:10","statements":[{"assignments":[2214],"declarations":[{"constant":false,"id":2214,"mutability":"mutable","name":"hashedName","nameLocation":"7559:10:10","nodeType":"VariableDeclaration","scope":2230,"src":"7551:18:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2213,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7551:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2217,"initialValue":{"expression":{"id":2215,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2189,"src":"7572:1:10","typeDescriptions":{"typeIdentifier":"t_struct$_EIP712Storage_$1972_storage_ptr","typeString":"struct EIP712Upgradeable.EIP712Storage storage pointer"}},"id":2216,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7574:11:10","memberName":"_hashedName","nodeType":"MemberAccess","referencedDeclaration":1964,"src":"7572:13:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"7551:34:10"},{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2220,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2218,"name":"hashedName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2214,"src":"7603:10:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":2219,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7617:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7603:15:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2228,"nodeType":"Block","src":"7676:53:10","statements":[{"expression":{"arguments":[{"hexValue":"","id":2225,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7711:2:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":2224,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"7701:9:10","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2226,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7701:13:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2186,"id":2227,"nodeType":"Return","src":"7694:20:10"}]},"id":2229,"nodeType":"IfStatement","src":"7599:130:10","trueBody":{"id":2223,"nodeType":"Block","src":"7620:50:10","statements":[{"expression":{"id":2221,"name":"hashedName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2214,"src":"7645:10:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2186,"id":2222,"nodeType":"Return","src":"7638:17:10"}]}}]},"id":2231,"nodeType":"IfStatement","src":"7226:513:10","trueBody":{"id":2212,"nodeType":"Block","src":"7254:54:10","statements":[{"expression":{"arguments":[{"arguments":[{"id":2208,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2194,"src":"7291:4:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2207,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7285:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2206,"name":"bytes","nodeType":"ElementaryTypeName","src":"7285:5:10","typeDescriptions":{}}},"id":2209,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7285:11:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2205,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"7275:9:10","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2210,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7275:22:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2186,"id":2211,"nodeType":"Return","src":"7268:29:10"}]}}]},"documentation":{"id":2182,"nodeType":"StructuredDocumentation","src":"6849:204:10","text":" @dev The hash of the name parameter for the EIP712 domain.\n NOTE: In previous versions this function was virtual. In this version you should override `_EIP712Name` instead."},"id":2233,"implemented":true,"kind":"function","modifiers":[],"name":"_EIP712NameHash","nameLocation":"7067:15:10","nodeType":"FunctionDefinition","parameters":{"id":2183,"nodeType":"ParameterList","parameters":[],"src":"7082:2:10"},"returnParameters":{"id":2186,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2185,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2233,"src":"7108:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2184,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7108:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7107:9:10"},"scope":2286,"src":"7058:687:10","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2284,"nodeType":"Block","src":"8028:661:10","statements":[{"assignments":[2241],"declarations":[{"constant":false,"id":2241,"mutability":"mutable","name":"$","nameLocation":"8060:1:10","nodeType":"VariableDeclaration","scope":2284,"src":"8038:23:10","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_EIP712Storage_$1972_storage_ptr","typeString":"struct EIP712Upgradeable.EIP712Storage"},"typeName":{"id":2240,"nodeType":"UserDefinedTypeName","pathNode":{"id":2239,"name":"EIP712Storage","nameLocations":["8038:13:10"],"nodeType":"IdentifierPath","referencedDeclaration":1972,"src":"8038:13:10"},"referencedDeclaration":1972,"src":"8038:13:10","typeDescriptions":{"typeIdentifier":"t_struct$_EIP712Storage_$1972_storage_ptr","typeString":"struct EIP712Upgradeable.EIP712Storage"}},"visibility":"internal"}],"id":2244,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":2242,"name":"_getEIP712Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1983,"src":"8064:17:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_EIP712Storage_$1972_storage_ptr_$","typeString":"function () pure returns (struct EIP712Upgradeable.EIP712Storage storage pointer)"}},"id":2243,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8064:19:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_EIP712Storage_$1972_storage_ptr","typeString":"struct EIP712Upgradeable.EIP712Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"8038:45:10"},{"assignments":[2246],"declarations":[{"constant":false,"id":2246,"mutability":"mutable","name":"version","nameLocation":"8107:7:10","nodeType":"VariableDeclaration","scope":2284,"src":"8093:21:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2245,"name":"string","nodeType":"ElementaryTypeName","src":"8093:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":2249,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":2247,"name":"_EIP712Version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2181,"src":"8117:14:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":2248,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8117:16:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"8093:40:10"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2256,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2252,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2246,"src":"8153:7:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2251,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8147:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2250,"name":"bytes","nodeType":"ElementaryTypeName","src":"8147:5:10","typeDescriptions":{}}},"id":2253,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8147:14:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2254,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8162:6:10","memberName":"length","nodeType":"MemberAccess","src":"8147:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2255,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8171:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8147:25:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2282,"nodeType":"Block","src":"8237:446:10","statements":[{"assignments":[2266],"declarations":[{"constant":false,"id":2266,"mutability":"mutable","name":"hashedVersion","nameLocation":"8491:13:10","nodeType":"VariableDeclaration","scope":2282,"src":"8483:21:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2265,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8483:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2269,"initialValue":{"expression":{"id":2267,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2241,"src":"8507:1:10","typeDescriptions":{"typeIdentifier":"t_struct$_EIP712Storage_$1972_storage_ptr","typeString":"struct EIP712Upgradeable.EIP712Storage storage pointer"}},"id":2268,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8509:14:10","memberName":"_hashedVersion","nodeType":"MemberAccess","referencedDeclaration":1967,"src":"8507:16:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"8483:40:10"},{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2272,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2270,"name":"hashedVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2266,"src":"8541:13:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":2271,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8558:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8541:18:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2280,"nodeType":"Block","src":"8620:53:10","statements":[{"expression":{"arguments":[{"hexValue":"","id":2277,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8655:2:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":2276,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"8645:9:10","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2278,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8645:13:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2238,"id":2279,"nodeType":"Return","src":"8638:20:10"}]},"id":2281,"nodeType":"IfStatement","src":"8537:136:10","trueBody":{"id":2275,"nodeType":"Block","src":"8561:53:10","statements":[{"expression":{"id":2273,"name":"hashedVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2266,"src":"8586:13:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2238,"id":2274,"nodeType":"Return","src":"8579:20:10"}]}}]},"id":2283,"nodeType":"IfStatement","src":"8143:540:10","trueBody":{"id":2264,"nodeType":"Block","src":"8174:57:10","statements":[{"expression":{"arguments":[{"arguments":[{"id":2260,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2246,"src":"8211:7:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2259,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8205:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2258,"name":"bytes","nodeType":"ElementaryTypeName","src":"8205:5:10","typeDescriptions":{}}},"id":2261,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8205:14:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2257,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"8195:9:10","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2262,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8195:25:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2238,"id":2263,"nodeType":"Return","src":"8188:32:10"}]}}]},"documentation":{"id":2234,"nodeType":"StructuredDocumentation","src":"7751:210:10","text":" @dev The hash of the version parameter for the EIP712 domain.\n NOTE: In previous versions this function was virtual. In this version you should override `_EIP712Version` instead."},"id":2285,"implemented":true,"kind":"function","modifiers":[],"name":"_EIP712VersionHash","nameLocation":"7975:18:10","nodeType":"FunctionDefinition","parameters":{"id":2235,"nodeType":"ParameterList","parameters":[],"src":"7993:2:10"},"returnParameters":{"id":2238,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2237,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2285,"src":"8019:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2236,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8019:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"8018:9:10"},"scope":2286,"src":"7966:723:10","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":2287,"src":"1959:6732:10","usedErrors":[211,214],"usedEvents":[219,2350]}],"src":"113:8579:10"},"id":10},"@openzeppelin/contracts/interfaces/IERC3156FlashBorrower.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC3156FlashBorrower.sol","exportedSymbols":{"IERC3156FlashBorrower":[2306]},"id":2307,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2288,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"120:24:11"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC3156FlashBorrower","contractDependencies":[],"contractKind":"interface","documentation":{"id":2289,"nodeType":"StructuredDocumentation","src":"146:123:11","text":" @dev Interface of the ERC3156 FlashBorrower, as defined in\n https://eips.ethereum.org/EIPS/eip-3156[ERC-3156]."},"fullyImplemented":false,"id":2306,"linearizedBaseContracts":[2306],"name":"IERC3156FlashBorrower","nameLocation":"280:21:11","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2290,"nodeType":"StructuredDocumentation","src":"308:405:11","text":" @dev Receive a flash loan.\n @param initiator The initiator of the loan.\n @param token The loan currency.\n @param amount The amount of tokens lent.\n @param fee The additional amount of tokens to repay.\n @param data Arbitrary data structure, intended to contain user-defined parameters.\n @return The keccak256 hash of \"ERC3156FlashBorrower.onFlashLoan\""},"functionSelector":"23e30c8b","id":2305,"implemented":false,"kind":"function","modifiers":[],"name":"onFlashLoan","nameLocation":"727:11:11","nodeType":"FunctionDefinition","parameters":{"id":2301,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2292,"mutability":"mutable","name":"initiator","nameLocation":"756:9:11","nodeType":"VariableDeclaration","scope":2305,"src":"748:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2291,"name":"address","nodeType":"ElementaryTypeName","src":"748:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2294,"mutability":"mutable","name":"token","nameLocation":"783:5:11","nodeType":"VariableDeclaration","scope":2305,"src":"775:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2293,"name":"address","nodeType":"ElementaryTypeName","src":"775:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2296,"mutability":"mutable","name":"amount","nameLocation":"806:6:11","nodeType":"VariableDeclaration","scope":2305,"src":"798:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2295,"name":"uint256","nodeType":"ElementaryTypeName","src":"798:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2298,"mutability":"mutable","name":"fee","nameLocation":"830:3:11","nodeType":"VariableDeclaration","scope":2305,"src":"822:11:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2297,"name":"uint256","nodeType":"ElementaryTypeName","src":"822:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2300,"mutability":"mutable","name":"data","nameLocation":"858:4:11","nodeType":"VariableDeclaration","scope":2305,"src":"843:19:11","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2299,"name":"bytes","nodeType":"ElementaryTypeName","src":"843:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"738:130:11"},"returnParameters":{"id":2304,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2303,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2305,"src":"887:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2302,"name":"bytes32","nodeType":"ElementaryTypeName","src":"887:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"886:9:11"},"scope":2306,"src":"718:178:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":2307,"src":"270:628:11","usedErrors":[],"usedEvents":[]}],"src":"120:779:11"},"id":11},"@openzeppelin/contracts/interfaces/IERC3156FlashLender.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC3156FlashLender.sol","exportedSymbols":{"IERC3156FlashBorrower":[2306],"IERC3156FlashLender":[2345]},"id":2346,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2308,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"118:24:12"},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC3156FlashBorrower.sol","file":"./IERC3156FlashBorrower.sol","id":2310,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2346,"sourceUnit":2307,"src":"144:66:12","symbolAliases":[{"foreign":{"id":2309,"name":"IERC3156FlashBorrower","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2306,"src":"152:21:12","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"IERC3156FlashLender","contractDependencies":[],"contractKind":"interface","documentation":{"id":2311,"nodeType":"StructuredDocumentation","src":"212:121:12","text":" @dev Interface of the ERC3156 FlashLender, as defined in\n https://eips.ethereum.org/EIPS/eip-3156[ERC-3156]."},"fullyImplemented":false,"id":2345,"linearizedBaseContracts":[2345],"name":"IERC3156FlashLender","nameLocation":"344:19:12","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2312,"nodeType":"StructuredDocumentation","src":"370:168:12","text":" @dev The amount of currency available to be lended.\n @param token The loan currency.\n @return The amount of `token` that can be borrowed."},"functionSelector":"613255ab","id":2319,"implemented":false,"kind":"function","modifiers":[],"name":"maxFlashLoan","nameLocation":"552:12:12","nodeType":"FunctionDefinition","parameters":{"id":2315,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2314,"mutability":"mutable","name":"token","nameLocation":"573:5:12","nodeType":"VariableDeclaration","scope":2319,"src":"565:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2313,"name":"address","nodeType":"ElementaryTypeName","src":"565:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"564:15:12"},"returnParameters":{"id":2318,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2317,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2319,"src":"603:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2316,"name":"uint256","nodeType":"ElementaryTypeName","src":"603:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"602:9:12"},"scope":2345,"src":"543:69:12","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2320,"nodeType":"StructuredDocumentation","src":"618:249:12","text":" @dev The fee to be charged for a given loan.\n @param token The loan currency.\n @param amount The amount of tokens lent.\n @return The amount of `token` to be charged for the loan, on top of the returned principal."},"functionSelector":"d9d98ce4","id":2329,"implemented":false,"kind":"function","modifiers":[],"name":"flashFee","nameLocation":"881:8:12","nodeType":"FunctionDefinition","parameters":{"id":2325,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2322,"mutability":"mutable","name":"token","nameLocation":"898:5:12","nodeType":"VariableDeclaration","scope":2329,"src":"890:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2321,"name":"address","nodeType":"ElementaryTypeName","src":"890:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2324,"mutability":"mutable","name":"amount","nameLocation":"913:6:12","nodeType":"VariableDeclaration","scope":2329,"src":"905:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2323,"name":"uint256","nodeType":"ElementaryTypeName","src":"905:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"889:31:12"},"returnParameters":{"id":2328,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2327,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2329,"src":"944:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2326,"name":"uint256","nodeType":"ElementaryTypeName","src":"944:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"943:9:12"},"scope":2345,"src":"872:81:12","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2330,"nodeType":"StructuredDocumentation","src":"959:320:12","text":" @dev Initiate a flash loan.\n @param receiver The receiver of the tokens in the loan, and the receiver of the callback.\n @param token The loan currency.\n @param amount The amount of tokens lent.\n @param data Arbitrary data structure, intended to contain user-defined parameters."},"functionSelector":"5cffe9de","id":2344,"implemented":false,"kind":"function","modifiers":[],"name":"flashLoan","nameLocation":"1293:9:12","nodeType":"FunctionDefinition","parameters":{"id":2340,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2333,"mutability":"mutable","name":"receiver","nameLocation":"1334:8:12","nodeType":"VariableDeclaration","scope":2344,"src":"1312:30:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC3156FlashBorrower_$2306","typeString":"contract IERC3156FlashBorrower"},"typeName":{"id":2332,"nodeType":"UserDefinedTypeName","pathNode":{"id":2331,"name":"IERC3156FlashBorrower","nameLocations":["1312:21:12"],"nodeType":"IdentifierPath","referencedDeclaration":2306,"src":"1312:21:12"},"referencedDeclaration":2306,"src":"1312:21:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC3156FlashBorrower_$2306","typeString":"contract IERC3156FlashBorrower"}},"visibility":"internal"},{"constant":false,"id":2335,"mutability":"mutable","name":"token","nameLocation":"1360:5:12","nodeType":"VariableDeclaration","scope":2344,"src":"1352:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2334,"name":"address","nodeType":"ElementaryTypeName","src":"1352:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2337,"mutability":"mutable","name":"amount","nameLocation":"1383:6:12","nodeType":"VariableDeclaration","scope":2344,"src":"1375:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2336,"name":"uint256","nodeType":"ElementaryTypeName","src":"1375:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2339,"mutability":"mutable","name":"data","nameLocation":"1414:4:12","nodeType":"VariableDeclaration","scope":2344,"src":"1399:19:12","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2338,"name":"bytes","nodeType":"ElementaryTypeName","src":"1399:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1302:122:12"},"returnParameters":{"id":2343,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2342,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2344,"src":"1443:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2341,"name":"bool","nodeType":"ElementaryTypeName","src":"1443:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1442:6:12"},"scope":2345,"src":"1284:165:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":2346,"src":"334:1117:12","usedErrors":[],"usedEvents":[]}],"src":"118:1334:12"},"id":12},"@openzeppelin/contracts/interfaces/IERC5267.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC5267.sol","exportedSymbols":{"IERC5267":[2370]},"id":2371,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2347,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"107:24:13"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC5267","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":2370,"linearizedBaseContracts":[2370],"name":"IERC5267","nameLocation":"143:8:13","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":2348,"nodeType":"StructuredDocumentation","src":"158:84:13","text":" @dev MAY be emitted to signal that the domain could have changed."},"eventSelector":"0a6387c9ea3628b88a633bb4f3b151770f70085117a15f9bf3787cda53f13d31","id":2350,"name":"EIP712DomainChanged","nameLocation":"253:19:13","nodeType":"EventDefinition","parameters":{"id":2349,"nodeType":"ParameterList","parameters":[],"src":"272:2:13"},"src":"247:28:13"},{"documentation":{"id":2351,"nodeType":"StructuredDocumentation","src":"281:140:13","text":" @dev returns the fields and values that describe the domain separator used by this contract for EIP-712\n signature."},"functionSelector":"84b0196e","id":2369,"implemented":false,"kind":"function","modifiers":[],"name":"eip712Domain","nameLocation":"435:12:13","nodeType":"FunctionDefinition","parameters":{"id":2352,"nodeType":"ParameterList","parameters":[],"src":"447:2:13"},"returnParameters":{"id":2368,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2354,"mutability":"mutable","name":"fields","nameLocation":"517:6:13","nodeType":"VariableDeclaration","scope":2369,"src":"510:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":2353,"name":"bytes1","nodeType":"ElementaryTypeName","src":"510:6:13","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"},{"constant":false,"id":2356,"mutability":"mutable","name":"name","nameLocation":"551:4:13","nodeType":"VariableDeclaration","scope":2369,"src":"537:18:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2355,"name":"string","nodeType":"ElementaryTypeName","src":"537:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2358,"mutability":"mutable","name":"version","nameLocation":"583:7:13","nodeType":"VariableDeclaration","scope":2369,"src":"569:21:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2357,"name":"string","nodeType":"ElementaryTypeName","src":"569:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2360,"mutability":"mutable","name":"chainId","nameLocation":"612:7:13","nodeType":"VariableDeclaration","scope":2369,"src":"604:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2359,"name":"uint256","nodeType":"ElementaryTypeName","src":"604:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2362,"mutability":"mutable","name":"verifyingContract","nameLocation":"641:17:13","nodeType":"VariableDeclaration","scope":2369,"src":"633:25:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2361,"name":"address","nodeType":"ElementaryTypeName","src":"633:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2364,"mutability":"mutable","name":"salt","nameLocation":"680:4:13","nodeType":"VariableDeclaration","scope":2369,"src":"672:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2363,"name":"bytes32","nodeType":"ElementaryTypeName","src":"672:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2367,"mutability":"mutable","name":"extensions","nameLocation":"715:10:13","nodeType":"VariableDeclaration","scope":2369,"src":"698:27:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2365,"name":"uint256","nodeType":"ElementaryTypeName","src":"698:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2366,"nodeType":"ArrayTypeName","src":"698:9:13","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"496:239:13"},"scope":2370,"src":"426:310:13","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2371,"src":"133:605:13","usedErrors":[],"usedEvents":[2350]}],"src":"107:632:13"},"id":13},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","exportedSymbols":{"IERC1155Errors":[2507],"IERC20Errors":[2412],"IERC721Errors":[2460]},"id":2508,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2372,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"112:24:14"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":2373,"nodeType":"StructuredDocumentation","src":"138:139:14","text":" @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."},"fullyImplemented":true,"id":2412,"linearizedBaseContracts":[2412],"name":"IERC20Errors","nameLocation":"288:12:14","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2374,"nodeType":"StructuredDocumentation","src":"307:309:14","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"e450d38c","id":2382,"name":"ERC20InsufficientBalance","nameLocation":"627:24:14","nodeType":"ErrorDefinition","parameters":{"id":2381,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2376,"mutability":"mutable","name":"sender","nameLocation":"660:6:14","nodeType":"VariableDeclaration","scope":2382,"src":"652:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2375,"name":"address","nodeType":"ElementaryTypeName","src":"652:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2378,"mutability":"mutable","name":"balance","nameLocation":"676:7:14","nodeType":"VariableDeclaration","scope":2382,"src":"668:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2377,"name":"uint256","nodeType":"ElementaryTypeName","src":"668:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2380,"mutability":"mutable","name":"needed","nameLocation":"693:6:14","nodeType":"VariableDeclaration","scope":2382,"src":"685:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2379,"name":"uint256","nodeType":"ElementaryTypeName","src":"685:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"651:49:14"},"src":"621:80:14"},{"documentation":{"id":2383,"nodeType":"StructuredDocumentation","src":"707:152:14","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"96c6fd1e","id":2387,"name":"ERC20InvalidSender","nameLocation":"870:18:14","nodeType":"ErrorDefinition","parameters":{"id":2386,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2385,"mutability":"mutable","name":"sender","nameLocation":"897:6:14","nodeType":"VariableDeclaration","scope":2387,"src":"889:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2384,"name":"address","nodeType":"ElementaryTypeName","src":"889:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"888:16:14"},"src":"864:41:14"},{"documentation":{"id":2388,"nodeType":"StructuredDocumentation","src":"911:159:14","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"ec442f05","id":2392,"name":"ERC20InvalidReceiver","nameLocation":"1081:20:14","nodeType":"ErrorDefinition","parameters":{"id":2391,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2390,"mutability":"mutable","name":"receiver","nameLocation":"1110:8:14","nodeType":"VariableDeclaration","scope":2392,"src":"1102:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2389,"name":"address","nodeType":"ElementaryTypeName","src":"1102:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1101:18:14"},"src":"1075:45:14"},{"documentation":{"id":2393,"nodeType":"StructuredDocumentation","src":"1126:345:14","text":" @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"fb8f41b2","id":2401,"name":"ERC20InsufficientAllowance","nameLocation":"1482:26:14","nodeType":"ErrorDefinition","parameters":{"id":2400,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2395,"mutability":"mutable","name":"spender","nameLocation":"1517:7:14","nodeType":"VariableDeclaration","scope":2401,"src":"1509:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2394,"name":"address","nodeType":"ElementaryTypeName","src":"1509:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2397,"mutability":"mutable","name":"allowance","nameLocation":"1534:9:14","nodeType":"VariableDeclaration","scope":2401,"src":"1526:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2396,"name":"uint256","nodeType":"ElementaryTypeName","src":"1526:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2399,"mutability":"mutable","name":"needed","nameLocation":"1553:6:14","nodeType":"VariableDeclaration","scope":2401,"src":"1545:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2398,"name":"uint256","nodeType":"ElementaryTypeName","src":"1545:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1508:52:14"},"src":"1476:85:14"},{"documentation":{"id":2402,"nodeType":"StructuredDocumentation","src":"1567:174:14","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"e602df05","id":2406,"name":"ERC20InvalidApprover","nameLocation":"1752:20:14","nodeType":"ErrorDefinition","parameters":{"id":2405,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2404,"mutability":"mutable","name":"approver","nameLocation":"1781:8:14","nodeType":"VariableDeclaration","scope":2406,"src":"1773:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2403,"name":"address","nodeType":"ElementaryTypeName","src":"1773:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1772:18:14"},"src":"1746:45:14"},{"documentation":{"id":2407,"nodeType":"StructuredDocumentation","src":"1797:195:14","text":" @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"94280d62","id":2411,"name":"ERC20InvalidSpender","nameLocation":"2003:19:14","nodeType":"ErrorDefinition","parameters":{"id":2410,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2409,"mutability":"mutable","name":"spender","nameLocation":"2031:7:14","nodeType":"VariableDeclaration","scope":2411,"src":"2023:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2408,"name":"address","nodeType":"ElementaryTypeName","src":"2023:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2022:17:14"},"src":"1997:43:14"}],"scope":2508,"src":"278:1764:14","usedErrors":[2382,2387,2392,2401,2406,2411],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC721Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":2413,"nodeType":"StructuredDocumentation","src":"2044:141:14","text":" @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."},"fullyImplemented":true,"id":2460,"linearizedBaseContracts":[2460],"name":"IERC721Errors","nameLocation":"2196:13:14","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2414,"nodeType":"StructuredDocumentation","src":"2216:219:14","text":" @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."},"errorSelector":"89c62b64","id":2418,"name":"ERC721InvalidOwner","nameLocation":"2446:18:14","nodeType":"ErrorDefinition","parameters":{"id":2417,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2416,"mutability":"mutable","name":"owner","nameLocation":"2473:5:14","nodeType":"VariableDeclaration","scope":2418,"src":"2465:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2415,"name":"address","nodeType":"ElementaryTypeName","src":"2465:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2464:15:14"},"src":"2440:40:14"},{"documentation":{"id":2419,"nodeType":"StructuredDocumentation","src":"2486:132:14","text":" @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."},"errorSelector":"7e273289","id":2423,"name":"ERC721NonexistentToken","nameLocation":"2629:22:14","nodeType":"ErrorDefinition","parameters":{"id":2422,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2421,"mutability":"mutable","name":"tokenId","nameLocation":"2660:7:14","nodeType":"VariableDeclaration","scope":2423,"src":"2652:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2420,"name":"uint256","nodeType":"ElementaryTypeName","src":"2652:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2651:17:14"},"src":"2623:46:14"},{"documentation":{"id":2424,"nodeType":"StructuredDocumentation","src":"2675:289:14","text":" @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."},"errorSelector":"64283d7b","id":2432,"name":"ERC721IncorrectOwner","nameLocation":"2975:20:14","nodeType":"ErrorDefinition","parameters":{"id":2431,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2426,"mutability":"mutable","name":"sender","nameLocation":"3004:6:14","nodeType":"VariableDeclaration","scope":2432,"src":"2996:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2425,"name":"address","nodeType":"ElementaryTypeName","src":"2996:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2428,"mutability":"mutable","name":"tokenId","nameLocation":"3020:7:14","nodeType":"VariableDeclaration","scope":2432,"src":"3012:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2427,"name":"uint256","nodeType":"ElementaryTypeName","src":"3012:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2430,"mutability":"mutable","name":"owner","nameLocation":"3037:5:14","nodeType":"VariableDeclaration","scope":2432,"src":"3029:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2429,"name":"address","nodeType":"ElementaryTypeName","src":"3029:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2995:48:14"},"src":"2969:75:14"},{"documentation":{"id":2433,"nodeType":"StructuredDocumentation","src":"3050:152:14","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"73c6ac6e","id":2437,"name":"ERC721InvalidSender","nameLocation":"3213:19:14","nodeType":"ErrorDefinition","parameters":{"id":2436,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2435,"mutability":"mutable","name":"sender","nameLocation":"3241:6:14","nodeType":"VariableDeclaration","scope":2437,"src":"3233:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2434,"name":"address","nodeType":"ElementaryTypeName","src":"3233:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3232:16:14"},"src":"3207:42:14"},{"documentation":{"id":2438,"nodeType":"StructuredDocumentation","src":"3255:159:14","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"64a0ae92","id":2442,"name":"ERC721InvalidReceiver","nameLocation":"3425:21:14","nodeType":"ErrorDefinition","parameters":{"id":2441,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2440,"mutability":"mutable","name":"receiver","nameLocation":"3455:8:14","nodeType":"VariableDeclaration","scope":2442,"src":"3447:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2439,"name":"address","nodeType":"ElementaryTypeName","src":"3447:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3446:18:14"},"src":"3419:46:14"},{"documentation":{"id":2443,"nodeType":"StructuredDocumentation","src":"3471:247:14","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."},"errorSelector":"177e802f","id":2449,"name":"ERC721InsufficientApproval","nameLocation":"3729:26:14","nodeType":"ErrorDefinition","parameters":{"id":2448,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2445,"mutability":"mutable","name":"operator","nameLocation":"3764:8:14","nodeType":"VariableDeclaration","scope":2449,"src":"3756:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2444,"name":"address","nodeType":"ElementaryTypeName","src":"3756:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2447,"mutability":"mutable","name":"tokenId","nameLocation":"3782:7:14","nodeType":"VariableDeclaration","scope":2449,"src":"3774:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2446,"name":"uint256","nodeType":"ElementaryTypeName","src":"3774:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3755:35:14"},"src":"3723:68:14"},{"documentation":{"id":2450,"nodeType":"StructuredDocumentation","src":"3797:174:14","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"a9fbf51f","id":2454,"name":"ERC721InvalidApprover","nameLocation":"3982:21:14","nodeType":"ErrorDefinition","parameters":{"id":2453,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2452,"mutability":"mutable","name":"approver","nameLocation":"4012:8:14","nodeType":"VariableDeclaration","scope":2454,"src":"4004:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2451,"name":"address","nodeType":"ElementaryTypeName","src":"4004:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4003:18:14"},"src":"3976:46:14"},{"documentation":{"id":2455,"nodeType":"StructuredDocumentation","src":"4028:197:14","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"5b08ba18","id":2459,"name":"ERC721InvalidOperator","nameLocation":"4236:21:14","nodeType":"ErrorDefinition","parameters":{"id":2458,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2457,"mutability":"mutable","name":"operator","nameLocation":"4266:8:14","nodeType":"VariableDeclaration","scope":2459,"src":"4258:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2456,"name":"address","nodeType":"ElementaryTypeName","src":"4258:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4257:18:14"},"src":"4230:46:14"}],"scope":2508,"src":"2186:2092:14","usedErrors":[2418,2423,2432,2437,2442,2449,2454,2459],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1155Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":2461,"nodeType":"StructuredDocumentation","src":"4280:143:14","text":" @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."},"fullyImplemented":true,"id":2507,"linearizedBaseContracts":[2507],"name":"IERC1155Errors","nameLocation":"4434:14:14","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2462,"nodeType":"StructuredDocumentation","src":"4455:361:14","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."},"errorSelector":"03dee4c5","id":2472,"name":"ERC1155InsufficientBalance","nameLocation":"4827:26:14","nodeType":"ErrorDefinition","parameters":{"id":2471,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2464,"mutability":"mutable","name":"sender","nameLocation":"4862:6:14","nodeType":"VariableDeclaration","scope":2472,"src":"4854:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2463,"name":"address","nodeType":"ElementaryTypeName","src":"4854:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2466,"mutability":"mutable","name":"balance","nameLocation":"4878:7:14","nodeType":"VariableDeclaration","scope":2472,"src":"4870:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2465,"name":"uint256","nodeType":"ElementaryTypeName","src":"4870:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2468,"mutability":"mutable","name":"needed","nameLocation":"4895:6:14","nodeType":"VariableDeclaration","scope":2472,"src":"4887:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2467,"name":"uint256","nodeType":"ElementaryTypeName","src":"4887:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2470,"mutability":"mutable","name":"tokenId","nameLocation":"4911:7:14","nodeType":"VariableDeclaration","scope":2472,"src":"4903:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2469,"name":"uint256","nodeType":"ElementaryTypeName","src":"4903:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4853:66:14"},"src":"4821:99:14"},{"documentation":{"id":2473,"nodeType":"StructuredDocumentation","src":"4926:152:14","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"01a83514","id":2477,"name":"ERC1155InvalidSender","nameLocation":"5089:20:14","nodeType":"ErrorDefinition","parameters":{"id":2476,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2475,"mutability":"mutable","name":"sender","nameLocation":"5118:6:14","nodeType":"VariableDeclaration","scope":2477,"src":"5110:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2474,"name":"address","nodeType":"ElementaryTypeName","src":"5110:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5109:16:14"},"src":"5083:43:14"},{"documentation":{"id":2478,"nodeType":"StructuredDocumentation","src":"5132:159:14","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"57f447ce","id":2482,"name":"ERC1155InvalidReceiver","nameLocation":"5302:22:14","nodeType":"ErrorDefinition","parameters":{"id":2481,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2480,"mutability":"mutable","name":"receiver","nameLocation":"5333:8:14","nodeType":"VariableDeclaration","scope":2482,"src":"5325:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2479,"name":"address","nodeType":"ElementaryTypeName","src":"5325:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5324:18:14"},"src":"5296:47:14"},{"documentation":{"id":2483,"nodeType":"StructuredDocumentation","src":"5349:256:14","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."},"errorSelector":"e237d922","id":2489,"name":"ERC1155MissingApprovalForAll","nameLocation":"5616:28:14","nodeType":"ErrorDefinition","parameters":{"id":2488,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2485,"mutability":"mutable","name":"operator","nameLocation":"5653:8:14","nodeType":"VariableDeclaration","scope":2489,"src":"5645:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2484,"name":"address","nodeType":"ElementaryTypeName","src":"5645:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2487,"mutability":"mutable","name":"owner","nameLocation":"5671:5:14","nodeType":"VariableDeclaration","scope":2489,"src":"5663:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2486,"name":"address","nodeType":"ElementaryTypeName","src":"5663:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5644:33:14"},"src":"5610:68:14"},{"documentation":{"id":2490,"nodeType":"StructuredDocumentation","src":"5684:174:14","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"3e31884e","id":2494,"name":"ERC1155InvalidApprover","nameLocation":"5869:22:14","nodeType":"ErrorDefinition","parameters":{"id":2493,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2492,"mutability":"mutable","name":"approver","nameLocation":"5900:8:14","nodeType":"VariableDeclaration","scope":2494,"src":"5892:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2491,"name":"address","nodeType":"ElementaryTypeName","src":"5892:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5891:18:14"},"src":"5863:47:14"},{"documentation":{"id":2495,"nodeType":"StructuredDocumentation","src":"5916:197:14","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"ced3e100","id":2499,"name":"ERC1155InvalidOperator","nameLocation":"6124:22:14","nodeType":"ErrorDefinition","parameters":{"id":2498,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2497,"mutability":"mutable","name":"operator","nameLocation":"6155:8:14","nodeType":"VariableDeclaration","scope":2499,"src":"6147:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2496,"name":"address","nodeType":"ElementaryTypeName","src":"6147:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6146:18:14"},"src":"6118:47:14"},{"documentation":{"id":2500,"nodeType":"StructuredDocumentation","src":"6171:280:14","text":" @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"},"errorSelector":"5b059991","id":2506,"name":"ERC1155InvalidArrayLength","nameLocation":"6462:25:14","nodeType":"ErrorDefinition","parameters":{"id":2505,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2502,"mutability":"mutable","name":"idsLength","nameLocation":"6496:9:14","nodeType":"VariableDeclaration","scope":2506,"src":"6488:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2501,"name":"uint256","nodeType":"ElementaryTypeName","src":"6488:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2504,"mutability":"mutable","name":"valuesLength","nameLocation":"6515:12:14","nodeType":"VariableDeclaration","scope":2506,"src":"6507:20:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2503,"name":"uint256","nodeType":"ElementaryTypeName","src":"6507:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6487:41:14"},"src":"6456:73:14"}],"scope":2508,"src":"4424:2107:14","usedErrors":[2472,2477,2482,2489,2494,2499,2506],"usedEvents":[]}],"src":"112:6420:14"},"id":14},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[2585]},"id":2586,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2509,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"106:24:15"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":2510,"nodeType":"StructuredDocumentation","src":"132:70:15","text":" @dev Interface of the ERC20 standard as defined in the EIP."},"fullyImplemented":false,"id":2585,"linearizedBaseContracts":[2585],"name":"IERC20","nameLocation":"213:6:15","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":2511,"nodeType":"StructuredDocumentation","src":"226:158:15","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":2519,"name":"Transfer","nameLocation":"395:8:15","nodeType":"EventDefinition","parameters":{"id":2518,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2513,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"420:4:15","nodeType":"VariableDeclaration","scope":2519,"src":"404:20:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2512,"name":"address","nodeType":"ElementaryTypeName","src":"404:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2515,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"442:2:15","nodeType":"VariableDeclaration","scope":2519,"src":"426:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2514,"name":"address","nodeType":"ElementaryTypeName","src":"426:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2517,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"454:5:15","nodeType":"VariableDeclaration","scope":2519,"src":"446:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2516,"name":"uint256","nodeType":"ElementaryTypeName","src":"446:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"403:57:15"},"src":"389:72:15"},{"anonymous":false,"documentation":{"id":2520,"nodeType":"StructuredDocumentation","src":"467:148:15","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":2528,"name":"Approval","nameLocation":"626:8:15","nodeType":"EventDefinition","parameters":{"id":2527,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2522,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"651:5:15","nodeType":"VariableDeclaration","scope":2528,"src":"635:21:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2521,"name":"address","nodeType":"ElementaryTypeName","src":"635:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2524,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"674:7:15","nodeType":"VariableDeclaration","scope":2528,"src":"658:23:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2523,"name":"address","nodeType":"ElementaryTypeName","src":"658:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2526,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"691:5:15","nodeType":"VariableDeclaration","scope":2528,"src":"683:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2525,"name":"uint256","nodeType":"ElementaryTypeName","src":"683:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"634:63:15"},"src":"620:78:15"},{"documentation":{"id":2529,"nodeType":"StructuredDocumentation","src":"704:65:15","text":" @dev Returns the value of tokens in existence."},"functionSelector":"18160ddd","id":2534,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"783:11:15","nodeType":"FunctionDefinition","parameters":{"id":2530,"nodeType":"ParameterList","parameters":[],"src":"794:2:15"},"returnParameters":{"id":2533,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2532,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2534,"src":"820:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2531,"name":"uint256","nodeType":"ElementaryTypeName","src":"820:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"819:9:15"},"scope":2585,"src":"774:55:15","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2535,"nodeType":"StructuredDocumentation","src":"835:71:15","text":" @dev Returns the value of tokens owned by `account`."},"functionSelector":"70a08231","id":2542,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"920:9:15","nodeType":"FunctionDefinition","parameters":{"id":2538,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2537,"mutability":"mutable","name":"account","nameLocation":"938:7:15","nodeType":"VariableDeclaration","scope":2542,"src":"930:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2536,"name":"address","nodeType":"ElementaryTypeName","src":"930:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"929:17:15"},"returnParameters":{"id":2541,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2540,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2542,"src":"970:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2539,"name":"uint256","nodeType":"ElementaryTypeName","src":"970:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"969:9:15"},"scope":2585,"src":"911:68:15","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2543,"nodeType":"StructuredDocumentation","src":"985:213:15","text":" @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":2552,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1212:8:15","nodeType":"FunctionDefinition","parameters":{"id":2548,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2545,"mutability":"mutable","name":"to","nameLocation":"1229:2:15","nodeType":"VariableDeclaration","scope":2552,"src":"1221:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2544,"name":"address","nodeType":"ElementaryTypeName","src":"1221:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2547,"mutability":"mutable","name":"value","nameLocation":"1241:5:15","nodeType":"VariableDeclaration","scope":2552,"src":"1233:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2546,"name":"uint256","nodeType":"ElementaryTypeName","src":"1233:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1220:27:15"},"returnParameters":{"id":2551,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2550,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2552,"src":"1266:4:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2549,"name":"bool","nodeType":"ElementaryTypeName","src":"1266:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1265:6:15"},"scope":2585,"src":"1203:69:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2553,"nodeType":"StructuredDocumentation","src":"1278:264:15","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":2562,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1556:9:15","nodeType":"FunctionDefinition","parameters":{"id":2558,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2555,"mutability":"mutable","name":"owner","nameLocation":"1574:5:15","nodeType":"VariableDeclaration","scope":2562,"src":"1566:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2554,"name":"address","nodeType":"ElementaryTypeName","src":"1566:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2557,"mutability":"mutable","name":"spender","nameLocation":"1589:7:15","nodeType":"VariableDeclaration","scope":2562,"src":"1581:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2556,"name":"address","nodeType":"ElementaryTypeName","src":"1581:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1565:32:15"},"returnParameters":{"id":2561,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2560,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2562,"src":"1621:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2559,"name":"uint256","nodeType":"ElementaryTypeName","src":"1621:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1620:9:15"},"scope":2585,"src":"1547:83:15","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2563,"nodeType":"StructuredDocumentation","src":"1636:667:15","text":" @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":2572,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2317:7:15","nodeType":"FunctionDefinition","parameters":{"id":2568,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2565,"mutability":"mutable","name":"spender","nameLocation":"2333:7:15","nodeType":"VariableDeclaration","scope":2572,"src":"2325:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2564,"name":"address","nodeType":"ElementaryTypeName","src":"2325:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2567,"mutability":"mutable","name":"value","nameLocation":"2350:5:15","nodeType":"VariableDeclaration","scope":2572,"src":"2342:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2566,"name":"uint256","nodeType":"ElementaryTypeName","src":"2342:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2324:32:15"},"returnParameters":{"id":2571,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2570,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2572,"src":"2375:4:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2569,"name":"bool","nodeType":"ElementaryTypeName","src":"2375:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2374:6:15"},"scope":2585,"src":"2308:73:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2573,"nodeType":"StructuredDocumentation","src":"2387:297:15","text":" @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":2584,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2698:12:15","nodeType":"FunctionDefinition","parameters":{"id":2580,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2575,"mutability":"mutable","name":"from","nameLocation":"2719:4:15","nodeType":"VariableDeclaration","scope":2584,"src":"2711:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2574,"name":"address","nodeType":"ElementaryTypeName","src":"2711:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2577,"mutability":"mutable","name":"to","nameLocation":"2733:2:15","nodeType":"VariableDeclaration","scope":2584,"src":"2725:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2576,"name":"address","nodeType":"ElementaryTypeName","src":"2725:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2579,"mutability":"mutable","name":"value","nameLocation":"2745:5:15","nodeType":"VariableDeclaration","scope":2584,"src":"2737:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2578,"name":"uint256","nodeType":"ElementaryTypeName","src":"2737:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2710:41:15"},"returnParameters":{"id":2583,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2582,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2584,"src":"2770:4:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2581,"name":"bool","nodeType":"ElementaryTypeName","src":"2770:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2769:6:15"},"scope":2585,"src":"2689:87:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":2586,"src":"203:2575:15","usedErrors":[],"usedEvents":[2519,2528]}],"src":"106:2673:15"},"id":15},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","exportedSymbols":{"IERC20":[2585],"IERC20Metadata":[2611]},"id":2612,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2587,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"125:24:16"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":2589,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2612,"sourceUnit":2586,"src":"151:37:16","symbolAliases":[{"foreign":{"id":2588,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2585,"src":"159:6:16","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2591,"name":"IERC20","nameLocations":["305:6:16"],"nodeType":"IdentifierPath","referencedDeclaration":2585,"src":"305:6:16"},"id":2592,"nodeType":"InheritanceSpecifier","src":"305:6:16"}],"canonicalName":"IERC20Metadata","contractDependencies":[],"contractKind":"interface","documentation":{"id":2590,"nodeType":"StructuredDocumentation","src":"190:86:16","text":" @dev Interface for the optional metadata functions from the ERC20 standard."},"fullyImplemented":false,"id":2611,"linearizedBaseContracts":[2611,2585],"name":"IERC20Metadata","nameLocation":"287:14:16","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2593,"nodeType":"StructuredDocumentation","src":"318:54:16","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":2598,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"386:4:16","nodeType":"FunctionDefinition","parameters":{"id":2594,"nodeType":"ParameterList","parameters":[],"src":"390:2:16"},"returnParameters":{"id":2597,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2596,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2598,"src":"416:13:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2595,"name":"string","nodeType":"ElementaryTypeName","src":"416:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"415:15:16"},"scope":2611,"src":"377:54:16","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2599,"nodeType":"StructuredDocumentation","src":"437:56:16","text":" @dev Returns the symbol of the token."},"functionSelector":"95d89b41","id":2604,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"507:6:16","nodeType":"FunctionDefinition","parameters":{"id":2600,"nodeType":"ParameterList","parameters":[],"src":"513:2:16"},"returnParameters":{"id":2603,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2602,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2604,"src":"539:13:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2601,"name":"string","nodeType":"ElementaryTypeName","src":"539:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"538:15:16"},"scope":2611,"src":"498:56:16","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2605,"nodeType":"StructuredDocumentation","src":"560:65:16","text":" @dev Returns the decimals places of the token."},"functionSelector":"313ce567","id":2610,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"639:8:16","nodeType":"FunctionDefinition","parameters":{"id":2606,"nodeType":"ParameterList","parameters":[],"src":"647:2:16"},"returnParameters":{"id":2609,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2608,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2610,"src":"673:5:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2607,"name":"uint8","nodeType":"ElementaryTypeName","src":"673:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"672:7:16"},"scope":2611,"src":"630:50:16","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2612,"src":"277:405:16","usedErrors":[],"usedEvents":[2519,2528]}],"src":"125:558:16"},"id":16},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol","exportedSymbols":{"IERC20Permit":[2647]},"id":2648,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2613,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"123:24:17"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Permit","contractDependencies":[],"contractKind":"interface","documentation":{"id":2614,"nodeType":"StructuredDocumentation","src":"149:1963:17","text":" @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all.\n ==== Security Considerations\n There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n considered as an intention to spend the allowance in any specific way. The second is that because permits have\n built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n generally recommended is:\n ```solidity\n function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n     doThing(..., value);\n }\n function doThing(..., uint256 value) public {\n     token.safeTransferFrom(msg.sender, address(this), value);\n     ...\n }\n ```\n Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n {SafeERC20-safeTransferFrom}).\n Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n contracts should have entry points that don't rely on permit."},"fullyImplemented":false,"id":2647,"linearizedBaseContracts":[2647],"name":"IERC20Permit","nameLocation":"2123:12:17","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2615,"nodeType":"StructuredDocumentation","src":"2142:850:17","text":" @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section].\n CAUTION: See Security Considerations above."},"functionSelector":"d505accf","id":2632,"implemented":false,"kind":"function","modifiers":[],"name":"permit","nameLocation":"3006:6:17","nodeType":"FunctionDefinition","parameters":{"id":2630,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2617,"mutability":"mutable","name":"owner","nameLocation":"3030:5:17","nodeType":"VariableDeclaration","scope":2632,"src":"3022:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2616,"name":"address","nodeType":"ElementaryTypeName","src":"3022:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2619,"mutability":"mutable","name":"spender","nameLocation":"3053:7:17","nodeType":"VariableDeclaration","scope":2632,"src":"3045:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2618,"name":"address","nodeType":"ElementaryTypeName","src":"3045:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2621,"mutability":"mutable","name":"value","nameLocation":"3078:5:17","nodeType":"VariableDeclaration","scope":2632,"src":"3070:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2620,"name":"uint256","nodeType":"ElementaryTypeName","src":"3070:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2623,"mutability":"mutable","name":"deadline","nameLocation":"3101:8:17","nodeType":"VariableDeclaration","scope":2632,"src":"3093:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2622,"name":"uint256","nodeType":"ElementaryTypeName","src":"3093:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2625,"mutability":"mutable","name":"v","nameLocation":"3125:1:17","nodeType":"VariableDeclaration","scope":2632,"src":"3119:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2624,"name":"uint8","nodeType":"ElementaryTypeName","src":"3119:5:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":2627,"mutability":"mutable","name":"r","nameLocation":"3144:1:17","nodeType":"VariableDeclaration","scope":2632,"src":"3136:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2626,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3136:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2629,"mutability":"mutable","name":"s","nameLocation":"3163:1:17","nodeType":"VariableDeclaration","scope":2632,"src":"3155:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2628,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3155:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3012:158:17"},"returnParameters":{"id":2631,"nodeType":"ParameterList","parameters":[],"src":"3179:0:17"},"scope":2647,"src":"2997:183:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2633,"nodeType":"StructuredDocumentation","src":"3186:294:17","text":" @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."},"functionSelector":"7ecebe00","id":2640,"implemented":false,"kind":"function","modifiers":[],"name":"nonces","nameLocation":"3494:6:17","nodeType":"FunctionDefinition","parameters":{"id":2636,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2635,"mutability":"mutable","name":"owner","nameLocation":"3509:5:17","nodeType":"VariableDeclaration","scope":2640,"src":"3501:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2634,"name":"address","nodeType":"ElementaryTypeName","src":"3501:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3500:15:17"},"returnParameters":{"id":2639,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2638,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2640,"src":"3539:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2637,"name":"uint256","nodeType":"ElementaryTypeName","src":"3539:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3538:9:17"},"scope":2647,"src":"3485:63:17","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2641,"nodeType":"StructuredDocumentation","src":"3554:128:17","text":" @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."},"functionSelector":"3644e515","id":2646,"implemented":false,"kind":"function","modifiers":[],"name":"DOMAIN_SEPARATOR","nameLocation":"3749:16:17","nodeType":"FunctionDefinition","parameters":{"id":2642,"nodeType":"ParameterList","parameters":[],"src":"3765:2:17"},"returnParameters":{"id":2645,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2644,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2646,"src":"3791:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2643,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3791:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3790:9:17"},"scope":2647,"src":"3740:60:17","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2648,"src":"2113:1689:17","usedErrors":[],"usedEvents":[]}],"src":"123:3680:17"},"id":17},"@openzeppelin/contracts/utils/Strings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","exportedSymbols":{"Math":[4378],"SignedMath":[4483],"Strings":[2902]},"id":2903,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2649,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:18"},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"./math/Math.sol","id":2651,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2903,"sourceUnit":4379,"src":"127:37:18","symbolAliases":[{"foreign":{"id":2650,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4378,"src":"135:4:18","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","file":"./math/SignedMath.sol","id":2653,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2903,"sourceUnit":4484,"src":"165:49:18","symbolAliases":[{"foreign":{"id":2652,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4483,"src":"173:10:18","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Strings","contractDependencies":[],"contractKind":"library","documentation":{"id":2654,"nodeType":"StructuredDocumentation","src":"216:34:18","text":" @dev String operations."},"fullyImplemented":true,"id":2902,"linearizedBaseContracts":[2902],"name":"Strings","nameLocation":"259:7:18","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":2657,"mutability":"constant","name":"HEX_DIGITS","nameLocation":"298:10:18","nodeType":"VariableDeclaration","scope":2902,"src":"273:56:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"},"typeName":{"id":2655,"name":"bytes16","nodeType":"ElementaryTypeName","src":"273:7:18","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"value":{"hexValue":"30313233343536373839616263646566","id":2656,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"311:18:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"visibility":"private"},{"constant":true,"id":2660,"mutability":"constant","name":"ADDRESS_LENGTH","nameLocation":"358:14:18","nodeType":"VariableDeclaration","scope":2902,"src":"335:42:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2658,"name":"uint8","nodeType":"ElementaryTypeName","src":"335:5:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3230","id":2659,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"375:2:18","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"private"},{"documentation":{"id":2661,"nodeType":"StructuredDocumentation","src":"384:81:18","text":" @dev The `value` string doesn't fit in the specified `length`."},"errorSelector":"e22e27eb","id":2667,"name":"StringsInsufficientHexLength","nameLocation":"476:28:18","nodeType":"ErrorDefinition","parameters":{"id":2666,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2663,"mutability":"mutable","name":"value","nameLocation":"513:5:18","nodeType":"VariableDeclaration","scope":2667,"src":"505:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2662,"name":"uint256","nodeType":"ElementaryTypeName","src":"505:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2665,"mutability":"mutable","name":"length","nameLocation":"528:6:18","nodeType":"VariableDeclaration","scope":2667,"src":"520:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2664,"name":"uint256","nodeType":"ElementaryTypeName","src":"520:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"504:31:18"},"src":"470:66:18"},{"body":{"id":2714,"nodeType":"Block","src":"708:627:18","statements":[{"id":2713,"nodeType":"UncheckedBlock","src":"718:611:18","statements":[{"assignments":[2676],"declarations":[{"constant":false,"id":2676,"mutability":"mutable","name":"length","nameLocation":"750:6:18","nodeType":"VariableDeclaration","scope":2713,"src":"742:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2675,"name":"uint256","nodeType":"ElementaryTypeName","src":"742:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2683,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2682,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2679,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2670,"src":"770:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2677,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4378,"src":"759:4:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$4378_$","typeString":"type(library Math)"}},"id":2678,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"764:5:18","memberName":"log10","nodeType":"MemberAccess","referencedDeclaration":4198,"src":"759:10:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2680,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"759:17:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2681,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"779:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"759:21:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"742:38:18"},{"assignments":[2685],"declarations":[{"constant":false,"id":2685,"mutability":"mutable","name":"buffer","nameLocation":"808:6:18","nodeType":"VariableDeclaration","scope":2713,"src":"794:20:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2684,"name":"string","nodeType":"ElementaryTypeName","src":"794:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":2690,"initialValue":{"arguments":[{"id":2688,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2676,"src":"828:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2687,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"817:10:18","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":2686,"name":"string","nodeType":"ElementaryTypeName","src":"821:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":2689,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"817:18:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"794:41:18"},{"assignments":[2692],"declarations":[{"constant":false,"id":2692,"mutability":"mutable","name":"ptr","nameLocation":"857:3:18","nodeType":"VariableDeclaration","scope":2713,"src":"849:11:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2691,"name":"uint256","nodeType":"ElementaryTypeName","src":"849:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2693,"nodeType":"VariableDeclarationStatement","src":"849:11:18"},{"AST":{"nodeType":"YulBlock","src":"930:67:18","statements":[{"nodeType":"YulAssignment","src":"948:35:18","value":{"arguments":[{"name":"buffer","nodeType":"YulIdentifier","src":"959:6:18"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"971:2:18","type":"","value":"32"},{"name":"length","nodeType":"YulIdentifier","src":"975:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"967:3:18"},"nodeType":"YulFunctionCall","src":"967:15:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"955:3:18"},"nodeType":"YulFunctionCall","src":"955:28:18"},"variableNames":[{"name":"ptr","nodeType":"YulIdentifier","src":"948:3:18"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2685,"isOffset":false,"isSlot":false,"src":"959:6:18","valueSize":1},{"declaration":2676,"isOffset":false,"isSlot":false,"src":"975:6:18","valueSize":1},{"declaration":2692,"isOffset":false,"isSlot":false,"src":"948:3:18","valueSize":1}],"id":2694,"nodeType":"InlineAssembly","src":"921:76:18"},{"body":{"id":2709,"nodeType":"Block","src":"1023:269:18","statements":[{"expression":{"id":2697,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"1041:5:18","subExpression":{"id":2696,"name":"ptr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2692,"src":"1041:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2698,"nodeType":"ExpressionStatement","src":"1041:5:18"},{"AST":{"nodeType":"YulBlock","src":"1124:86:18","statements":[{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"1154:3:18"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1168:5:18"},{"kind":"number","nodeType":"YulLiteral","src":"1175:2:18","type":"","value":"10"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"1164:3:18"},"nodeType":"YulFunctionCall","src":"1164:14:18"},{"name":"HEX_DIGITS","nodeType":"YulIdentifier","src":"1180:10:18"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"1159:4:18"},"nodeType":"YulFunctionCall","src":"1159:32:18"}],"functionName":{"name":"mstore8","nodeType":"YulIdentifier","src":"1146:7:18"},"nodeType":"YulFunctionCall","src":"1146:46:18"},"nodeType":"YulExpressionStatement","src":"1146:46:18"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2657,"isOffset":false,"isSlot":false,"src":"1180:10:18","valueSize":1},{"declaration":2692,"isOffset":false,"isSlot":false,"src":"1154:3:18","valueSize":1},{"declaration":2670,"isOffset":false,"isSlot":false,"src":"1168:5:18","valueSize":1}],"id":2699,"nodeType":"InlineAssembly","src":"1115:95:18"},{"expression":{"id":2702,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2700,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2670,"src":"1227:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":2701,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1236:2:18","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1227:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2703,"nodeType":"ExpressionStatement","src":"1227:11:18"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2706,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2704,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2670,"src":"1260:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2705,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1269:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1260:10:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2708,"nodeType":"IfStatement","src":"1256:21:18","trueBody":{"id":2707,"nodeType":"Break","src":"1272:5:18"}}]},"condition":{"hexValue":"74727565","id":2695,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1017:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"id":2710,"nodeType":"WhileStatement","src":"1010:282:18"},{"expression":{"id":2711,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2685,"src":"1312:6:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2674,"id":2712,"nodeType":"Return","src":"1305:13:18"}]}]},"documentation":{"id":2668,"nodeType":"StructuredDocumentation","src":"542:90:18","text":" @dev Converts a `uint256` to its ASCII `string` decimal representation."},"id":2715,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"646:8:18","nodeType":"FunctionDefinition","parameters":{"id":2671,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2670,"mutability":"mutable","name":"value","nameLocation":"663:5:18","nodeType":"VariableDeclaration","scope":2715,"src":"655:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2669,"name":"uint256","nodeType":"ElementaryTypeName","src":"655:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"654:15:18"},"returnParameters":{"id":2674,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2673,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2715,"src":"693:13:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2672,"name":"string","nodeType":"ElementaryTypeName","src":"693:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"692:15:18"},"scope":2902,"src":"637:698:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2740,"nodeType":"Block","src":"1511:92:18","statements":[{"expression":{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2728,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2726,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2718,"src":"1542:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":2727,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1550:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1542:9:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":2730,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1560:2:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":2731,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1542:20:18","trueExpression":{"hexValue":"2d","id":2729,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1554:3:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[{"arguments":[{"id":2735,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2718,"src":"1588:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"expression":{"id":2733,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4483,"src":"1573:10:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SignedMath_$4483_$","typeString":"type(library SignedMath)"}},"id":2734,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1584:3:18","memberName":"abs","nodeType":"MemberAccess","referencedDeclaration":4482,"src":"1573:14:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_uint256_$","typeString":"function (int256) pure returns (uint256)"}},"id":2736,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1573:21:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2732,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2715,"src":"1564:8:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":2737,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1564:31:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":2724,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1528:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2723,"name":"string","nodeType":"ElementaryTypeName","src":"1528:6:18","typeDescriptions":{}}},"id":2725,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1535:6:18","memberName":"concat","nodeType":"MemberAccess","src":"1528:13:18","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":2738,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1528:68:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2722,"id":2739,"nodeType":"Return","src":"1521:75:18"}]},"documentation":{"id":2716,"nodeType":"StructuredDocumentation","src":"1341:89:18","text":" @dev Converts a `int256` to its ASCII `string` decimal representation."},"id":2741,"implemented":true,"kind":"function","modifiers":[],"name":"toStringSigned","nameLocation":"1444:14:18","nodeType":"FunctionDefinition","parameters":{"id":2719,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2718,"mutability":"mutable","name":"value","nameLocation":"1466:5:18","nodeType":"VariableDeclaration","scope":2741,"src":"1459:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2717,"name":"int256","nodeType":"ElementaryTypeName","src":"1459:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1458:14:18"},"returnParameters":{"id":2722,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2721,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2741,"src":"1496:13:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2720,"name":"string","nodeType":"ElementaryTypeName","src":"1496:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1495:15:18"},"scope":2902,"src":"1435:168:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2760,"nodeType":"Block","src":"1782:100:18","statements":[{"id":2759,"nodeType":"UncheckedBlock","src":"1792:84:18","statements":[{"expression":{"arguments":[{"id":2750,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2744,"src":"1835:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2756,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2753,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2744,"src":"1854:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2751,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4378,"src":"1842:4:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$4378_$","typeString":"type(library Math)"}},"id":2752,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1847:6:18","memberName":"log256","nodeType":"MemberAccess","referencedDeclaration":4320,"src":"1842:11:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2754,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1842:18:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2755,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1863:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1842:22:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2749,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[2761,2844,2864],"referencedDeclaration":2844,"src":"1823:11:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":2757,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1823:42:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2748,"id":2758,"nodeType":"Return","src":"1816:49:18"}]}]},"documentation":{"id":2742,"nodeType":"StructuredDocumentation","src":"1609:94:18","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."},"id":2761,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1717:11:18","nodeType":"FunctionDefinition","parameters":{"id":2745,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2744,"mutability":"mutable","name":"value","nameLocation":"1737:5:18","nodeType":"VariableDeclaration","scope":2761,"src":"1729:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2743,"name":"uint256","nodeType":"ElementaryTypeName","src":"1729:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1728:15:18"},"returnParameters":{"id":2748,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2747,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2761,"src":"1767:13:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2746,"name":"string","nodeType":"ElementaryTypeName","src":"1767:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1766:15:18"},"scope":2902,"src":"1708:174:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2843,"nodeType":"Block","src":"2095:435:18","statements":[{"assignments":[2772],"declarations":[{"constant":false,"id":2772,"mutability":"mutable","name":"localValue","nameLocation":"2113:10:18","nodeType":"VariableDeclaration","scope":2843,"src":"2105:18:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2771,"name":"uint256","nodeType":"ElementaryTypeName","src":"2105:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2774,"initialValue":{"id":2773,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2764,"src":"2126:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2105:26:18"},{"assignments":[2776],"declarations":[{"constant":false,"id":2776,"mutability":"mutable","name":"buffer","nameLocation":"2154:6:18","nodeType":"VariableDeclaration","scope":2843,"src":"2141:19:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2775,"name":"bytes","nodeType":"ElementaryTypeName","src":"2141:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2785,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2783,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2781,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2779,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2173:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2780,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2766,"src":"2177:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2173:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":2782,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2186:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"2173:14:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2778,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2163:9:18","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":2777,"name":"bytes","nodeType":"ElementaryTypeName","src":"2167:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":2784,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2163:25:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"2141:47:18"},{"expression":{"id":2790,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2786,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2776,"src":"2198:6:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2788,"indexExpression":{"hexValue":"30","id":2787,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2205:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2198:9:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":2789,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2210:3:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"2198:15:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2791,"nodeType":"ExpressionStatement","src":"2198:15:18"},{"expression":{"id":2796,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2792,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2776,"src":"2223:6:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2794,"indexExpression":{"hexValue":"31","id":2793,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2230:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2223:9:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"78","id":2795,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2235:3:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83","typeString":"literal_string \"x\""},"value":"x"},"src":"2223:15:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2797,"nodeType":"ExpressionStatement","src":"2223:15:18"},{"body":{"id":2826,"nodeType":"Block","src":"2293:95:18","statements":[{"expression":{"id":2820,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2812,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2776,"src":"2307:6:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2814,"indexExpression":{"id":2813,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2799,"src":"2314:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2307:9:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":2815,"name":"HEX_DIGITS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2657,"src":"2319:10:18","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"id":2819,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2818,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2816,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2772,"src":"2330:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":2817,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2343:3:18","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"2330:16:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2319:28:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"2307:40:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2821,"nodeType":"ExpressionStatement","src":"2307:40:18"},{"expression":{"id":2824,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2822,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2772,"src":"2361:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":2823,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2376:1:18","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"2361:16:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2825,"nodeType":"ExpressionStatement","src":"2361:16:18"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2808,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2806,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2799,"src":"2281:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":2807,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2285:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2281:5:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2827,"initializationExpression":{"assignments":[2799],"declarations":[{"constant":false,"id":2799,"mutability":"mutable","name":"i","nameLocation":"2261:1:18","nodeType":"VariableDeclaration","scope":2827,"src":"2253:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2798,"name":"uint256","nodeType":"ElementaryTypeName","src":"2253:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2805,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2804,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2802,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2800,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2265:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2801,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2766,"src":"2269:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2265:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2803,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2278:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2265:14:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2253:26:18"},"loopExpression":{"expression":{"id":2810,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"2288:3:18","subExpression":{"id":2809,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2799,"src":"2290:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2811,"nodeType":"ExpressionStatement","src":"2288:3:18"},"nodeType":"ForStatement","src":"2248:140:18"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2830,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2828,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2772,"src":"2401:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":2829,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2415:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2401:15:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2837,"nodeType":"IfStatement","src":"2397:96:18","trueBody":{"id":2836,"nodeType":"Block","src":"2418:75:18","statements":[{"errorCall":{"arguments":[{"id":2832,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2764,"src":"2468:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2833,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2766,"src":"2475:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2831,"name":"StringsInsufficientHexLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2667,"src":"2439:28:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":2834,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2439:43:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2835,"nodeType":"RevertStatement","src":"2432:50:18"}]}},{"expression":{"arguments":[{"id":2840,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2776,"src":"2516:6:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2839,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2509:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2838,"name":"string","nodeType":"ElementaryTypeName","src":"2509:6:18","typeDescriptions":{}}},"id":2841,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2509:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2770,"id":2842,"nodeType":"Return","src":"2502:21:18"}]},"documentation":{"id":2762,"nodeType":"StructuredDocumentation","src":"1888:112:18","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."},"id":2844,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2014:11:18","nodeType":"FunctionDefinition","parameters":{"id":2767,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2764,"mutability":"mutable","name":"value","nameLocation":"2034:5:18","nodeType":"VariableDeclaration","scope":2844,"src":"2026:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2763,"name":"uint256","nodeType":"ElementaryTypeName","src":"2026:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2766,"mutability":"mutable","name":"length","nameLocation":"2049:6:18","nodeType":"VariableDeclaration","scope":2844,"src":"2041:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2765,"name":"uint256","nodeType":"ElementaryTypeName","src":"2041:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2025:31:18"},"returnParameters":{"id":2770,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2769,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2844,"src":"2080:13:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2768,"name":"string","nodeType":"ElementaryTypeName","src":"2080:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2079:15:18"},"scope":2902,"src":"2005:525:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2863,"nodeType":"Block","src":"2762:75:18","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":2857,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2847,"src":"2807:4:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2856,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2799:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":2855,"name":"uint160","nodeType":"ElementaryTypeName","src":"2799:7:18","typeDescriptions":{}}},"id":2858,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2799:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":2854,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2791:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2853,"name":"uint256","nodeType":"ElementaryTypeName","src":"2791:7:18","typeDescriptions":{}}},"id":2859,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2791:22:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2860,"name":"ADDRESS_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2660,"src":"2815:14:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":2852,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[2761,2844,2864],"referencedDeclaration":2844,"src":"2779:11:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":2861,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2779:51:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2851,"id":2862,"nodeType":"Return","src":"2772:58:18"}]},"documentation":{"id":2845,"nodeType":"StructuredDocumentation","src":"2536:148:18","text":" @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n representation."},"id":2864,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2698:11:18","nodeType":"FunctionDefinition","parameters":{"id":2848,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2847,"mutability":"mutable","name":"addr","nameLocation":"2718:4:18","nodeType":"VariableDeclaration","scope":2864,"src":"2710:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2846,"name":"address","nodeType":"ElementaryTypeName","src":"2710:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2709:14:18"},"returnParameters":{"id":2851,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2850,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2864,"src":"2747:13:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2849,"name":"string","nodeType":"ElementaryTypeName","src":"2747:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2746:15:18"},"scope":2902,"src":"2689:148:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2900,"nodeType":"Block","src":"2992:104:18","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2898,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2884,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2876,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2867,"src":"3015:1:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2875,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3009:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2874,"name":"bytes","nodeType":"ElementaryTypeName","src":"3009:5:18","typeDescriptions":{}}},"id":2877,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3009:8:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2878,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3018:6:18","memberName":"length","nodeType":"MemberAccess","src":"3009:15:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":2881,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2869,"src":"3034:1:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2880,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3028:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2879,"name":"bytes","nodeType":"ElementaryTypeName","src":"3028:5:18","typeDescriptions":{}}},"id":2882,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3028:8:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2883,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3037:6:18","memberName":"length","nodeType":"MemberAccess","src":"3028:15:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3009:34:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2897,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":2888,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2867,"src":"3063:1:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2887,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3057:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2886,"name":"bytes","nodeType":"ElementaryTypeName","src":"3057:5:18","typeDescriptions":{}}},"id":2889,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3057:8:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2885,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3047:9:18","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2890,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3047:19:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":2894,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2869,"src":"3086:1:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2893,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3080:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2892,"name":"bytes","nodeType":"ElementaryTypeName","src":"3080:5:18","typeDescriptions":{}}},"id":2895,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3080:8:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2891,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3070:9:18","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2896,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3070:19:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3047:42:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3009:80:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2873,"id":2899,"nodeType":"Return","src":"3002:87:18"}]},"documentation":{"id":2865,"nodeType":"StructuredDocumentation","src":"2843:66:18","text":" @dev Returns true if the two strings are equal."},"id":2901,"implemented":true,"kind":"function","modifiers":[],"name":"equal","nameLocation":"2923:5:18","nodeType":"FunctionDefinition","parameters":{"id":2870,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2867,"mutability":"mutable","name":"a","nameLocation":"2943:1:18","nodeType":"VariableDeclaration","scope":2901,"src":"2929:15:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2866,"name":"string","nodeType":"ElementaryTypeName","src":"2929:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2869,"mutability":"mutable","name":"b","nameLocation":"2960:1:18","nodeType":"VariableDeclaration","scope":2901,"src":"2946:15:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2868,"name":"string","nodeType":"ElementaryTypeName","src":"2946:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2928:34:18"},"returnParameters":{"id":2873,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2872,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2901,"src":"2986:4:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2871,"name":"bool","nodeType":"ElementaryTypeName","src":"2986:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2985:6:18"},"scope":2902,"src":"2914:182:18","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2903,"src":"251:2847:18","usedErrors":[2667],"usedEvents":[]}],"src":"101:2998:18"},"id":18},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","exportedSymbols":{"ECDSA":[3250]},"id":3251,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2904,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"112:24:19"},{"abstract":false,"baseContracts":[],"canonicalName":"ECDSA","contractDependencies":[],"contractKind":"library","documentation":{"id":2905,"nodeType":"StructuredDocumentation","src":"138:205:19","text":" @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n These functions can be used to verify that a message was signed by the holder\n of the private keys of a given address."},"fullyImplemented":true,"id":3250,"linearizedBaseContracts":[3250],"name":"ECDSA","nameLocation":"352:5:19","nodeType":"ContractDefinition","nodes":[{"canonicalName":"ECDSA.RecoverError","id":2910,"members":[{"id":2906,"name":"NoError","nameLocation":"392:7:19","nodeType":"EnumValue","src":"392:7:19"},{"id":2907,"name":"InvalidSignature","nameLocation":"409:16:19","nodeType":"EnumValue","src":"409:16:19"},{"id":2908,"name":"InvalidSignatureLength","nameLocation":"435:22:19","nodeType":"EnumValue","src":"435:22:19"},{"id":2909,"name":"InvalidSignatureS","nameLocation":"467:17:19","nodeType":"EnumValue","src":"467:17:19"}],"name":"RecoverError","nameLocation":"369:12:19","nodeType":"EnumDefinition","src":"364:126:19"},{"documentation":{"id":2911,"nodeType":"StructuredDocumentation","src":"496:63:19","text":" @dev The signature derives the `address(0)`."},"errorSelector":"f645eedf","id":2913,"name":"ECDSAInvalidSignature","nameLocation":"570:21:19","nodeType":"ErrorDefinition","parameters":{"id":2912,"nodeType":"ParameterList","parameters":[],"src":"591:2:19"},"src":"564:30:19"},{"documentation":{"id":2914,"nodeType":"StructuredDocumentation","src":"600:60:19","text":" @dev The signature has an invalid length."},"errorSelector":"fce698f7","id":2918,"name":"ECDSAInvalidSignatureLength","nameLocation":"671:27:19","nodeType":"ErrorDefinition","parameters":{"id":2917,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2916,"mutability":"mutable","name":"length","nameLocation":"707:6:19","nodeType":"VariableDeclaration","scope":2918,"src":"699:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2915,"name":"uint256","nodeType":"ElementaryTypeName","src":"699:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"698:16:19"},"src":"665:50:19"},{"documentation":{"id":2919,"nodeType":"StructuredDocumentation","src":"721:85:19","text":" @dev The signature has an S value that is in the upper half order."},"errorSelector":"d78bce0c","id":2923,"name":"ECDSAInvalidSignatureS","nameLocation":"817:22:19","nodeType":"ErrorDefinition","parameters":{"id":2922,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2921,"mutability":"mutable","name":"s","nameLocation":"848:1:19","nodeType":"VariableDeclaration","scope":2923,"src":"840:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2920,"name":"bytes32","nodeType":"ElementaryTypeName","src":"840:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"839:11:19"},"src":"811:40:19"},{"body":{"id":2975,"nodeType":"Block","src":"2242:653:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2941,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2938,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2928,"src":"2256:9:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2939,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2266:6:19","memberName":"length","nodeType":"MemberAccess","src":"2256:16:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"3635","id":2940,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2276:2:19","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"65"},"src":"2256:22:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2973,"nodeType":"Block","src":"2781:108:19","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":2962,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2811:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2961,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2803:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2960,"name":"address","nodeType":"ElementaryTypeName","src":"2803:7:19","typeDescriptions":{}}},"id":2963,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2803:10:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2964,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2910,"src":"2815:12:19","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2910_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2965,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2828:22:19","memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":2908,"src":"2815:35:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2910","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"expression":{"id":2968,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2928,"src":"2860:9:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2969,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2870:6:19","memberName":"length","nodeType":"MemberAccess","src":"2860:16:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2967,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2852:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2966,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2852:7:19","typeDescriptions":{}}},"id":2970,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2852:25:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":2971,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2802:76:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2910_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":2937,"id":2972,"nodeType":"Return","src":"2795:83:19"}]},"id":2974,"nodeType":"IfStatement","src":"2252:637:19","trueBody":{"id":2959,"nodeType":"Block","src":"2280:495:19","statements":[{"assignments":[2943],"declarations":[{"constant":false,"id":2943,"mutability":"mutable","name":"r","nameLocation":"2302:1:19","nodeType":"VariableDeclaration","scope":2959,"src":"2294:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2942,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2294:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2944,"nodeType":"VariableDeclarationStatement","src":"2294:9:19"},{"assignments":[2946],"declarations":[{"constant":false,"id":2946,"mutability":"mutable","name":"s","nameLocation":"2325:1:19","nodeType":"VariableDeclaration","scope":2959,"src":"2317:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2945,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2317:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2947,"nodeType":"VariableDeclarationStatement","src":"2317:9:19"},{"assignments":[2949],"declarations":[{"constant":false,"id":2949,"mutability":"mutable","name":"v","nameLocation":"2346:1:19","nodeType":"VariableDeclaration","scope":2959,"src":"2340:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2948,"name":"uint8","nodeType":"ElementaryTypeName","src":"2340:5:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":2950,"nodeType":"VariableDeclarationStatement","src":"2340:7:19"},{"AST":{"nodeType":"YulBlock","src":"2548:171:19","statements":[{"nodeType":"YulAssignment","src":"2566:32:19","value":{"arguments":[{"arguments":[{"name":"signature","nodeType":"YulIdentifier","src":"2581:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"2592:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2577:3:19"},"nodeType":"YulFunctionCall","src":"2577:20:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2571:5:19"},"nodeType":"YulFunctionCall","src":"2571:27:19"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"2566:1:19"}]},{"nodeType":"YulAssignment","src":"2615:32:19","value":{"arguments":[{"arguments":[{"name":"signature","nodeType":"YulIdentifier","src":"2630:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"2641:4:19","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2626:3:19"},"nodeType":"YulFunctionCall","src":"2626:20:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2620:5:19"},"nodeType":"YulFunctionCall","src":"2620:27:19"},"variableNames":[{"name":"s","nodeType":"YulIdentifier","src":"2615:1:19"}]},{"nodeType":"YulAssignment","src":"2664:41:19","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2674:1:19","type":"","value":"0"},{"arguments":[{"arguments":[{"name":"signature","nodeType":"YulIdentifier","src":"2687:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"2698:4:19","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2683:3:19"},"nodeType":"YulFunctionCall","src":"2683:20:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2677:5:19"},"nodeType":"YulFunctionCall","src":"2677:27:19"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"2669:4:19"},"nodeType":"YulFunctionCall","src":"2669:36:19"},"variableNames":[{"name":"v","nodeType":"YulIdentifier","src":"2664:1:19"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2943,"isOffset":false,"isSlot":false,"src":"2566:1:19","valueSize":1},{"declaration":2946,"isOffset":false,"isSlot":false,"src":"2615:1:19","valueSize":1},{"declaration":2928,"isOffset":false,"isSlot":false,"src":"2581:9:19","valueSize":1},{"declaration":2928,"isOffset":false,"isSlot":false,"src":"2630:9:19","valueSize":1},{"declaration":2928,"isOffset":false,"isSlot":false,"src":"2687:9:19","valueSize":1},{"declaration":2949,"isOffset":false,"isSlot":false,"src":"2664:1:19","valueSize":1}],"id":2951,"nodeType":"InlineAssembly","src":"2539:180:19"},{"expression":{"arguments":[{"id":2953,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2926,"src":"2750:4:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2954,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2949,"src":"2756:1:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":2955,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2943,"src":"2759:1:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2956,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2946,"src":"2762:1:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2952,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[2976,3056,3164],"referencedDeclaration":3164,"src":"2739:10:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$2910_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":2957,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2739:25:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2910_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":2937,"id":2958,"nodeType":"Return","src":"2732:32:19"}]}}]},"documentation":{"id":2924,"nodeType":"StructuredDocumentation","src":"857:1267:19","text":" @dev Returns the address that signed a hashed message (`hash`) with `signature` or an error. This will not\n return address(0) without also returning an error description. Errors are documented using an enum (error type)\n and a bytes32 providing additional information about the error.\n If no error is returned, then the address can be used for verification purposes.\n The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n Documentation for signature generation:\n - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]"},"id":2976,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"2138:10:19","nodeType":"FunctionDefinition","parameters":{"id":2929,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2926,"mutability":"mutable","name":"hash","nameLocation":"2157:4:19","nodeType":"VariableDeclaration","scope":2976,"src":"2149:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2925,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2149:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2928,"mutability":"mutable","name":"signature","nameLocation":"2176:9:19","nodeType":"VariableDeclaration","scope":2976,"src":"2163:22:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2927,"name":"bytes","nodeType":"ElementaryTypeName","src":"2163:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2148:38:19"},"returnParameters":{"id":2937,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2931,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2976,"src":"2210:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2930,"name":"address","nodeType":"ElementaryTypeName","src":"2210:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2934,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2976,"src":"2219:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2910","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":2933,"nodeType":"UserDefinedTypeName","pathNode":{"id":2932,"name":"RecoverError","nameLocations":["2219:12:19"],"nodeType":"IdentifierPath","referencedDeclaration":2910,"src":"2219:12:19"},"referencedDeclaration":2910,"src":"2219:12:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2910","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":2936,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2976,"src":"2233:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2935,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2233:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2209:32:19"},"scope":3250,"src":"2129:766:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3005,"nodeType":"Block","src":"3789:168:19","statements":[{"assignments":[2987,2990,2992],"declarations":[{"constant":false,"id":2987,"mutability":"mutable","name":"recovered","nameLocation":"3808:9:19","nodeType":"VariableDeclaration","scope":3005,"src":"3800:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2986,"name":"address","nodeType":"ElementaryTypeName","src":"3800:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2990,"mutability":"mutable","name":"error","nameLocation":"3832:5:19","nodeType":"VariableDeclaration","scope":3005,"src":"3819:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2910","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":2989,"nodeType":"UserDefinedTypeName","pathNode":{"id":2988,"name":"RecoverError","nameLocations":["3819:12:19"],"nodeType":"IdentifierPath","referencedDeclaration":2910,"src":"3819:12:19"},"referencedDeclaration":2910,"src":"3819:12:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2910","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":2992,"mutability":"mutable","name":"errorArg","nameLocation":"3847:8:19","nodeType":"VariableDeclaration","scope":3005,"src":"3839:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2991,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3839:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2997,"initialValue":{"arguments":[{"id":2994,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2979,"src":"3870:4:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2995,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2981,"src":"3876:9:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2993,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[2976,3056,3164],"referencedDeclaration":2976,"src":"3859:10:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$_t_enum$_RecoverError_$2910_$_t_bytes32_$","typeString":"function (bytes32,bytes memory) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":2996,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3859:27:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2910_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"3799:87:19"},{"expression":{"arguments":[{"id":2999,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2990,"src":"3908:5:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2910","typeString":"enum ECDSA.RecoverError"}},{"id":3000,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2992,"src":"3915:8:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$2910","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2998,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3249,"src":"3896:11:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$2910_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":3001,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3896:28:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3002,"nodeType":"ExpressionStatement","src":"3896:28:19"},{"expression":{"id":3003,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2987,"src":"3941:9:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2985,"id":3004,"nodeType":"Return","src":"3934:16:19"}]},"documentation":{"id":2977,"nodeType":"StructuredDocumentation","src":"2901:796:19","text":" @dev Returns the address that signed a hashed message (`hash`) with\n `signature`. This address can then be used for verification purposes.\n The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it."},"id":3006,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"3711:7:19","nodeType":"FunctionDefinition","parameters":{"id":2982,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2979,"mutability":"mutable","name":"hash","nameLocation":"3727:4:19","nodeType":"VariableDeclaration","scope":3006,"src":"3719:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2978,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3719:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2981,"mutability":"mutable","name":"signature","nameLocation":"3746:9:19","nodeType":"VariableDeclaration","scope":3006,"src":"3733:22:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2980,"name":"bytes","nodeType":"ElementaryTypeName","src":"3733:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3718:38:19"},"returnParameters":{"id":2985,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2984,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3006,"src":"3780:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2983,"name":"address","nodeType":"ElementaryTypeName","src":"3780:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3779:9:19"},"scope":3250,"src":"3702:255:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3055,"nodeType":"Block","src":"4285:342:19","statements":[{"id":3054,"nodeType":"UncheckedBlock","src":"4295:326:19","statements":[{"assignments":[3024],"declarations":[{"constant":false,"id":3024,"mutability":"mutable","name":"s","nameLocation":"4327:1:19","nodeType":"VariableDeclaration","scope":3054,"src":"4319:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3023,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4319:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3031,"initialValue":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":3030,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3025,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3013,"src":"4331:2:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"arguments":[{"hexValue":"307837666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666","id":3028,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4344:66:19","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"},"value":"0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"}],"id":3027,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4336:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3026,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4336:7:19","typeDescriptions":{}}},"id":3029,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4336:75:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4331:80:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"4319:92:19"},{"assignments":[3033],"declarations":[{"constant":false,"id":3033,"mutability":"mutable","name":"v","nameLocation":"4528:1:19","nodeType":"VariableDeclaration","scope":3054,"src":"4522:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3032,"name":"uint8","nodeType":"ElementaryTypeName","src":"4522:5:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":3046,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3044,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3041,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3038,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3013,"src":"4547:2:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3037,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4539:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3036,"name":"uint256","nodeType":"ElementaryTypeName","src":"4539:7:19","typeDescriptions":{}}},"id":3039,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4539:11:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":3040,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4554:3:19","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"4539:18:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3042,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4538:20:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3237","id":3043,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4561:2:19","typeDescriptions":{"typeIdentifier":"t_rational_27_by_1","typeString":"int_const 27"},"value":"27"},"src":"4538:25:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3035,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4532:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":3034,"name":"uint8","nodeType":"ElementaryTypeName","src":"4532:5:19","typeDescriptions":{}}},"id":3045,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4532:32:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"4522:42:19"},{"expression":{"arguments":[{"id":3048,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3009,"src":"4596:4:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3049,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3033,"src":"4602:1:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":3050,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3011,"src":"4605:1:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3051,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3024,"src":"4608:1:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3047,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[2976,3056,3164],"referencedDeclaration":3164,"src":"4585:10:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$2910_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":3052,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4585:25:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2910_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":3022,"id":3053,"nodeType":"Return","src":"4578:32:19"}]}]},"documentation":{"id":3007,"nodeType":"StructuredDocumentation","src":"3963:205:19","text":" @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n See https://eips.ethereum.org/EIPS/eip-2098[EIP-2098 short signatures]"},"id":3056,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"4182:10:19","nodeType":"FunctionDefinition","parameters":{"id":3014,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3009,"mutability":"mutable","name":"hash","nameLocation":"4201:4:19","nodeType":"VariableDeclaration","scope":3056,"src":"4193:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3008,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4193:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3011,"mutability":"mutable","name":"r","nameLocation":"4215:1:19","nodeType":"VariableDeclaration","scope":3056,"src":"4207:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3010,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4207:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3013,"mutability":"mutable","name":"vs","nameLocation":"4226:2:19","nodeType":"VariableDeclaration","scope":3056,"src":"4218:10:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3012,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4218:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4192:37:19"},"returnParameters":{"id":3022,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3016,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3056,"src":"4253:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3015,"name":"address","nodeType":"ElementaryTypeName","src":"4253:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3019,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3056,"src":"4262:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2910","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3018,"nodeType":"UserDefinedTypeName","pathNode":{"id":3017,"name":"RecoverError","nameLocations":["4262:12:19"],"nodeType":"IdentifierPath","referencedDeclaration":2910,"src":"4262:12:19"},"referencedDeclaration":2910,"src":"4262:12:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2910","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":3021,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3056,"src":"4276:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3020,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4276:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4252:32:19"},"scope":3250,"src":"4173:454:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3088,"nodeType":"Block","src":"4840:164:19","statements":[{"assignments":[3069,3072,3074],"declarations":[{"constant":false,"id":3069,"mutability":"mutable","name":"recovered","nameLocation":"4859:9:19","nodeType":"VariableDeclaration","scope":3088,"src":"4851:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3068,"name":"address","nodeType":"ElementaryTypeName","src":"4851:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3072,"mutability":"mutable","name":"error","nameLocation":"4883:5:19","nodeType":"VariableDeclaration","scope":3088,"src":"4870:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2910","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3071,"nodeType":"UserDefinedTypeName","pathNode":{"id":3070,"name":"RecoverError","nameLocations":["4870:12:19"],"nodeType":"IdentifierPath","referencedDeclaration":2910,"src":"4870:12:19"},"referencedDeclaration":2910,"src":"4870:12:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2910","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":3074,"mutability":"mutable","name":"errorArg","nameLocation":"4898:8:19","nodeType":"VariableDeclaration","scope":3088,"src":"4890:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3073,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4890:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3080,"initialValue":{"arguments":[{"id":3076,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3059,"src":"4921:4:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3077,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3061,"src":"4927:1:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3078,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3063,"src":"4930:2:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3075,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[2976,3056,3164],"referencedDeclaration":3056,"src":"4910:10:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$2910_$_t_bytes32_$","typeString":"function (bytes32,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":3079,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4910:23:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2910_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"4850:83:19"},{"expression":{"arguments":[{"id":3082,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3072,"src":"4955:5:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2910","typeString":"enum ECDSA.RecoverError"}},{"id":3083,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3074,"src":"4962:8:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$2910","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3081,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3249,"src":"4943:11:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$2910_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":3084,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4943:28:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3085,"nodeType":"ExpressionStatement","src":"4943:28:19"},{"expression":{"id":3086,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3069,"src":"4988:9:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3067,"id":3087,"nodeType":"Return","src":"4981:16:19"}]},"documentation":{"id":3057,"nodeType":"StructuredDocumentation","src":"4633:116:19","text":" @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately."},"id":3089,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"4763:7:19","nodeType":"FunctionDefinition","parameters":{"id":3064,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3059,"mutability":"mutable","name":"hash","nameLocation":"4779:4:19","nodeType":"VariableDeclaration","scope":3089,"src":"4771:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3058,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4771:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3061,"mutability":"mutable","name":"r","nameLocation":"4793:1:19","nodeType":"VariableDeclaration","scope":3089,"src":"4785:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3060,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4785:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3063,"mutability":"mutable","name":"vs","nameLocation":"4804:2:19","nodeType":"VariableDeclaration","scope":3089,"src":"4796:10:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3062,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4796:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4770:37:19"},"returnParameters":{"id":3067,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3066,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3089,"src":"4831:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3065,"name":"address","nodeType":"ElementaryTypeName","src":"4831:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4830:9:19"},"scope":3250,"src":"4754:250:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3163,"nodeType":"Block","src":"5298:1372:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3113,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3110,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3098,"src":"6194:1:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3109,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6186:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3108,"name":"uint256","nodeType":"ElementaryTypeName","src":"6186:7:19","typeDescriptions":{}}},"id":3111,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6186:10:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307837464646464646464646464646464646464646464646464646464646464646463544353736453733353741343530314444464539324634363638314232304130","id":3112,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6199:66:19","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926418782139537452191302581570759080747168_by_1","typeString":"int_const 5789...(69 digits omitted)...7168"},"value":"0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0"},"src":"6186:79:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3124,"nodeType":"IfStatement","src":"6182:164:19","trueBody":{"id":3123,"nodeType":"Block","src":"6267:79:19","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":3116,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6297:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3115,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6289:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3114,"name":"address","nodeType":"ElementaryTypeName","src":"6289:7:19","typeDescriptions":{}}},"id":3117,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6289:10:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3118,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2910,"src":"6301:12:19","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2910_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3119,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6314:17:19","memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":2909,"src":"6301:30:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2910","typeString":"enum ECDSA.RecoverError"}},{"id":3120,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3098,"src":"6333:1:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":3121,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6288:47:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2910_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":3107,"id":3122,"nodeType":"Return","src":"6281:54:19"}]}},{"assignments":[3126],"declarations":[{"constant":false,"id":3126,"mutability":"mutable","name":"signer","nameLocation":"6448:6:19","nodeType":"VariableDeclaration","scope":3163,"src":"6440:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3125,"name":"address","nodeType":"ElementaryTypeName","src":"6440:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3133,"initialValue":{"arguments":[{"id":3128,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3092,"src":"6467:4:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3129,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3094,"src":"6473:1:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":3130,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3096,"src":"6476:1:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3131,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3098,"src":"6479:1:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3127,"name":"ecrecover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-6,"src":"6457:9:19","typeDescriptions":{"typeIdentifier":"t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":3132,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6457:24:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6440:41:19"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3139,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3134,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3126,"src":"6495:6:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":3137,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6513:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3136,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6505:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3135,"name":"address","nodeType":"ElementaryTypeName","src":"6505:7:19","typeDescriptions":{}}},"id":3138,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6505:10:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6495:20:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3153,"nodeType":"IfStatement","src":"6491:113:19","trueBody":{"id":3152,"nodeType":"Block","src":"6517:87:19","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":3142,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6547:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3141,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6539:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3140,"name":"address","nodeType":"ElementaryTypeName","src":"6539:7:19","typeDescriptions":{}}},"id":3143,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6539:10:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3144,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2910,"src":"6551:12:19","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2910_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3145,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6564:16:19","memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":2907,"src":"6551:29:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2910","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"hexValue":"30","id":3148,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6590:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3147,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6582:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3146,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6582:7:19","typeDescriptions":{}}},"id":3149,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6582:10:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":3150,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6538:55:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2910_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":3107,"id":3151,"nodeType":"Return","src":"6531:62:19"}]}},{"expression":{"components":[{"id":3154,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3126,"src":"6622:6:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3155,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2910,"src":"6630:12:19","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2910_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3156,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6643:7:19","memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":2906,"src":"6630:20:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2910","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"hexValue":"30","id":3159,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6660:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3158,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6652:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3157,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6652:7:19","typeDescriptions":{}}},"id":3160,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6652:10:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":3161,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6621:42:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2910_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":3107,"id":3162,"nodeType":"Return","src":"6614:49:19"}]},"documentation":{"id":3090,"nodeType":"StructuredDocumentation","src":"5010:125:19","text":" @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n `r` and `s` signature fields separately."},"id":3164,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"5149:10:19","nodeType":"FunctionDefinition","parameters":{"id":3099,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3092,"mutability":"mutable","name":"hash","nameLocation":"5177:4:19","nodeType":"VariableDeclaration","scope":3164,"src":"5169:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3091,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5169:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3094,"mutability":"mutable","name":"v","nameLocation":"5197:1:19","nodeType":"VariableDeclaration","scope":3164,"src":"5191:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3093,"name":"uint8","nodeType":"ElementaryTypeName","src":"5191:5:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":3096,"mutability":"mutable","name":"r","nameLocation":"5216:1:19","nodeType":"VariableDeclaration","scope":3164,"src":"5208:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3095,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5208:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3098,"mutability":"mutable","name":"s","nameLocation":"5235:1:19","nodeType":"VariableDeclaration","scope":3164,"src":"5227:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3097,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5227:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5159:83:19"},"returnParameters":{"id":3107,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3101,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3164,"src":"5266:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3100,"name":"address","nodeType":"ElementaryTypeName","src":"5266:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3104,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3164,"src":"5275:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2910","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3103,"nodeType":"UserDefinedTypeName","pathNode":{"id":3102,"name":"RecoverError","nameLocations":["5275:12:19"],"nodeType":"IdentifierPath","referencedDeclaration":2910,"src":"5275:12:19"},"referencedDeclaration":2910,"src":"5275:12:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2910","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":3106,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3164,"src":"5289:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3105,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5289:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5265:32:19"},"scope":3250,"src":"5140:1530:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3199,"nodeType":"Block","src":"6897:166:19","statements":[{"assignments":[3179,3182,3184],"declarations":[{"constant":false,"id":3179,"mutability":"mutable","name":"recovered","nameLocation":"6916:9:19","nodeType":"VariableDeclaration","scope":3199,"src":"6908:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3178,"name":"address","nodeType":"ElementaryTypeName","src":"6908:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3182,"mutability":"mutable","name":"error","nameLocation":"6940:5:19","nodeType":"VariableDeclaration","scope":3199,"src":"6927:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2910","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3181,"nodeType":"UserDefinedTypeName","pathNode":{"id":3180,"name":"RecoverError","nameLocations":["6927:12:19"],"nodeType":"IdentifierPath","referencedDeclaration":2910,"src":"6927:12:19"},"referencedDeclaration":2910,"src":"6927:12:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2910","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":3184,"mutability":"mutable","name":"errorArg","nameLocation":"6955:8:19","nodeType":"VariableDeclaration","scope":3199,"src":"6947:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3183,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6947:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3191,"initialValue":{"arguments":[{"id":3186,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3167,"src":"6978:4:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3187,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3169,"src":"6984:1:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":3188,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3171,"src":"6987:1:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3189,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3173,"src":"6990:1:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3185,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[2976,3056,3164],"referencedDeclaration":3164,"src":"6967:10:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$2910_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":3190,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6967:25:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2910_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"6907:85:19"},{"expression":{"arguments":[{"id":3193,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3182,"src":"7014:5:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2910","typeString":"enum ECDSA.RecoverError"}},{"id":3194,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3184,"src":"7021:8:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$2910","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3192,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3249,"src":"7002:11:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$2910_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":3195,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7002:28:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3196,"nodeType":"ExpressionStatement","src":"7002:28:19"},{"expression":{"id":3197,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3179,"src":"7047:9:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3177,"id":3198,"nodeType":"Return","src":"7040:16:19"}]},"documentation":{"id":3165,"nodeType":"StructuredDocumentation","src":"6676:122:19","text":" @dev Overload of {ECDSA-recover} that receives the `v`,\n `r` and `s` signature fields separately."},"id":3200,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"6812:7:19","nodeType":"FunctionDefinition","parameters":{"id":3174,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3167,"mutability":"mutable","name":"hash","nameLocation":"6828:4:19","nodeType":"VariableDeclaration","scope":3200,"src":"6820:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3166,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6820:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3169,"mutability":"mutable","name":"v","nameLocation":"6840:1:19","nodeType":"VariableDeclaration","scope":3200,"src":"6834:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3168,"name":"uint8","nodeType":"ElementaryTypeName","src":"6834:5:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":3171,"mutability":"mutable","name":"r","nameLocation":"6851:1:19","nodeType":"VariableDeclaration","scope":3200,"src":"6843:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3170,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6843:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3173,"mutability":"mutable","name":"s","nameLocation":"6862:1:19","nodeType":"VariableDeclaration","scope":3200,"src":"6854:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3172,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6854:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6819:45:19"},"returnParameters":{"id":3177,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3176,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3200,"src":"6888:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3175,"name":"address","nodeType":"ElementaryTypeName","src":"6888:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6887:9:19"},"scope":3250,"src":"6803:260:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3248,"nodeType":"Block","src":"7268:460:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$2910","typeString":"enum ECDSA.RecoverError"},"id":3212,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3209,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3204,"src":"7282:5:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2910","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3210,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2910,"src":"7291:12:19","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2910_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3211,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7304:7:19","memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":2906,"src":"7291:20:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2910","typeString":"enum ECDSA.RecoverError"}},"src":"7282:29:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$2910","typeString":"enum ECDSA.RecoverError"},"id":3218,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3215,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3204,"src":"7378:5:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2910","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3216,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2910,"src":"7387:12:19","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2910_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3217,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7400:16:19","memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":2907,"src":"7387:29:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2910","typeString":"enum ECDSA.RecoverError"}},"src":"7378:38:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$2910","typeString":"enum ECDSA.RecoverError"},"id":3226,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3223,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3204,"src":"7483:5:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2910","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3224,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2910,"src":"7492:12:19","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2910_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3225,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7505:22:19","memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":2908,"src":"7492:35:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2910","typeString":"enum ECDSA.RecoverError"}},"src":"7483:44:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$2910","typeString":"enum ECDSA.RecoverError"},"id":3238,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3235,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3204,"src":"7617:5:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2910","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3236,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2910,"src":"7626:12:19","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2910_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3237,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7639:17:19","memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":2909,"src":"7626:30:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2910","typeString":"enum ECDSA.RecoverError"}},"src":"7617:39:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3244,"nodeType":"IfStatement","src":"7613:109:19","trueBody":{"id":3243,"nodeType":"Block","src":"7658:64:19","statements":[{"errorCall":{"arguments":[{"id":3240,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3206,"src":"7702:8:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3239,"name":"ECDSAInvalidSignatureS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2923,"src":"7679:22:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_bytes32_$returns$__$","typeString":"function (bytes32) pure"}},"id":3241,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7679:32:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3242,"nodeType":"RevertStatement","src":"7672:39:19"}]}},"id":3245,"nodeType":"IfStatement","src":"7479:243:19","trueBody":{"id":3234,"nodeType":"Block","src":"7529:78:19","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":3230,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3206,"src":"7586:8:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3229,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7578:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3228,"name":"uint256","nodeType":"ElementaryTypeName","src":"7578:7:19","typeDescriptions":{}}},"id":3231,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7578:17:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3227,"name":"ECDSAInvalidSignatureLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2918,"src":"7550:27:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":3232,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7550:46:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3233,"nodeType":"RevertStatement","src":"7543:53:19"}]}},"id":3246,"nodeType":"IfStatement","src":"7374:348:19","trueBody":{"id":3222,"nodeType":"Block","src":"7418:55:19","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3219,"name":"ECDSAInvalidSignature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2913,"src":"7439:21:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3220,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7439:23:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3221,"nodeType":"RevertStatement","src":"7432:30:19"}]}},"id":3247,"nodeType":"IfStatement","src":"7278:444:19","trueBody":{"id":3214,"nodeType":"Block","src":"7313:55:19","statements":[{"functionReturnParameters":3208,"id":3213,"nodeType":"Return","src":"7327:7:19"}]}}]},"documentation":{"id":3201,"nodeType":"StructuredDocumentation","src":"7069:122:19","text":" @dev Optionally reverts with the corresponding custom error according to the `error` argument provided."},"id":3249,"implemented":true,"kind":"function","modifiers":[],"name":"_throwError","nameLocation":"7205:11:19","nodeType":"FunctionDefinition","parameters":{"id":3207,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3204,"mutability":"mutable","name":"error","nameLocation":"7230:5:19","nodeType":"VariableDeclaration","scope":3249,"src":"7217:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2910","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3203,"nodeType":"UserDefinedTypeName","pathNode":{"id":3202,"name":"RecoverError","nameLocations":["7217:12:19"],"nodeType":"IdentifierPath","referencedDeclaration":2910,"src":"7217:12:19"},"referencedDeclaration":2910,"src":"7217:12:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2910","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":3206,"mutability":"mutable","name":"errorArg","nameLocation":"7245:8:19","nodeType":"VariableDeclaration","scope":3249,"src":"7237:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3205,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7237:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7216:38:19"},"returnParameters":{"id":3208,"nodeType":"ParameterList","parameters":[],"src":"7268:0:19"},"scope":3250,"src":"7196:532:19","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":3251,"src":"344:7386:19","usedErrors":[2913,2918,2923],"usedEvents":[]}],"src":"112:7619:19"},"id":19},"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol","exportedSymbols":{"MessageHashUtils":[3324],"Strings":[2902]},"id":3325,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3252,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"123:24:20"},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"../Strings.sol","id":3254,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3325,"sourceUnit":2903,"src":"149:39:20","symbolAliases":[{"foreign":{"id":3253,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2902,"src":"157:7:20","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"MessageHashUtils","contractDependencies":[],"contractKind":"library","documentation":{"id":3255,"nodeType":"StructuredDocumentation","src":"190:330:20","text":" @dev Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing.\n The library provides methods for generating a hash of a message that conforms to the\n https://eips.ethereum.org/EIPS/eip-191[EIP 191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712]\n specifications."},"fullyImplemented":true,"id":3324,"linearizedBaseContracts":[3324],"name":"MessageHashUtils","nameLocation":"529:16:20","nodeType":"ContractDefinition","nodes":[{"body":{"id":3264,"nodeType":"Block","src":"1314:368:20","statements":[{"AST":{"nodeType":"YulBlock","src":"1376:300:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1397:4:20","type":"","value":"0x00"},{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a3332","kind":"string","nodeType":"YulLiteral","src":"1403:34:20","type":"","value":"\u0019Ethereum Signed Message:\n32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1390:6:20"},"nodeType":"YulFunctionCall","src":"1390:48:20"},"nodeType":"YulExpressionStatement","src":"1390:48:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1499:4:20","type":"","value":"0x1c"},{"name":"messageHash","nodeType":"YulIdentifier","src":"1505:11:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1492:6:20"},"nodeType":"YulFunctionCall","src":"1492:25:20"},"nodeType":"YulExpressionStatement","src":"1492:25:20"},{"nodeType":"YulAssignment","src":"1571:31:20","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1591:4:20","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"1597:4:20","type":"","value":"0x3c"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"1581:9:20"},"nodeType":"YulFunctionCall","src":"1581:21:20"},"variableNames":[{"name":"digest","nodeType":"YulIdentifier","src":"1571:6:20"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":3261,"isOffset":false,"isSlot":false,"src":"1571:6:20","valueSize":1},{"declaration":3258,"isOffset":false,"isSlot":false,"src":"1505:11:20","valueSize":1}],"id":3263,"nodeType":"InlineAssembly","src":"1367:309:20"}]},"documentation":{"id":3256,"nodeType":"StructuredDocumentation","src":"552:665:20","text":" @dev Returns the keccak256 digest of an EIP-191 signed data with version\n `0x45` (`personal_sign` messages).\n The digest is calculated by prefixing a bytes32 `messageHash` with\n `\"\\x19Ethereum Signed Message:\\n32\"` and hashing the result. It corresponds with the\n hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n NOTE: The `messageHash` parameter is intended to be the result of hashing a raw message with\n keccak256, although any bytes32 value can be safely used because the final digest will\n be re-hashed.\n See {ECDSA-recover}."},"id":3265,"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"1231:22:20","nodeType":"FunctionDefinition","parameters":{"id":3259,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3258,"mutability":"mutable","name":"messageHash","nameLocation":"1262:11:20","nodeType":"VariableDeclaration","scope":3265,"src":"1254:19:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3257,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1254:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1253:21:20"},"returnParameters":{"id":3262,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3261,"mutability":"mutable","name":"digest","nameLocation":"1306:6:20","nodeType":"VariableDeclaration","scope":3265,"src":"1298:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3260,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1298:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1297:16:20"},"scope":3324,"src":"1222:460:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3290,"nodeType":"Block","src":"2234:143:20","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a","id":3277,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2286:32:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},"value":"\u0019Ethereum Signed Message:\n"},{"arguments":[{"arguments":[{"expression":{"id":3282,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3268,"src":"2343:7:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3283,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2351:6:20","memberName":"length","nodeType":"MemberAccess","src":"2343:14:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3280,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2902,"src":"2326:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Strings_$2902_$","typeString":"type(library Strings)"}},"id":3281,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2334:8:20","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":2715,"src":"2326:16:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":3284,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2326:32:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3279,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2320:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3278,"name":"bytes","nodeType":"ElementaryTypeName","src":"2320:5:20","typeDescriptions":{}}},"id":3285,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2320:39:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3286,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3268,"src":"2361:7:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3275,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2273:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3274,"name":"bytes","nodeType":"ElementaryTypeName","src":"2273:5:20","typeDescriptions":{}}},"id":3276,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2279:6:20","memberName":"concat","nodeType":"MemberAccess","src":"2273:12:20","typeDescriptions":{"typeIdentifier":"t_function_bytesconcat_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3287,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2273:96:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3273,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2263:9:20","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3288,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2263:107:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3272,"id":3289,"nodeType":"Return","src":"2244:126:20"}]},"documentation":{"id":3266,"nodeType":"StructuredDocumentation","src":"1688:455:20","text":" @dev Returns the keccak256 digest of an EIP-191 signed data with version\n `0x45` (`personal_sign` messages).\n The digest is calculated by prefixing an arbitrary `message` with\n `\"\\x19Ethereum Signed Message:\\n\" + len(message)` and hashing the result. It corresponds with the\n hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n See {ECDSA-recover}."},"id":3291,"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"2157:22:20","nodeType":"FunctionDefinition","parameters":{"id":3269,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3268,"mutability":"mutable","name":"message","nameLocation":"2193:7:20","nodeType":"VariableDeclaration","scope":3291,"src":"2180:20:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3267,"name":"bytes","nodeType":"ElementaryTypeName","src":"2180:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2179:22:20"},"returnParameters":{"id":3272,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3271,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3291,"src":"2225:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3270,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2225:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2224:9:20"},"scope":3324,"src":"2148:229:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3310,"nodeType":"Block","src":"2831:80:20","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"1900","id":3304,"isConstant":false,"isLValue":false,"isPure":true,"kind":"hexString","lValueRequested":false,"nodeType":"Literal","src":"2875:10:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a","typeString":"literal_string hex\"1900\""},"value":"\u0019\u0000"},{"id":3305,"name":"validator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3294,"src":"2887:9:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3306,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3296,"src":"2898:4:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a","typeString":"literal_string hex\"1900\""},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3302,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2858:3:20","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3303,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2862:12:20","memberName":"encodePacked","nodeType":"MemberAccess","src":"2858:16:20","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3307,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2858:45:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3301,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2848:9:20","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3308,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2848:56:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3300,"id":3309,"nodeType":"Return","src":"2841:63:20"}]},"documentation":{"id":3292,"nodeType":"StructuredDocumentation","src":"2383:332:20","text":" @dev Returns the keccak256 digest of an EIP-191 signed data with version\n `0x00` (data with intended validator).\n The digest is calculated by prefixing an arbitrary `data` with `\"\\x19\\x00\"` and the intended\n `validator` address. Then hashing the result.\n See {ECDSA-recover}."},"id":3311,"implemented":true,"kind":"function","modifiers":[],"name":"toDataWithIntendedValidatorHash","nameLocation":"2729:31:20","nodeType":"FunctionDefinition","parameters":{"id":3297,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3294,"mutability":"mutable","name":"validator","nameLocation":"2769:9:20","nodeType":"VariableDeclaration","scope":3311,"src":"2761:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3293,"name":"address","nodeType":"ElementaryTypeName","src":"2761:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3296,"mutability":"mutable","name":"data","nameLocation":"2793:4:20","nodeType":"VariableDeclaration","scope":3311,"src":"2780:17:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3295,"name":"bytes","nodeType":"ElementaryTypeName","src":"2780:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2760:38:20"},"returnParameters":{"id":3300,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3299,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3311,"src":"2822:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3298,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2822:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2821:9:20"},"scope":3324,"src":"2720:191:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3322,"nodeType":"Block","src":"3462:292:20","statements":[{"AST":{"nodeType":"YulBlock","src":"3524:224:20","statements":[{"nodeType":"YulVariableDeclaration","src":"3538:22:20","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3555:4:20","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3549:5:20"},"nodeType":"YulFunctionCall","src":"3549:11:20"},"variables":[{"name":"ptr","nodeType":"YulTypedName","src":"3542:3:20","type":""}]},{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"3580:3:20"},{"hexValue":"1901","kind":"string","nodeType":"YulLiteral","src":"3585:10:20","type":"","value":"\u0019\u0001"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3573:6:20"},"nodeType":"YulFunctionCall","src":"3573:23:20"},"nodeType":"YulExpressionStatement","src":"3573:23:20"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"3620:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"3625:4:20","type":"","value":"0x02"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3616:3:20"},"nodeType":"YulFunctionCall","src":"3616:14:20"},{"name":"domainSeparator","nodeType":"YulIdentifier","src":"3632:15:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3609:6:20"},"nodeType":"YulFunctionCall","src":"3609:39:20"},"nodeType":"YulExpressionStatement","src":"3609:39:20"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"3672:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"3677:4:20","type":"","value":"0x22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3668:3:20"},"nodeType":"YulFunctionCall","src":"3668:14:20"},{"name":"structHash","nodeType":"YulIdentifier","src":"3684:10:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3661:6:20"},"nodeType":"YulFunctionCall","src":"3661:34:20"},"nodeType":"YulExpressionStatement","src":"3661:34:20"},{"nodeType":"YulAssignment","src":"3708:30:20","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"3728:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"3733:4:20","type":"","value":"0x42"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"3718:9:20"},"nodeType":"YulFunctionCall","src":"3718:20:20"},"variableNames":[{"name":"digest","nodeType":"YulIdentifier","src":"3708:6:20"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":3319,"isOffset":false,"isSlot":false,"src":"3708:6:20","valueSize":1},{"declaration":3314,"isOffset":false,"isSlot":false,"src":"3632:15:20","valueSize":1},{"declaration":3316,"isOffset":false,"isSlot":false,"src":"3684:10:20","valueSize":1}],"id":3321,"nodeType":"InlineAssembly","src":"3515:233:20"}]},"documentation":{"id":3312,"nodeType":"StructuredDocumentation","src":"2917:431:20","text":" @dev Returns the keccak256 digest of an EIP-712 typed data (EIP-191 version `0x01`).\n The digest is calculated from a `domainSeparator` and a `structHash`, by prefixing them with\n `\\x19\\x01` and hashing the result. It corresponds to the hash signed by the\n https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`] JSON-RPC method as part of EIP-712.\n See {ECDSA-recover}."},"id":3323,"implemented":true,"kind":"function","modifiers":[],"name":"toTypedDataHash","nameLocation":"3362:15:20","nodeType":"FunctionDefinition","parameters":{"id":3317,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3314,"mutability":"mutable","name":"domainSeparator","nameLocation":"3386:15:20","nodeType":"VariableDeclaration","scope":3323,"src":"3378:23:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3313,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3378:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3316,"mutability":"mutable","name":"structHash","nameLocation":"3411:10:20","nodeType":"VariableDeclaration","scope":3323,"src":"3403:18:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3315,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3403:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3377:45:20"},"returnParameters":{"id":3320,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3319,"mutability":"mutable","name":"digest","nameLocation":"3454:6:20","nodeType":"VariableDeclaration","scope":3323,"src":"3446:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3318,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3446:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3445:16:20"},"scope":3324,"src":"3353:401:20","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":3325,"src":"521:3235:20","usedErrors":[],"usedEvents":[]}],"src":"123:3634:20"},"id":20},"@openzeppelin/contracts/utils/math/Math.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","exportedSymbols":{"Math":[4378]},"id":4379,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3326,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"103:24:21"},{"abstract":false,"baseContracts":[],"canonicalName":"Math","contractDependencies":[],"contractKind":"library","documentation":{"id":3327,"nodeType":"StructuredDocumentation","src":"129:73:21","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":4378,"linearizedBaseContracts":[4378],"name":"Math","nameLocation":"211:4:21","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":3328,"nodeType":"StructuredDocumentation","src":"222:50:21","text":" @dev Muldiv operation overflow."},"errorSelector":"227bc153","id":3330,"name":"MathOverflowedMulDiv","nameLocation":"283:20:21","nodeType":"ErrorDefinition","parameters":{"id":3329,"nodeType":"ParameterList","parameters":[],"src":"303:2:21"},"src":"277:29:21"},{"canonicalName":"Math.Rounding","id":3335,"members":[{"id":3331,"name":"Floor","nameLocation":"336:5:21","nodeType":"EnumValue","src":"336:5:21"},{"id":3332,"name":"Ceil","nameLocation":"379:4:21","nodeType":"EnumValue","src":"379:4:21"},{"id":3333,"name":"Trunc","nameLocation":"421:5:21","nodeType":"EnumValue","src":"421:5:21"},{"id":3334,"name":"Expand","nameLocation":"451:6:21","nodeType":"EnumValue","src":"451:6:21"}],"name":"Rounding","nameLocation":"317:8:21","nodeType":"EnumDefinition","src":"312:169:21"},{"body":{"id":3366,"nodeType":"Block","src":"661:140:21","statements":[{"id":3365,"nodeType":"UncheckedBlock","src":"671:124:21","statements":[{"assignments":[3348],"declarations":[{"constant":false,"id":3348,"mutability":"mutable","name":"c","nameLocation":"703:1:21","nodeType":"VariableDeclaration","scope":3365,"src":"695:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3347,"name":"uint256","nodeType":"ElementaryTypeName","src":"695:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3352,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3351,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3349,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3338,"src":"707:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":3350,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3340,"src":"711:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"707:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"695:17:21"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3355,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3353,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3348,"src":"730:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3354,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3338,"src":"734:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"730:5:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3360,"nodeType":"IfStatement","src":"726:28:21","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3356,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"745:5:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3357,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"752:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3358,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"744:10:21","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3346,"id":3359,"nodeType":"Return","src":"737:17:21"}},{"expression":{"components":[{"hexValue":"74727565","id":3361,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"776:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":3362,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3348,"src":"782:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3363,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"775:9:21","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3346,"id":3364,"nodeType":"Return","src":"768:16:21"}]}]},"documentation":{"id":3336,"nodeType":"StructuredDocumentation","src":"487:93:21","text":" @dev Returns the addition of two unsigned integers, with an overflow flag."},"id":3367,"implemented":true,"kind":"function","modifiers":[],"name":"tryAdd","nameLocation":"594:6:21","nodeType":"FunctionDefinition","parameters":{"id":3341,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3338,"mutability":"mutable","name":"a","nameLocation":"609:1:21","nodeType":"VariableDeclaration","scope":3367,"src":"601:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3337,"name":"uint256","nodeType":"ElementaryTypeName","src":"601:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3340,"mutability":"mutable","name":"b","nameLocation":"620:1:21","nodeType":"VariableDeclaration","scope":3367,"src":"612:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3339,"name":"uint256","nodeType":"ElementaryTypeName","src":"612:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"600:22:21"},"returnParameters":{"id":3346,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3343,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3367,"src":"646:4:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3342,"name":"bool","nodeType":"ElementaryTypeName","src":"646:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3345,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3367,"src":"652:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3344,"name":"uint256","nodeType":"ElementaryTypeName","src":"652:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"645:15:21"},"scope":4378,"src":"585:216:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3394,"nodeType":"Block","src":"984:113:21","statements":[{"id":3393,"nodeType":"UncheckedBlock","src":"994:97:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3381,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3379,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3372,"src":"1022:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3380,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3370,"src":"1026:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1022:5:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3386,"nodeType":"IfStatement","src":"1018:28:21","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3382,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1037:5:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3383,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1044:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3384,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1036:10:21","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3378,"id":3385,"nodeType":"Return","src":"1029:17:21"}},{"expression":{"components":[{"hexValue":"74727565","id":3387,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1068:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3390,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3388,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3370,"src":"1074:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3389,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3372,"src":"1078:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1074:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3391,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1067:13:21","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3378,"id":3392,"nodeType":"Return","src":"1060:20:21"}]}]},"documentation":{"id":3368,"nodeType":"StructuredDocumentation","src":"807:96:21","text":" @dev Returns the subtraction of two unsigned integers, with an overflow flag."},"id":3395,"implemented":true,"kind":"function","modifiers":[],"name":"trySub","nameLocation":"917:6:21","nodeType":"FunctionDefinition","parameters":{"id":3373,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3370,"mutability":"mutable","name":"a","nameLocation":"932:1:21","nodeType":"VariableDeclaration","scope":3395,"src":"924:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3369,"name":"uint256","nodeType":"ElementaryTypeName","src":"924:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3372,"mutability":"mutable","name":"b","nameLocation":"943:1:21","nodeType":"VariableDeclaration","scope":3395,"src":"935:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3371,"name":"uint256","nodeType":"ElementaryTypeName","src":"935:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"923:22:21"},"returnParameters":{"id":3378,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3375,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3395,"src":"969:4:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3374,"name":"bool","nodeType":"ElementaryTypeName","src":"969:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3377,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3395,"src":"975:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3376,"name":"uint256","nodeType":"ElementaryTypeName","src":"975:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"968:15:21"},"scope":4378,"src":"908:189:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3436,"nodeType":"Block","src":"1283:417:21","statements":[{"id":3435,"nodeType":"UncheckedBlock","src":"1293:401:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3409,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3407,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3398,"src":"1551:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3408,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1556:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1551:6:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3414,"nodeType":"IfStatement","src":"1547:28:21","trueBody":{"expression":{"components":[{"hexValue":"74727565","id":3410,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1567:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"hexValue":"30","id":3411,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1573:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3412,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1566:9:21","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3406,"id":3413,"nodeType":"Return","src":"1559:16:21"}},{"assignments":[3416],"declarations":[{"constant":false,"id":3416,"mutability":"mutable","name":"c","nameLocation":"1597:1:21","nodeType":"VariableDeclaration","scope":3435,"src":"1589:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3415,"name":"uint256","nodeType":"ElementaryTypeName","src":"1589:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3420,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3419,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3417,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3398,"src":"1601:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3418,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3400,"src":"1605:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1601:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1589:17:21"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3425,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3423,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3421,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3416,"src":"1624:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3422,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3398,"src":"1628:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1624:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3424,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3400,"src":"1633:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1624:10:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3430,"nodeType":"IfStatement","src":"1620:33:21","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3426,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1644:5:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3427,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1651:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3428,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1643:10:21","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3406,"id":3429,"nodeType":"Return","src":"1636:17:21"}},{"expression":{"components":[{"hexValue":"74727565","id":3431,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1675:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":3432,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3416,"src":"1681:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3433,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1674:9:21","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3406,"id":3434,"nodeType":"Return","src":"1667:16:21"}]}]},"documentation":{"id":3396,"nodeType":"StructuredDocumentation","src":"1103:99:21","text":" @dev Returns the multiplication of two unsigned integers, with an overflow flag."},"id":3437,"implemented":true,"kind":"function","modifiers":[],"name":"tryMul","nameLocation":"1216:6:21","nodeType":"FunctionDefinition","parameters":{"id":3401,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3398,"mutability":"mutable","name":"a","nameLocation":"1231:1:21","nodeType":"VariableDeclaration","scope":3437,"src":"1223:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3397,"name":"uint256","nodeType":"ElementaryTypeName","src":"1223:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3400,"mutability":"mutable","name":"b","nameLocation":"1242:1:21","nodeType":"VariableDeclaration","scope":3437,"src":"1234:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3399,"name":"uint256","nodeType":"ElementaryTypeName","src":"1234:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1222:22:21"},"returnParameters":{"id":3406,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3403,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3437,"src":"1268:4:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3402,"name":"bool","nodeType":"ElementaryTypeName","src":"1268:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3405,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3437,"src":"1274:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3404,"name":"uint256","nodeType":"ElementaryTypeName","src":"1274:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1267:15:21"},"scope":4378,"src":"1207:493:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3464,"nodeType":"Block","src":"1887:114:21","statements":[{"id":3463,"nodeType":"UncheckedBlock","src":"1897:98:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3451,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3449,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3442,"src":"1925:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3450,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1930:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1925:6:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3456,"nodeType":"IfStatement","src":"1921:29:21","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3452,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1941:5:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3453,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1948:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3454,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1940:10:21","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3448,"id":3455,"nodeType":"Return","src":"1933:17:21"}},{"expression":{"components":[{"hexValue":"74727565","id":3457,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1972:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3460,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3458,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3440,"src":"1978:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3459,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3442,"src":"1982:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1978:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3461,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1971:13:21","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3448,"id":3462,"nodeType":"Return","src":"1964:20:21"}]}]},"documentation":{"id":3438,"nodeType":"StructuredDocumentation","src":"1706:100:21","text":" @dev Returns the division of two unsigned integers, with a division by zero flag."},"id":3465,"implemented":true,"kind":"function","modifiers":[],"name":"tryDiv","nameLocation":"1820:6:21","nodeType":"FunctionDefinition","parameters":{"id":3443,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3440,"mutability":"mutable","name":"a","nameLocation":"1835:1:21","nodeType":"VariableDeclaration","scope":3465,"src":"1827:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3439,"name":"uint256","nodeType":"ElementaryTypeName","src":"1827:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3442,"mutability":"mutable","name":"b","nameLocation":"1846:1:21","nodeType":"VariableDeclaration","scope":3465,"src":"1838:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3441,"name":"uint256","nodeType":"ElementaryTypeName","src":"1838:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1826:22:21"},"returnParameters":{"id":3448,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3445,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3465,"src":"1872:4:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3444,"name":"bool","nodeType":"ElementaryTypeName","src":"1872:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3447,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3465,"src":"1878:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3446,"name":"uint256","nodeType":"ElementaryTypeName","src":"1878:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1871:15:21"},"scope":4378,"src":"1811:190:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3492,"nodeType":"Block","src":"2198:114:21","statements":[{"id":3491,"nodeType":"UncheckedBlock","src":"2208:98:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3479,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3477,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3470,"src":"2236:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3478,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2241:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2236:6:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3484,"nodeType":"IfStatement","src":"2232:29:21","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3480,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2252:5:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3481,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2259:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3482,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2251:10:21","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3476,"id":3483,"nodeType":"Return","src":"2244:17:21"}},{"expression":{"components":[{"hexValue":"74727565","id":3485,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2283:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3488,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3486,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3468,"src":"2289:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":3487,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3470,"src":"2293:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2289:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3489,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2282:13:21","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3476,"id":3490,"nodeType":"Return","src":"2275:20:21"}]}]},"documentation":{"id":3466,"nodeType":"StructuredDocumentation","src":"2007:110:21","text":" @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag."},"id":3493,"implemented":true,"kind":"function","modifiers":[],"name":"tryMod","nameLocation":"2131:6:21","nodeType":"FunctionDefinition","parameters":{"id":3471,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3468,"mutability":"mutable","name":"a","nameLocation":"2146:1:21","nodeType":"VariableDeclaration","scope":3493,"src":"2138:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3467,"name":"uint256","nodeType":"ElementaryTypeName","src":"2138:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3470,"mutability":"mutable","name":"b","nameLocation":"2157:1:21","nodeType":"VariableDeclaration","scope":3493,"src":"2149:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3469,"name":"uint256","nodeType":"ElementaryTypeName","src":"2149:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2137:22:21"},"returnParameters":{"id":3476,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3473,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3493,"src":"2183:4:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3472,"name":"bool","nodeType":"ElementaryTypeName","src":"2183:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3475,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3493,"src":"2189:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3474,"name":"uint256","nodeType":"ElementaryTypeName","src":"2189:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2182:15:21"},"scope":4378,"src":"2122:190:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3510,"nodeType":"Block","src":"2449:37:21","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3505,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3503,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3496,"src":"2466:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3504,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3498,"src":"2470:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2466:5:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":3507,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3498,"src":"2478:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3508,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2466:13:21","trueExpression":{"id":3506,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3496,"src":"2474:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3502,"id":3509,"nodeType":"Return","src":"2459:20:21"}]},"documentation":{"id":3494,"nodeType":"StructuredDocumentation","src":"2318:59:21","text":" @dev Returns the largest of two numbers."},"id":3511,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"2391:3:21","nodeType":"FunctionDefinition","parameters":{"id":3499,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3496,"mutability":"mutable","name":"a","nameLocation":"2403:1:21","nodeType":"VariableDeclaration","scope":3511,"src":"2395:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3495,"name":"uint256","nodeType":"ElementaryTypeName","src":"2395:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3498,"mutability":"mutable","name":"b","nameLocation":"2414:1:21","nodeType":"VariableDeclaration","scope":3511,"src":"2406:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3497,"name":"uint256","nodeType":"ElementaryTypeName","src":"2406:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2394:22:21"},"returnParameters":{"id":3502,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3501,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3511,"src":"2440:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3500,"name":"uint256","nodeType":"ElementaryTypeName","src":"2440:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2439:9:21"},"scope":4378,"src":"2382:104:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3528,"nodeType":"Block","src":"2624:37:21","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3523,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3521,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3514,"src":"2641:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3522,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3516,"src":"2645:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2641:5:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":3525,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3516,"src":"2653:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3526,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2641:13:21","trueExpression":{"id":3524,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3514,"src":"2649:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3520,"id":3527,"nodeType":"Return","src":"2634:20:21"}]},"documentation":{"id":3512,"nodeType":"StructuredDocumentation","src":"2492:60:21","text":" @dev Returns the smallest of two numbers."},"id":3529,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"2566:3:21","nodeType":"FunctionDefinition","parameters":{"id":3517,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3514,"mutability":"mutable","name":"a","nameLocation":"2578:1:21","nodeType":"VariableDeclaration","scope":3529,"src":"2570:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3513,"name":"uint256","nodeType":"ElementaryTypeName","src":"2570:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3516,"mutability":"mutable","name":"b","nameLocation":"2589:1:21","nodeType":"VariableDeclaration","scope":3529,"src":"2581:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3515,"name":"uint256","nodeType":"ElementaryTypeName","src":"2581:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2569:22:21"},"returnParameters":{"id":3520,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3519,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3529,"src":"2615:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3518,"name":"uint256","nodeType":"ElementaryTypeName","src":"2615:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2614:9:21"},"scope":4378,"src":"2557:104:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3551,"nodeType":"Block","src":"2845:82:21","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3549,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3541,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3539,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3532,"src":"2900:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":3540,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3534,"src":"2904:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2900:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3542,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2899:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3548,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3545,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3543,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3532,"src":"2910:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":3544,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3534,"src":"2914:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2910:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3546,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2909:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":3547,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2919:1:21","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"2909:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2899:21:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3538,"id":3550,"nodeType":"Return","src":"2892:28:21"}]},"documentation":{"id":3530,"nodeType":"StructuredDocumentation","src":"2667:102:21","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":3552,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"2783:7:21","nodeType":"FunctionDefinition","parameters":{"id":3535,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3532,"mutability":"mutable","name":"a","nameLocation":"2799:1:21","nodeType":"VariableDeclaration","scope":3552,"src":"2791:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3531,"name":"uint256","nodeType":"ElementaryTypeName","src":"2791:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3534,"mutability":"mutable","name":"b","nameLocation":"2810:1:21","nodeType":"VariableDeclaration","scope":3552,"src":"2802:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3533,"name":"uint256","nodeType":"ElementaryTypeName","src":"2802:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2790:22:21"},"returnParameters":{"id":3538,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3537,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3552,"src":"2836:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3536,"name":"uint256","nodeType":"ElementaryTypeName","src":"2836:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2835:9:21"},"scope":4378,"src":"2774:153:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3585,"nodeType":"Block","src":"3219:260:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3564,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3562,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3557,"src":"3233:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3563,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3238:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3233:6:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3570,"nodeType":"IfStatement","src":"3229:127:21","trueBody":{"id":3569,"nodeType":"Block","src":"3241:115:21","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3567,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3565,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3555,"src":"3340:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3566,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3557,"src":"3344:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3340:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3561,"id":3568,"nodeType":"Return","src":"3333:12:21"}]}},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3573,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3571,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3555,"src":"3444:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3572,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3449:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3444:6:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3582,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3580,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3577,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3575,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3555,"src":"3458:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3576,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3462:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3458:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3578,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3457:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3579,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3557,"src":"3467:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3457:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3581,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3471:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3457:15:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3583,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"3444:28:21","trueExpression":{"hexValue":"30","id":3574,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3453:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3561,"id":3584,"nodeType":"Return","src":"3437:35:21"}]},"documentation":{"id":3553,"nodeType":"StructuredDocumentation","src":"2933:210:21","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."},"id":3586,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"3157:7:21","nodeType":"FunctionDefinition","parameters":{"id":3558,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3555,"mutability":"mutable","name":"a","nameLocation":"3173:1:21","nodeType":"VariableDeclaration","scope":3586,"src":"3165:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3554,"name":"uint256","nodeType":"ElementaryTypeName","src":"3165:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3557,"mutability":"mutable","name":"b","nameLocation":"3184:1:21","nodeType":"VariableDeclaration","scope":3586,"src":"3176:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3556,"name":"uint256","nodeType":"ElementaryTypeName","src":"3176:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3164:22:21"},"returnParameters":{"id":3561,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3560,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3586,"src":"3210:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3559,"name":"uint256","nodeType":"ElementaryTypeName","src":"3210:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3209:9:21"},"scope":4378,"src":"3148:331:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3711,"nodeType":"Block","src":"3901:4018:21","statements":[{"id":3710,"nodeType":"UncheckedBlock","src":"3911:4002:21","statements":[{"assignments":[3599],"declarations":[{"constant":false,"id":3599,"mutability":"mutable","name":"prod0","nameLocation":"4240:5:21","nodeType":"VariableDeclaration","scope":3710,"src":"4232:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3598,"name":"uint256","nodeType":"ElementaryTypeName","src":"4232:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3603,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3602,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3600,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3589,"src":"4248:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3601,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3591,"src":"4252:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4248:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4232:21:21"},{"assignments":[3605],"declarations":[{"constant":false,"id":3605,"mutability":"mutable","name":"prod1","nameLocation":"4320:5:21","nodeType":"VariableDeclaration","scope":3710,"src":"4312:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3604,"name":"uint256","nodeType":"ElementaryTypeName","src":"4312:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3606,"nodeType":"VariableDeclarationStatement","src":"4312:13:21"},{"AST":{"nodeType":"YulBlock","src":"4392:122:21","statements":[{"nodeType":"YulVariableDeclaration","src":"4410:30:21","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"4427:1:21"},{"name":"y","nodeType":"YulIdentifier","src":"4430:1:21"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4437:1:21","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4433:3:21"},"nodeType":"YulFunctionCall","src":"4433:6:21"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"4420:6:21"},"nodeType":"YulFunctionCall","src":"4420:20:21"},"variables":[{"name":"mm","nodeType":"YulTypedName","src":"4414:2:21","type":""}]},{"nodeType":"YulAssignment","src":"4457:43:21","value":{"arguments":[{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"4474:2:21"},{"name":"prod0","nodeType":"YulIdentifier","src":"4478:5:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4470:3:21"},"nodeType":"YulFunctionCall","src":"4470:14:21"},{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"4489:2:21"},{"name":"prod0","nodeType":"YulIdentifier","src":"4493:5:21"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4486:2:21"},"nodeType":"YulFunctionCall","src":"4486:13:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4466:3:21"},"nodeType":"YulFunctionCall","src":"4466:34:21"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"4457:5:21"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3599,"isOffset":false,"isSlot":false,"src":"4478:5:21","valueSize":1},{"declaration":3599,"isOffset":false,"isSlot":false,"src":"4493:5:21","valueSize":1},{"declaration":3605,"isOffset":false,"isSlot":false,"src":"4457:5:21","valueSize":1},{"declaration":3589,"isOffset":false,"isSlot":false,"src":"4427:1:21","valueSize":1},{"declaration":3591,"isOffset":false,"isSlot":false,"src":"4430:1:21","valueSize":1}],"id":3607,"nodeType":"InlineAssembly","src":"4383:131:21"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3610,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3608,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3605,"src":"4595:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3609,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4604:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4595:10:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3616,"nodeType":"IfStatement","src":"4591:368:21","trueBody":{"id":3615,"nodeType":"Block","src":"4607:352:21","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3613,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3611,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3599,"src":"4925:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3612,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3593,"src":"4933:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4925:19:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3597,"id":3614,"nodeType":"Return","src":"4918:26:21"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3619,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3617,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3593,"src":"5065:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":3618,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3605,"src":"5080:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5065:20:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3624,"nodeType":"IfStatement","src":"5061:88:21","trueBody":{"id":3623,"nodeType":"Block","src":"5087:62:21","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3620,"name":"MathOverflowedMulDiv","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3330,"src":"5112:20:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3621,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5112:22:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3622,"nodeType":"RevertStatement","src":"5105:29:21"}]}},{"assignments":[3626],"declarations":[{"constant":false,"id":3626,"mutability":"mutable","name":"remainder","nameLocation":"5412:9:21","nodeType":"VariableDeclaration","scope":3710,"src":"5404:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3625,"name":"uint256","nodeType":"ElementaryTypeName","src":"5404:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3627,"nodeType":"VariableDeclarationStatement","src":"5404:17:21"},{"AST":{"nodeType":"YulBlock","src":"5444:291:21","statements":[{"nodeType":"YulAssignment","src":"5513:38:21","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"5533:1:21"},{"name":"y","nodeType":"YulIdentifier","src":"5536:1:21"},{"name":"denominator","nodeType":"YulIdentifier","src":"5539:11:21"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"5526:6:21"},"nodeType":"YulFunctionCall","src":"5526:25:21"},"variableNames":[{"name":"remainder","nodeType":"YulIdentifier","src":"5513:9:21"}]},{"nodeType":"YulAssignment","src":"5633:41:21","value":{"arguments":[{"name":"prod1","nodeType":"YulIdentifier","src":"5646:5:21"},{"arguments":[{"name":"remainder","nodeType":"YulIdentifier","src":"5656:9:21"},{"name":"prod0","nodeType":"YulIdentifier","src":"5667:5:21"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5653:2:21"},"nodeType":"YulFunctionCall","src":"5653:20:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5642:3:21"},"nodeType":"YulFunctionCall","src":"5642:32:21"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"5633:5:21"}]},{"nodeType":"YulAssignment","src":"5691:30:21","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"5704:5:21"},{"name":"remainder","nodeType":"YulIdentifier","src":"5711:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5700:3:21"},"nodeType":"YulFunctionCall","src":"5700:21:21"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"5691:5:21"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3593,"isOffset":false,"isSlot":false,"src":"5539:11:21","valueSize":1},{"declaration":3599,"isOffset":false,"isSlot":false,"src":"5667:5:21","valueSize":1},{"declaration":3599,"isOffset":false,"isSlot":false,"src":"5691:5:21","valueSize":1},{"declaration":3599,"isOffset":false,"isSlot":false,"src":"5704:5:21","valueSize":1},{"declaration":3605,"isOffset":false,"isSlot":false,"src":"5633:5:21","valueSize":1},{"declaration":3605,"isOffset":false,"isSlot":false,"src":"5646:5:21","valueSize":1},{"declaration":3626,"isOffset":false,"isSlot":false,"src":"5513:9:21","valueSize":1},{"declaration":3626,"isOffset":false,"isSlot":false,"src":"5656:9:21","valueSize":1},{"declaration":3626,"isOffset":false,"isSlot":false,"src":"5711:9:21","valueSize":1},{"declaration":3589,"isOffset":false,"isSlot":false,"src":"5533:1:21","valueSize":1},{"declaration":3591,"isOffset":false,"isSlot":false,"src":"5536:1:21","valueSize":1}],"id":3628,"nodeType":"InlineAssembly","src":"5435:300:21"},{"assignments":[3630],"declarations":[{"constant":false,"id":3630,"mutability":"mutable","name":"twos","nameLocation":"5947:4:21","nodeType":"VariableDeclaration","scope":3710,"src":"5939:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3629,"name":"uint256","nodeType":"ElementaryTypeName","src":"5939:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3637,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3636,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3631,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3593,"src":"5954:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3634,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"30","id":3632,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5969:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3633,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3593,"src":"5973:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5969:15:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3635,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5968:17:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5954:31:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5939:46:21"},{"AST":{"nodeType":"YulBlock","src":"6008:362:21","statements":[{"nodeType":"YulAssignment","src":"6073:37:21","value":{"arguments":[{"name":"denominator","nodeType":"YulIdentifier","src":"6092:11:21"},{"name":"twos","nodeType":"YulIdentifier","src":"6105:4:21"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"6088:3:21"},"nodeType":"YulFunctionCall","src":"6088:22:21"},"variableNames":[{"name":"denominator","nodeType":"YulIdentifier","src":"6073:11:21"}]},{"nodeType":"YulAssignment","src":"6177:25:21","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"6190:5:21"},{"name":"twos","nodeType":"YulIdentifier","src":"6197:4:21"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"6186:3:21"},"nodeType":"YulFunctionCall","src":"6186:16:21"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"6177:5:21"}]},{"nodeType":"YulAssignment","src":"6317:39:21","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6337:1:21","type":"","value":"0"},{"name":"twos","nodeType":"YulIdentifier","src":"6340:4:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6333:3:21"},"nodeType":"YulFunctionCall","src":"6333:12:21"},{"name":"twos","nodeType":"YulIdentifier","src":"6347:4:21"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"6329:3:21"},"nodeType":"YulFunctionCall","src":"6329:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"6354:1:21","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6325:3:21"},"nodeType":"YulFunctionCall","src":"6325:31:21"},"variableNames":[{"name":"twos","nodeType":"YulIdentifier","src":"6317:4:21"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3593,"isOffset":false,"isSlot":false,"src":"6073:11:21","valueSize":1},{"declaration":3593,"isOffset":false,"isSlot":false,"src":"6092:11:21","valueSize":1},{"declaration":3599,"isOffset":false,"isSlot":false,"src":"6177:5:21","valueSize":1},{"declaration":3599,"isOffset":false,"isSlot":false,"src":"6190:5:21","valueSize":1},{"declaration":3630,"isOffset":false,"isSlot":false,"src":"6105:4:21","valueSize":1},{"declaration":3630,"isOffset":false,"isSlot":false,"src":"6197:4:21","valueSize":1},{"declaration":3630,"isOffset":false,"isSlot":false,"src":"6317:4:21","valueSize":1},{"declaration":3630,"isOffset":false,"isSlot":false,"src":"6340:4:21","valueSize":1},{"declaration":3630,"isOffset":false,"isSlot":false,"src":"6347:4:21","valueSize":1}],"id":3638,"nodeType":"InlineAssembly","src":"5999:371:21"},{"expression":{"id":3643,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3639,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3599,"src":"6436:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3642,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3640,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3605,"src":"6445:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3641,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3630,"src":"6453:4:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6445:12:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6436:21:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3644,"nodeType":"ExpressionStatement","src":"6436:21:21"},{"assignments":[3646],"declarations":[{"constant":false,"id":3646,"mutability":"mutable","name":"inverse","nameLocation":"6783:7:21","nodeType":"VariableDeclaration","scope":3710,"src":"6775:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3645,"name":"uint256","nodeType":"ElementaryTypeName","src":"6775:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3653,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3652,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3649,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":3647,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6794:1:21","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3648,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3593,"src":"6798:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6794:15:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3650,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6793:17:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":3651,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6813:1:21","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"6793:21:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6775:39:21"},{"expression":{"id":3660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3654,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3646,"src":"7031:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3659,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3655,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7042:1:21","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3658,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3656,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3593,"src":"7046:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3657,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3646,"src":"7060:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7046:21:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7042:25:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7031:36:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3661,"nodeType":"ExpressionStatement","src":"7031:36:21"},{"expression":{"id":3668,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3662,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3646,"src":"7100:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3667,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3663,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7111:1:21","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3666,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3664,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3593,"src":"7115:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3665,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3646,"src":"7129:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7115:21:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7111:25:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7100:36:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3669,"nodeType":"ExpressionStatement","src":"7100:36:21"},{"expression":{"id":3676,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3670,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3646,"src":"7170:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3675,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3671,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7181:1:21","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3674,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3672,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3593,"src":"7185:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3673,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3646,"src":"7199:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7185:21:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7181:25:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7170:36:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3677,"nodeType":"ExpressionStatement","src":"7170:36:21"},{"expression":{"id":3684,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3678,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3646,"src":"7240:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3683,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3679,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7251:1:21","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3682,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3680,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3593,"src":"7255:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3681,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3646,"src":"7269:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7255:21:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7251:25:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7240:36:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3685,"nodeType":"ExpressionStatement","src":"7240:36:21"},{"expression":{"id":3692,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3686,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3646,"src":"7310:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3691,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3687,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7321:1:21","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3690,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3688,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3593,"src":"7325:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3689,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3646,"src":"7339:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7325:21:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7321:25:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7310:36:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3693,"nodeType":"ExpressionStatement","src":"7310:36:21"},{"expression":{"id":3700,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3694,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3646,"src":"7381:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3699,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3695,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7392:1:21","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3698,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3696,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3593,"src":"7396:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3697,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3646,"src":"7410:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7396:21:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7392:25:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7381:36:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3701,"nodeType":"ExpressionStatement","src":"7381:36:21"},{"expression":{"id":3706,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3702,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3596,"src":"7851:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3705,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3703,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3599,"src":"7860:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3704,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3646,"src":"7868:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7860:15:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7851:24:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3707,"nodeType":"ExpressionStatement","src":"7851:24:21"},{"expression":{"id":3708,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3596,"src":"7896:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3597,"id":3709,"nodeType":"Return","src":"7889:13:21"}]}]},"documentation":{"id":3587,"nodeType":"StructuredDocumentation","src":"3485:313:21","text":" @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."},"id":3712,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"3812:6:21","nodeType":"FunctionDefinition","parameters":{"id":3594,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3589,"mutability":"mutable","name":"x","nameLocation":"3827:1:21","nodeType":"VariableDeclaration","scope":3712,"src":"3819:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3588,"name":"uint256","nodeType":"ElementaryTypeName","src":"3819:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3591,"mutability":"mutable","name":"y","nameLocation":"3838:1:21","nodeType":"VariableDeclaration","scope":3712,"src":"3830:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3590,"name":"uint256","nodeType":"ElementaryTypeName","src":"3830:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3593,"mutability":"mutable","name":"denominator","nameLocation":"3849:11:21","nodeType":"VariableDeclaration","scope":3712,"src":"3841:19:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3592,"name":"uint256","nodeType":"ElementaryTypeName","src":"3841:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3818:43:21"},"returnParameters":{"id":3597,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3596,"mutability":"mutable","name":"result","nameLocation":"3893:6:21","nodeType":"VariableDeclaration","scope":3712,"src":"3885:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3595,"name":"uint256","nodeType":"ElementaryTypeName","src":"3885:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3884:16:21"},"scope":4378,"src":"3803:4116:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3754,"nodeType":"Block","src":"8161:192:21","statements":[{"assignments":[3728],"declarations":[{"constant":false,"id":3728,"mutability":"mutable","name":"result","nameLocation":"8179:6:21","nodeType":"VariableDeclaration","scope":3754,"src":"8171:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3727,"name":"uint256","nodeType":"ElementaryTypeName","src":"8171:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3734,"initialValue":{"arguments":[{"id":3730,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3715,"src":"8195:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3731,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3717,"src":"8198:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3732,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3719,"src":"8201:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3729,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[3712,3755],"referencedDeclaration":3712,"src":"8188:6:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":3733,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8188:25:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8171:42:21"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3745,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3736,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3722,"src":"8244:8:21","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3335","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3335","typeString":"enum Math.Rounding"}],"id":3735,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4377,"src":"8227:16:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3335_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":3737,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8227:26:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3744,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3739,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3715,"src":"8264:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3740,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3717,"src":"8267:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3741,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3719,"src":"8270:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3738,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"8257:6:21","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":3742,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8257:25:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3743,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8285:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8257:29:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8227:59:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3751,"nodeType":"IfStatement","src":"8223:101:21","trueBody":{"id":3750,"nodeType":"Block","src":"8288:36:21","statements":[{"expression":{"id":3748,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3746,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3728,"src":"8302:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":3747,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8312:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8302:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3749,"nodeType":"ExpressionStatement","src":"8302:11:21"}]}},{"expression":{"id":3752,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3728,"src":"8340:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3726,"id":3753,"nodeType":"Return","src":"8333:13:21"}]},"documentation":{"id":3713,"nodeType":"StructuredDocumentation","src":"7925:121:21","text":" @notice Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":3755,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"8060:6:21","nodeType":"FunctionDefinition","parameters":{"id":3723,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3715,"mutability":"mutable","name":"x","nameLocation":"8075:1:21","nodeType":"VariableDeclaration","scope":3755,"src":"8067:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3714,"name":"uint256","nodeType":"ElementaryTypeName","src":"8067:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3717,"mutability":"mutable","name":"y","nameLocation":"8086:1:21","nodeType":"VariableDeclaration","scope":3755,"src":"8078:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3716,"name":"uint256","nodeType":"ElementaryTypeName","src":"8078:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3719,"mutability":"mutable","name":"denominator","nameLocation":"8097:11:21","nodeType":"VariableDeclaration","scope":3755,"src":"8089:19:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3718,"name":"uint256","nodeType":"ElementaryTypeName","src":"8089:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3722,"mutability":"mutable","name":"rounding","nameLocation":"8119:8:21","nodeType":"VariableDeclaration","scope":3755,"src":"8110:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3335","typeString":"enum Math.Rounding"},"typeName":{"id":3721,"nodeType":"UserDefinedTypeName","pathNode":{"id":3720,"name":"Rounding","nameLocations":["8110:8:21"],"nodeType":"IdentifierPath","referencedDeclaration":3335,"src":"8110:8:21"},"referencedDeclaration":3335,"src":"8110:8:21","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3335","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"8066:62:21"},"returnParameters":{"id":3726,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3725,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3755,"src":"8152:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3724,"name":"uint256","nodeType":"ElementaryTypeName","src":"8152:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8151:9:21"},"scope":4378,"src":"8051:302:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3866,"nodeType":"Block","src":"8644:1585:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3765,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3763,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3758,"src":"8658:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3764,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8663:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8658:6:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3769,"nodeType":"IfStatement","src":"8654:45:21","trueBody":{"id":3768,"nodeType":"Block","src":"8666:33:21","statements":[{"expression":{"hexValue":"30","id":3766,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8687:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":3762,"id":3767,"nodeType":"Return","src":"8680:8:21"}]}},{"assignments":[3771],"declarations":[{"constant":false,"id":3771,"mutability":"mutable","name":"result","nameLocation":"9386:6:21","nodeType":"VariableDeclaration","scope":3866,"src":"9378:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3770,"name":"uint256","nodeType":"ElementaryTypeName","src":"9378:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3780,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3779,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3772,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9395:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3777,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3774,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3758,"src":"9406:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3773,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[4034,4069],"referencedDeclaration":4034,"src":"9401:4:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3775,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9401:7:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3776,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9412:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9401:12:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3778,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9400:14:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9395:19:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9378:36:21"},{"id":3865,"nodeType":"UncheckedBlock","src":"9815:408:21","statements":[{"expression":{"id":3790,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3781,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3771,"src":"9839:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3789,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3786,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3782,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3771,"src":"9849:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3785,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3783,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3758,"src":"9858:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3784,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3771,"src":"9862:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9858:10:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9849:19:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3787,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9848:21:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3788,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9873:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9848:26:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9839:35:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3791,"nodeType":"ExpressionStatement","src":"9839:35:21"},{"expression":{"id":3801,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3792,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3771,"src":"9888:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3800,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3797,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3793,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3771,"src":"9898:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3796,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3794,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3758,"src":"9907:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3795,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3771,"src":"9911:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9907:10:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9898:19:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3798,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9897:21:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3799,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9922:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9897:26:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9888:35:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3802,"nodeType":"ExpressionStatement","src":"9888:35:21"},{"expression":{"id":3812,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3803,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3771,"src":"9937:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3811,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3808,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3804,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3771,"src":"9947:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3807,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3805,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3758,"src":"9956:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3806,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3771,"src":"9960:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9956:10:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9947:19:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3809,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9946:21:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3810,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9971:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9946:26:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9937:35:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3813,"nodeType":"ExpressionStatement","src":"9937:35:21"},{"expression":{"id":3823,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3814,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3771,"src":"9986:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3822,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3819,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3815,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3771,"src":"9996:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3818,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3816,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3758,"src":"10005:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3817,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3771,"src":"10009:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10005:10:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9996:19:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3820,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9995:21:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3821,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10020:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9995:26:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9986:35:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3824,"nodeType":"ExpressionStatement","src":"9986:35:21"},{"expression":{"id":3834,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3825,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3771,"src":"10035:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3833,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3830,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3826,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3771,"src":"10045:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3829,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3827,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3758,"src":"10054:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3828,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3771,"src":"10058:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10054:10:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10045:19:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3831,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10044:21:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3832,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10069:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10044:26:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10035:35:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3835,"nodeType":"ExpressionStatement","src":"10035:35:21"},{"expression":{"id":3845,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3836,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3771,"src":"10084:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3844,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3841,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3837,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3771,"src":"10094:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3840,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3838,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3758,"src":"10103:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3839,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3771,"src":"10107:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10103:10:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10094:19:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3842,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10093:21:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3843,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10118:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10093:26:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10084:35:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3846,"nodeType":"ExpressionStatement","src":"10084:35:21"},{"expression":{"id":3856,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3847,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3771,"src":"10133:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3855,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3852,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3848,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3771,"src":"10143:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3851,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3849,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3758,"src":"10152:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3850,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3771,"src":"10156:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10152:10:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10143:19:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3853,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10142:21:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3854,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10167:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10142:26:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10133:35:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3857,"nodeType":"ExpressionStatement","src":"10133:35:21"},{"expression":{"arguments":[{"id":3859,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3771,"src":"10193:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3862,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3860,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3758,"src":"10201:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3861,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3771,"src":"10205:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10201:10:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3858,"name":"min","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3529,"src":"10189:3:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3863,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10189:23:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3762,"id":3864,"nodeType":"Return","src":"10182:30:21"}]}]},"documentation":{"id":3756,"nodeType":"StructuredDocumentation","src":"8359:223:21","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."},"id":3867,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"8596:4:21","nodeType":"FunctionDefinition","parameters":{"id":3759,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3758,"mutability":"mutable","name":"a","nameLocation":"8609:1:21","nodeType":"VariableDeclaration","scope":3867,"src":"8601:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3757,"name":"uint256","nodeType":"ElementaryTypeName","src":"8601:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8600:11:21"},"returnParameters":{"id":3762,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3761,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3867,"src":"8635:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3760,"name":"uint256","nodeType":"ElementaryTypeName","src":"8635:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8634:9:21"},"scope":4378,"src":"8587:1642:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3901,"nodeType":"Block","src":"10405:164:21","statements":[{"id":3900,"nodeType":"UncheckedBlock","src":"10415:148:21","statements":[{"assignments":[3879],"declarations":[{"constant":false,"id":3879,"mutability":"mutable","name":"result","nameLocation":"10447:6:21","nodeType":"VariableDeclaration","scope":3900,"src":"10439:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3878,"name":"uint256","nodeType":"ElementaryTypeName","src":"10439:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3883,"initialValue":{"arguments":[{"id":3881,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3870,"src":"10461:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3880,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[3867,3902],"referencedDeclaration":3867,"src":"10456:4:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3882,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10456:7:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10439:24:21"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3898,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3884,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3879,"src":"10484:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3893,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3886,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3873,"src":"10511:8:21","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3335","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3335","typeString":"enum Math.Rounding"}],"id":3885,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4377,"src":"10494:16:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3335_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":3887,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10494:26:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3892,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3890,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3888,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3879,"src":"10524:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3889,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3879,"src":"10533:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10524:15:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3891,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3870,"src":"10542:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10524:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10494:49:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":3895,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10550:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":3896,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"10494:57:21","trueExpression":{"hexValue":"31","id":3894,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10546:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":3897,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10493:59:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"10484:68:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3877,"id":3899,"nodeType":"Return","src":"10477:75:21"}]}]},"documentation":{"id":3868,"nodeType":"StructuredDocumentation","src":"10235:89:21","text":" @notice Calculates sqrt(a), following the selected rounding direction."},"id":3902,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"10338:4:21","nodeType":"FunctionDefinition","parameters":{"id":3874,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3870,"mutability":"mutable","name":"a","nameLocation":"10351:1:21","nodeType":"VariableDeclaration","scope":3902,"src":"10343:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3869,"name":"uint256","nodeType":"ElementaryTypeName","src":"10343:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3873,"mutability":"mutable","name":"rounding","nameLocation":"10363:8:21","nodeType":"VariableDeclaration","scope":3902,"src":"10354:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3335","typeString":"enum Math.Rounding"},"typeName":{"id":3872,"nodeType":"UserDefinedTypeName","pathNode":{"id":3871,"name":"Rounding","nameLocations":["10354:8:21"],"nodeType":"IdentifierPath","referencedDeclaration":3335,"src":"10354:8:21"},"referencedDeclaration":3335,"src":"10354:8:21","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3335","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"10342:30:21"},"returnParameters":{"id":3877,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3876,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3902,"src":"10396:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3875,"name":"uint256","nodeType":"ElementaryTypeName","src":"10396:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10395:9:21"},"scope":4378,"src":"10329:240:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4033,"nodeType":"Block","src":"10760:922:21","statements":[{"assignments":[3911],"declarations":[{"constant":false,"id":3911,"mutability":"mutable","name":"result","nameLocation":"10778:6:21","nodeType":"VariableDeclaration","scope":4033,"src":"10770:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3910,"name":"uint256","nodeType":"ElementaryTypeName","src":"10770:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3913,"initialValue":{"hexValue":"30","id":3912,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10787:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10770:18:21"},{"id":4030,"nodeType":"UncheckedBlock","src":"10798:855:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3918,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3916,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3914,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3905,"src":"10826:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":3915,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10835:3:21","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"10826:12:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3917,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10841:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10826:16:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3928,"nodeType":"IfStatement","src":"10822:99:21","trueBody":{"id":3927,"nodeType":"Block","src":"10844:77:21","statements":[{"expression":{"id":3921,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3919,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3905,"src":"10862:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":3920,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10872:3:21","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"10862:13:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3922,"nodeType":"ExpressionStatement","src":"10862:13:21"},{"expression":{"id":3925,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3923,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3911,"src":"10893:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"313238","id":3924,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10903:3:21","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"10893:13:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3926,"nodeType":"ExpressionStatement","src":"10893:13:21"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3933,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3931,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3929,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3905,"src":"10938:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":3930,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10947:2:21","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10938:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3932,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10952:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10938:15:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3943,"nodeType":"IfStatement","src":"10934:96:21","trueBody":{"id":3942,"nodeType":"Block","src":"10955:75:21","statements":[{"expression":{"id":3936,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3934,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3905,"src":"10973:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":3935,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10983:2:21","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10973:12:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3937,"nodeType":"ExpressionStatement","src":"10973:12:21"},{"expression":{"id":3940,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3938,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3911,"src":"11003:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":3939,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11013:2:21","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"11003:12:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3941,"nodeType":"ExpressionStatement","src":"11003:12:21"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3948,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3946,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3944,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3905,"src":"11047:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":3945,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11056:2:21","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"11047:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3947,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11061:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11047:15:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3958,"nodeType":"IfStatement","src":"11043:96:21","trueBody":{"id":3957,"nodeType":"Block","src":"11064:75:21","statements":[{"expression":{"id":3951,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3949,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3905,"src":"11082:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":3950,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11092:2:21","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"11082:12:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3952,"nodeType":"ExpressionStatement","src":"11082:12:21"},{"expression":{"id":3955,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3953,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3911,"src":"11112:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":3954,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11122:2:21","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"11112:12:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3956,"nodeType":"ExpressionStatement","src":"11112:12:21"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3963,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3961,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3959,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3905,"src":"11156:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":3960,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11165:2:21","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11156:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3962,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11170:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11156:15:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3973,"nodeType":"IfStatement","src":"11152:96:21","trueBody":{"id":3972,"nodeType":"Block","src":"11173:75:21","statements":[{"expression":{"id":3966,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3964,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3905,"src":"11191:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":3965,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11201:2:21","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11191:12:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3967,"nodeType":"ExpressionStatement","src":"11191:12:21"},{"expression":{"id":3970,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3968,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3911,"src":"11221:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":3969,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11231:2:21","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11221:12:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3971,"nodeType":"ExpressionStatement","src":"11221:12:21"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3978,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3976,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3974,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3905,"src":"11265:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":3975,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11274:1:21","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"11265:10:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3977,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11278:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11265:14:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3988,"nodeType":"IfStatement","src":"11261:93:21","trueBody":{"id":3987,"nodeType":"Block","src":"11281:73:21","statements":[{"expression":{"id":3981,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3979,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3905,"src":"11299:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":3980,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11309:1:21","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"11299:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3982,"nodeType":"ExpressionStatement","src":"11299:11:21"},{"expression":{"id":3985,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3983,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3911,"src":"11328:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":3984,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11338:1:21","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"11328:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3986,"nodeType":"ExpressionStatement","src":"11328:11:21"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3993,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3991,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3989,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3905,"src":"11371:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"34","id":3990,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11380:1:21","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"11371:10:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3992,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11384:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11371:14:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4003,"nodeType":"IfStatement","src":"11367:93:21","trueBody":{"id":4002,"nodeType":"Block","src":"11387:73:21","statements":[{"expression":{"id":3996,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3994,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3905,"src":"11405:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":3995,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11415:1:21","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"11405:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3997,"nodeType":"ExpressionStatement","src":"11405:11:21"},{"expression":{"id":4000,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3998,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3911,"src":"11434:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":3999,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11444:1:21","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"11434:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4001,"nodeType":"ExpressionStatement","src":"11434:11:21"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4008,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4006,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4004,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3905,"src":"11477:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"32","id":4005,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11486:1:21","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"11477:10:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4007,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11490:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11477:14:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4018,"nodeType":"IfStatement","src":"11473:93:21","trueBody":{"id":4017,"nodeType":"Block","src":"11493:73:21","statements":[{"expression":{"id":4011,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4009,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3905,"src":"11511:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"32","id":4010,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11521:1:21","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"11511:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4012,"nodeType":"ExpressionStatement","src":"11511:11:21"},{"expression":{"id":4015,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4013,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3911,"src":"11540:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":4014,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11550:1:21","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"11540:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4016,"nodeType":"ExpressionStatement","src":"11540:11:21"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4023,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4021,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4019,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3905,"src":"11583:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4020,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11592:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"11583:10:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4022,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11596:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11583:14:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4029,"nodeType":"IfStatement","src":"11579:64:21","trueBody":{"id":4028,"nodeType":"Block","src":"11599:44:21","statements":[{"expression":{"id":4026,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4024,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3911,"src":"11617:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":4025,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11627:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"11617:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4027,"nodeType":"ExpressionStatement","src":"11617:11:21"}]}}]},{"expression":{"id":4031,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3911,"src":"11669:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3909,"id":4032,"nodeType":"Return","src":"11662:13:21"}]},"documentation":{"id":3903,"nodeType":"StructuredDocumentation","src":"10575:119:21","text":" @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":4034,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"10708:4:21","nodeType":"FunctionDefinition","parameters":{"id":3906,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3905,"mutability":"mutable","name":"value","nameLocation":"10721:5:21","nodeType":"VariableDeclaration","scope":4034,"src":"10713:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3904,"name":"uint256","nodeType":"ElementaryTypeName","src":"10713:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10712:15:21"},"returnParameters":{"id":3909,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3908,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4034,"src":"10751:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3907,"name":"uint256","nodeType":"ElementaryTypeName","src":"10751:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10750:9:21"},"scope":4378,"src":"10699:983:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4068,"nodeType":"Block","src":"11915:168:21","statements":[{"id":4067,"nodeType":"UncheckedBlock","src":"11925:152:21","statements":[{"assignments":[4046],"declarations":[{"constant":false,"id":4046,"mutability":"mutable","name":"result","nameLocation":"11957:6:21","nodeType":"VariableDeclaration","scope":4067,"src":"11949:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4045,"name":"uint256","nodeType":"ElementaryTypeName","src":"11949:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4050,"initialValue":{"arguments":[{"id":4048,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4037,"src":"11971:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4047,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[4034,4069],"referencedDeclaration":4034,"src":"11966:4:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4049,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11966:11:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11949:28:21"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4065,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4051,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4046,"src":"11998:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4060,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4053,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4040,"src":"12025:8:21","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3335","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3335","typeString":"enum Math.Rounding"}],"id":4052,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4377,"src":"12008:16:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3335_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":4054,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12008:26:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4059,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4057,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4055,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12038:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":4056,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4046,"src":"12043:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12038:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4058,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4037,"src":"12052:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12038:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12008:49:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":4062,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12064:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":4063,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"12008:57:21","trueExpression":{"hexValue":"31","id":4061,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12060:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":4064,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12007:59:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11998:68:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4044,"id":4066,"nodeType":"Return","src":"11991:75:21"}]}]},"documentation":{"id":4035,"nodeType":"StructuredDocumentation","src":"11688:142:21","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":4069,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"11844:4:21","nodeType":"FunctionDefinition","parameters":{"id":4041,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4037,"mutability":"mutable","name":"value","nameLocation":"11857:5:21","nodeType":"VariableDeclaration","scope":4069,"src":"11849:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4036,"name":"uint256","nodeType":"ElementaryTypeName","src":"11849:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4040,"mutability":"mutable","name":"rounding","nameLocation":"11873:8:21","nodeType":"VariableDeclaration","scope":4069,"src":"11864:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3335","typeString":"enum Math.Rounding"},"typeName":{"id":4039,"nodeType":"UserDefinedTypeName","pathNode":{"id":4038,"name":"Rounding","nameLocations":["11864:8:21"],"nodeType":"IdentifierPath","referencedDeclaration":3335,"src":"11864:8:21"},"referencedDeclaration":3335,"src":"11864:8:21","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3335","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"11848:34:21"},"returnParameters":{"id":4044,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4043,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4069,"src":"11906:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4042,"name":"uint256","nodeType":"ElementaryTypeName","src":"11906:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11905:9:21"},"scope":4378,"src":"11835:248:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4197,"nodeType":"Block","src":"12276:854:21","statements":[{"assignments":[4078],"declarations":[{"constant":false,"id":4078,"mutability":"mutable","name":"result","nameLocation":"12294:6:21","nodeType":"VariableDeclaration","scope":4197,"src":"12286:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4077,"name":"uint256","nodeType":"ElementaryTypeName","src":"12286:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4080,"initialValue":{"hexValue":"30","id":4079,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12303:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"12286:18:21"},{"id":4194,"nodeType":"UncheckedBlock","src":"12314:787:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4085,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4081,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4072,"src":"12342:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":4084,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4082,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12351:2:21","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":4083,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12357:2:21","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"12351:8:21","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"12342:17:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4097,"nodeType":"IfStatement","src":"12338:103:21","trueBody":{"id":4096,"nodeType":"Block","src":"12361:80:21","statements":[{"expression":{"id":4090,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4086,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4072,"src":"12379:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":4089,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4087,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12388:2:21","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":4088,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12394:2:21","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"12388:8:21","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"12379:17:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4091,"nodeType":"ExpressionStatement","src":"12379:17:21"},{"expression":{"id":4094,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4092,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4078,"src":"12414:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":4093,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12424:2:21","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"12414:12:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4095,"nodeType":"ExpressionStatement","src":"12414:12:21"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4102,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4098,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4072,"src":"12458:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":4101,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4099,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12467:2:21","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":4100,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12473:2:21","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"12467:8:21","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"12458:17:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4114,"nodeType":"IfStatement","src":"12454:103:21","trueBody":{"id":4113,"nodeType":"Block","src":"12477:80:21","statements":[{"expression":{"id":4107,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4103,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4072,"src":"12495:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":4106,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4104,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12504:2:21","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":4105,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12510:2:21","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"12504:8:21","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"12495:17:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4108,"nodeType":"ExpressionStatement","src":"12495:17:21"},{"expression":{"id":4111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4109,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4078,"src":"12530:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":4110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12540:2:21","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"12530:12:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4112,"nodeType":"ExpressionStatement","src":"12530:12:21"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4119,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4115,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4072,"src":"12574:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":4118,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4116,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12583:2:21","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":4117,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12589:2:21","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12583:8:21","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"12574:17:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4131,"nodeType":"IfStatement","src":"12570:103:21","trueBody":{"id":4130,"nodeType":"Block","src":"12593:80:21","statements":[{"expression":{"id":4124,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4120,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4072,"src":"12611:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":4123,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4121,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12620:2:21","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":4122,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12626:2:21","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12620:8:21","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"12611:17:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4125,"nodeType":"ExpressionStatement","src":"12611:17:21"},{"expression":{"id":4128,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4126,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4078,"src":"12646:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":4127,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12656:2:21","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12646:12:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4129,"nodeType":"ExpressionStatement","src":"12646:12:21"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4136,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4132,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4072,"src":"12690:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":4135,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4133,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12699:2:21","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":4134,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12705:1:21","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12699:7:21","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"12690:16:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4148,"nodeType":"IfStatement","src":"12686:100:21","trueBody":{"id":4147,"nodeType":"Block","src":"12708:78:21","statements":[{"expression":{"id":4141,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4137,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4072,"src":"12726:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":4140,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4138,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12735:2:21","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":4139,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12741:1:21","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12735:7:21","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"12726:16:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4142,"nodeType":"ExpressionStatement","src":"12726:16:21"},{"expression":{"id":4145,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4143,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4078,"src":"12760:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":4144,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12770:1:21","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12760:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4146,"nodeType":"ExpressionStatement","src":"12760:11:21"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4153,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4149,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4072,"src":"12803:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":4152,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4150,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12812:2:21","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":4151,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12818:1:21","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"12812:7:21","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"12803:16:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4165,"nodeType":"IfStatement","src":"12799:100:21","trueBody":{"id":4164,"nodeType":"Block","src":"12821:78:21","statements":[{"expression":{"id":4158,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4154,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4072,"src":"12839:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":4157,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4155,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12848:2:21","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":4156,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12854:1:21","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"12848:7:21","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"12839:16:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4159,"nodeType":"ExpressionStatement","src":"12839:16:21"},{"expression":{"id":4162,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4160,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4078,"src":"12873:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":4161,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12883:1:21","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"12873:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4163,"nodeType":"ExpressionStatement","src":"12873:11:21"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4170,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4166,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4072,"src":"12916:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":4169,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4167,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12925:2:21","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":4168,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12931:1:21","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12925:7:21","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"12916:16:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4182,"nodeType":"IfStatement","src":"12912:100:21","trueBody":{"id":4181,"nodeType":"Block","src":"12934:78:21","statements":[{"expression":{"id":4175,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4171,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4072,"src":"12952:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":4174,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4172,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12961:2:21","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":4173,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12967:1:21","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12961:7:21","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"12952:16:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4176,"nodeType":"ExpressionStatement","src":"12952:16:21"},{"expression":{"id":4179,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4177,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4078,"src":"12986:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":4178,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12996:1:21","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12986:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4180,"nodeType":"ExpressionStatement","src":"12986:11:21"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4187,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4183,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4072,"src":"13029:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":4186,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4184,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13038:2:21","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":4185,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13044:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"13038:7:21","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"13029:16:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4193,"nodeType":"IfStatement","src":"13025:66:21","trueBody":{"id":4192,"nodeType":"Block","src":"13047:44:21","statements":[{"expression":{"id":4190,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4188,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4078,"src":"13065:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":4189,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13075:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"13065:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4191,"nodeType":"ExpressionStatement","src":"13065:11:21"}]}}]},{"expression":{"id":4195,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4078,"src":"13117:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4076,"id":4196,"nodeType":"Return","src":"13110:13:21"}]},"documentation":{"id":4070,"nodeType":"StructuredDocumentation","src":"12089:120:21","text":" @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":4198,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"12223:5:21","nodeType":"FunctionDefinition","parameters":{"id":4073,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4072,"mutability":"mutable","name":"value","nameLocation":"12237:5:21","nodeType":"VariableDeclaration","scope":4198,"src":"12229:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4071,"name":"uint256","nodeType":"ElementaryTypeName","src":"12229:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12228:15:21"},"returnParameters":{"id":4076,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4075,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4198,"src":"12267:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4074,"name":"uint256","nodeType":"ElementaryTypeName","src":"12267:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12266:9:21"},"scope":4378,"src":"12214:916:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4232,"nodeType":"Block","src":"13365:170:21","statements":[{"id":4231,"nodeType":"UncheckedBlock","src":"13375:154:21","statements":[{"assignments":[4210],"declarations":[{"constant":false,"id":4210,"mutability":"mutable","name":"result","nameLocation":"13407:6:21","nodeType":"VariableDeclaration","scope":4231,"src":"13399:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4209,"name":"uint256","nodeType":"ElementaryTypeName","src":"13399:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4214,"initialValue":{"arguments":[{"id":4212,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4201,"src":"13422:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4211,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[4198,4233],"referencedDeclaration":4198,"src":"13416:5:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4213,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13416:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13399:29:21"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4229,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4215,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4210,"src":"13449:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4224,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4217,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4204,"src":"13476:8:21","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3335","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3335","typeString":"enum Math.Rounding"}],"id":4216,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4377,"src":"13459:16:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3335_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":4218,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13459:26:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4223,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4221,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4219,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13489:2:21","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":4220,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4210,"src":"13495:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13489:12:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4222,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4201,"src":"13504:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13489:20:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"13459:50:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":4226,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13516:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":4227,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"13459:58:21","trueExpression":{"hexValue":"31","id":4225,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13512:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":4228,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13458:60:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"13449:69:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4208,"id":4230,"nodeType":"Return","src":"13442:76:21"}]}]},"documentation":{"id":4199,"nodeType":"StructuredDocumentation","src":"13136:143:21","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":4233,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"13293:5:21","nodeType":"FunctionDefinition","parameters":{"id":4205,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4201,"mutability":"mutable","name":"value","nameLocation":"13307:5:21","nodeType":"VariableDeclaration","scope":4233,"src":"13299:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4200,"name":"uint256","nodeType":"ElementaryTypeName","src":"13299:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4204,"mutability":"mutable","name":"rounding","nameLocation":"13323:8:21","nodeType":"VariableDeclaration","scope":4233,"src":"13314:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3335","typeString":"enum Math.Rounding"},"typeName":{"id":4203,"nodeType":"UserDefinedTypeName","pathNode":{"id":4202,"name":"Rounding","nameLocations":["13314:8:21"],"nodeType":"IdentifierPath","referencedDeclaration":3335,"src":"13314:8:21"},"referencedDeclaration":3335,"src":"13314:8:21","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3335","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"13298:34:21"},"returnParameters":{"id":4208,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4207,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4233,"src":"13356:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4206,"name":"uint256","nodeType":"ElementaryTypeName","src":"13356:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13355:9:21"},"scope":4378,"src":"13284:251:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4319,"nodeType":"Block","src":"13855:600:21","statements":[{"assignments":[4242],"declarations":[{"constant":false,"id":4242,"mutability":"mutable","name":"result","nameLocation":"13873:6:21","nodeType":"VariableDeclaration","scope":4319,"src":"13865:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4241,"name":"uint256","nodeType":"ElementaryTypeName","src":"13865:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4244,"initialValue":{"hexValue":"30","id":4243,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13882:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13865:18:21"},{"id":4316,"nodeType":"UncheckedBlock","src":"13893:533:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4249,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4247,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4245,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4236,"src":"13921:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":4246,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13930:3:21","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"13921:12:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4248,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13936:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13921:16:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4259,"nodeType":"IfStatement","src":"13917:98:21","trueBody":{"id":4258,"nodeType":"Block","src":"13939:76:21","statements":[{"expression":{"id":4252,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4250,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4236,"src":"13957:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":4251,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13967:3:21","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"13957:13:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4253,"nodeType":"ExpressionStatement","src":"13957:13:21"},{"expression":{"id":4256,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4254,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4242,"src":"13988:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":4255,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13998:2:21","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"13988:12:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4257,"nodeType":"ExpressionStatement","src":"13988:12:21"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4264,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4262,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4260,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4236,"src":"14032:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":4261,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14041:2:21","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"14032:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4263,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14046:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14032:15:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4274,"nodeType":"IfStatement","src":"14028:95:21","trueBody":{"id":4273,"nodeType":"Block","src":"14049:74:21","statements":[{"expression":{"id":4267,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4265,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4236,"src":"14067:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":4266,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14077:2:21","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"14067:12:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4268,"nodeType":"ExpressionStatement","src":"14067:12:21"},{"expression":{"id":4271,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4269,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4242,"src":"14097:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":4270,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14107:1:21","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"14097:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4272,"nodeType":"ExpressionStatement","src":"14097:11:21"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4279,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4277,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4275,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4236,"src":"14140:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":4276,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14149:2:21","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"14140:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4278,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14154:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14140:15:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4289,"nodeType":"IfStatement","src":"14136:95:21","trueBody":{"id":4288,"nodeType":"Block","src":"14157:74:21","statements":[{"expression":{"id":4282,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4280,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4236,"src":"14175:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":4281,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14185:2:21","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"14175:12:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4283,"nodeType":"ExpressionStatement","src":"14175:12:21"},{"expression":{"id":4286,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4284,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4242,"src":"14205:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":4285,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14215:1:21","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"14205:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4287,"nodeType":"ExpressionStatement","src":"14205:11:21"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4294,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4292,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4290,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4236,"src":"14248:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":4291,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14257:2:21","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"14248:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4293,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14262:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14248:15:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4304,"nodeType":"IfStatement","src":"14244:95:21","trueBody":{"id":4303,"nodeType":"Block","src":"14265:74:21","statements":[{"expression":{"id":4297,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4295,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4236,"src":"14283:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":4296,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14293:2:21","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"14283:12:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4298,"nodeType":"ExpressionStatement","src":"14283:12:21"},{"expression":{"id":4301,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4299,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4242,"src":"14313:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":4300,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14323:1:21","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"14313:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4302,"nodeType":"ExpressionStatement","src":"14313:11:21"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4309,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4307,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4305,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4236,"src":"14356:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":4306,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14365:1:21","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"14356:10:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4308,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14369:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14356:14:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4315,"nodeType":"IfStatement","src":"14352:64:21","trueBody":{"id":4314,"nodeType":"Block","src":"14372:44:21","statements":[{"expression":{"id":4312,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4310,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4242,"src":"14390:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":4311,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14400:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"14390:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4313,"nodeType":"ExpressionStatement","src":"14390:11:21"}]}}]},{"expression":{"id":4317,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4242,"src":"14442:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4240,"id":4318,"nodeType":"Return","src":"14435:13:21"}]},"documentation":{"id":4234,"nodeType":"StructuredDocumentation","src":"13541:246:21","text":" @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":4320,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"13801:6:21","nodeType":"FunctionDefinition","parameters":{"id":4237,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4236,"mutability":"mutable","name":"value","nameLocation":"13816:5:21","nodeType":"VariableDeclaration","scope":4320,"src":"13808:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4235,"name":"uint256","nodeType":"ElementaryTypeName","src":"13808:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13807:15:21"},"returnParameters":{"id":4240,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4239,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4320,"src":"13846:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4238,"name":"uint256","nodeType":"ElementaryTypeName","src":"13846:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13845:9:21"},"scope":4378,"src":"13792:663:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4357,"nodeType":"Block","src":"14692:177:21","statements":[{"id":4356,"nodeType":"UncheckedBlock","src":"14702:161:21","statements":[{"assignments":[4332],"declarations":[{"constant":false,"id":4332,"mutability":"mutable","name":"result","nameLocation":"14734:6:21","nodeType":"VariableDeclaration","scope":4356,"src":"14726:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4331,"name":"uint256","nodeType":"ElementaryTypeName","src":"14726:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4336,"initialValue":{"arguments":[{"id":4334,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4323,"src":"14750:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4333,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[4320,4358],"referencedDeclaration":4320,"src":"14743:6:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4335,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14743:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"14726:30:21"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4354,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4337,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4332,"src":"14777:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4349,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4339,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4326,"src":"14804:8:21","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3335","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3335","typeString":"enum Math.Rounding"}],"id":4338,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4377,"src":"14787:16:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3335_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":4340,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14787:26:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4348,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4346,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4341,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14817:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4344,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4342,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4332,"src":"14823:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":4343,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14833:1:21","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"14823:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4345,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"14822:13:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14817:18:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4347,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4323,"src":"14838:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14817:26:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"14787:56:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":4351,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14850:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":4352,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"14787:64:21","trueExpression":{"hexValue":"31","id":4350,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14846:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":4353,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"14786:66:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"14777:75:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4330,"id":4355,"nodeType":"Return","src":"14770:82:21"}]}]},"documentation":{"id":4321,"nodeType":"StructuredDocumentation","src":"14461:144:21","text":" @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":4358,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"14619:6:21","nodeType":"FunctionDefinition","parameters":{"id":4327,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4323,"mutability":"mutable","name":"value","nameLocation":"14634:5:21","nodeType":"VariableDeclaration","scope":4358,"src":"14626:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4322,"name":"uint256","nodeType":"ElementaryTypeName","src":"14626:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4326,"mutability":"mutable","name":"rounding","nameLocation":"14650:8:21","nodeType":"VariableDeclaration","scope":4358,"src":"14641:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3335","typeString":"enum Math.Rounding"},"typeName":{"id":4325,"nodeType":"UserDefinedTypeName","pathNode":{"id":4324,"name":"Rounding","nameLocations":["14641:8:21"],"nodeType":"IdentifierPath","referencedDeclaration":3335,"src":"14641:8:21"},"referencedDeclaration":3335,"src":"14641:8:21","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3335","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"14625:34:21"},"returnParameters":{"id":4330,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4329,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4358,"src":"14683:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4328,"name":"uint256","nodeType":"ElementaryTypeName","src":"14683:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14682:9:21"},"scope":4378,"src":"14610:259:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4376,"nodeType":"Block","src":"15067:48:21","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":4374,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":4372,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4369,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4362,"src":"15090:8:21","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3335","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3335","typeString":"enum Math.Rounding"}],"id":4368,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15084:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":4367,"name":"uint8","nodeType":"ElementaryTypeName","src":"15084:5:21","typeDescriptions":{}}},"id":4370,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15084:15:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"32","id":4371,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15102:1:21","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"15084:19:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":4373,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15107:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"15084:24:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4366,"id":4375,"nodeType":"Return","src":"15077:31:21"}]},"documentation":{"id":4359,"nodeType":"StructuredDocumentation","src":"14875:113:21","text":" @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."},"id":4377,"implemented":true,"kind":"function","modifiers":[],"name":"unsignedRoundsUp","nameLocation":"15002:16:21","nodeType":"FunctionDefinition","parameters":{"id":4363,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4362,"mutability":"mutable","name":"rounding","nameLocation":"15028:8:21","nodeType":"VariableDeclaration","scope":4377,"src":"15019:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3335","typeString":"enum Math.Rounding"},"typeName":{"id":4361,"nodeType":"UserDefinedTypeName","pathNode":{"id":4360,"name":"Rounding","nameLocations":["15019:8:21"],"nodeType":"IdentifierPath","referencedDeclaration":3335,"src":"15019:8:21"},"referencedDeclaration":3335,"src":"15019:8:21","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3335","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"15018:19:21"},"returnParameters":{"id":4366,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4365,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4377,"src":"15061:4:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4364,"name":"bool","nodeType":"ElementaryTypeName","src":"15061:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"15060:6:21"},"scope":4378,"src":"14993:122:21","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":4379,"src":"203:14914:21","usedErrors":[3330],"usedEvents":[]}],"src":"103:15015:21"},"id":21},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","exportedSymbols":{"SignedMath":[4483]},"id":4484,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4380,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:22"},{"abstract":false,"baseContracts":[],"canonicalName":"SignedMath","contractDependencies":[],"contractKind":"library","documentation":{"id":4381,"nodeType":"StructuredDocumentation","src":"135:80:22","text":" @dev Standard signed math utilities missing in the Solidity language."},"fullyImplemented":true,"id":4483,"linearizedBaseContracts":[4483],"name":"SignedMath","nameLocation":"224:10:22","nodeType":"ContractDefinition","nodes":[{"body":{"id":4398,"nodeType":"Block","src":"376:37:22","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4393,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4391,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4384,"src":"393:1:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":4392,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4386,"src":"397:1:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"393:5:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":4395,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4386,"src":"405:1:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":4396,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"393:13:22","trueExpression":{"id":4394,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4384,"src":"401:1:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":4390,"id":4397,"nodeType":"Return","src":"386:20:22"}]},"documentation":{"id":4382,"nodeType":"StructuredDocumentation","src":"241:66:22","text":" @dev Returns the largest of two signed numbers."},"id":4399,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"321:3:22","nodeType":"FunctionDefinition","parameters":{"id":4387,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4384,"mutability":"mutable","name":"a","nameLocation":"332:1:22","nodeType":"VariableDeclaration","scope":4399,"src":"325:8:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4383,"name":"int256","nodeType":"ElementaryTypeName","src":"325:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":4386,"mutability":"mutable","name":"b","nameLocation":"342:1:22","nodeType":"VariableDeclaration","scope":4399,"src":"335:8:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4385,"name":"int256","nodeType":"ElementaryTypeName","src":"335:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"324:20:22"},"returnParameters":{"id":4390,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4389,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4399,"src":"368:6:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4388,"name":"int256","nodeType":"ElementaryTypeName","src":"368:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"367:8:22"},"scope":4483,"src":"312:101:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4416,"nodeType":"Block","src":"555:37:22","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4411,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4409,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4402,"src":"572:1:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4410,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4404,"src":"576:1:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"572:5:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":4413,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4404,"src":"584:1:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":4414,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"572:13:22","trueExpression":{"id":4412,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4402,"src":"580:1:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":4408,"id":4415,"nodeType":"Return","src":"565:20:22"}]},"documentation":{"id":4400,"nodeType":"StructuredDocumentation","src":"419:67:22","text":" @dev Returns the smallest of two signed numbers."},"id":4417,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"500:3:22","nodeType":"FunctionDefinition","parameters":{"id":4405,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4402,"mutability":"mutable","name":"a","nameLocation":"511:1:22","nodeType":"VariableDeclaration","scope":4417,"src":"504:8:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4401,"name":"int256","nodeType":"ElementaryTypeName","src":"504:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":4404,"mutability":"mutable","name":"b","nameLocation":"521:1:22","nodeType":"VariableDeclaration","scope":4417,"src":"514:8:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4403,"name":"int256","nodeType":"ElementaryTypeName","src":"514:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"503:20:22"},"returnParameters":{"id":4408,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4407,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4417,"src":"547:6:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4406,"name":"int256","nodeType":"ElementaryTypeName","src":"547:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"546:8:22"},"scope":4483,"src":"491:101:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4460,"nodeType":"Block","src":"797:162:22","statements":[{"assignments":[4428],"declarations":[{"constant":false,"id":4428,"mutability":"mutable","name":"x","nameLocation":"866:1:22","nodeType":"VariableDeclaration","scope":4460,"src":"859:8:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4427,"name":"int256","nodeType":"ElementaryTypeName","src":"859:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":4441,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4440,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4431,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4429,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4420,"src":"871:1:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":4430,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4422,"src":"875:1:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"871:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":4432,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"870:7:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4438,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4435,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4433,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4420,"src":"882:1:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":4434,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4422,"src":"886:1:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"882:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":4436,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"881:7:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4437,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"892:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"881:12:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":4439,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"880:14:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"870:24:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"859:35:22"},{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4458,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4442,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4428,"src":"911:1:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4456,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4450,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4447,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4428,"src":"931:1:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4446,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"923:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4445,"name":"uint256","nodeType":"ElementaryTypeName","src":"923:7:22","typeDescriptions":{}}},"id":4448,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"923:10:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":4449,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"937:3:22","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"923:17:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4444,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"916:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":4443,"name":"int256","nodeType":"ElementaryTypeName","src":"916:6:22","typeDescriptions":{}}},"id":4451,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"916:25:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4454,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4452,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4420,"src":"945:1:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":4453,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4422,"src":"949:1:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"945:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":4455,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"944:7:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"916:35:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":4457,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"915:37:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"911:41:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":4426,"id":4459,"nodeType":"Return","src":"904:48:22"}]},"documentation":{"id":4418,"nodeType":"StructuredDocumentation","src":"598:126:22","text":" @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."},"id":4461,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"738:7:22","nodeType":"FunctionDefinition","parameters":{"id":4423,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4420,"mutability":"mutable","name":"a","nameLocation":"753:1:22","nodeType":"VariableDeclaration","scope":4461,"src":"746:8:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4419,"name":"int256","nodeType":"ElementaryTypeName","src":"746:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":4422,"mutability":"mutable","name":"b","nameLocation":"763:1:22","nodeType":"VariableDeclaration","scope":4461,"src":"756:8:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4421,"name":"int256","nodeType":"ElementaryTypeName","src":"756:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"745:20:22"},"returnParameters":{"id":4426,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4425,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4461,"src":"789:6:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4424,"name":"int256","nodeType":"ElementaryTypeName","src":"789:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"788:8:22"},"scope":4483,"src":"729:230:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4481,"nodeType":"Block","src":"1103:158:22","statements":[{"id":4480,"nodeType":"UncheckedBlock","src":"1113:142:22","statements":[{"expression":{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4473,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4471,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4464,"src":"1228:1:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"30","id":4472,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1233:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1228:6:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":4476,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"1241:2:22","subExpression":{"id":4475,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4464,"src":"1242:1:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":4477,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1228:15:22","trueExpression":{"id":4474,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4464,"src":"1237:1:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4470,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1220:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4469,"name":"uint256","nodeType":"ElementaryTypeName","src":"1220:7:22","typeDescriptions":{}}},"id":4478,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1220:24:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4468,"id":4479,"nodeType":"Return","src":"1213:31:22"}]}]},"documentation":{"id":4462,"nodeType":"StructuredDocumentation","src":"965:78:22","text":" @dev Returns the absolute unsigned value of a signed value."},"id":4482,"implemented":true,"kind":"function","modifiers":[],"name":"abs","nameLocation":"1057:3:22","nodeType":"FunctionDefinition","parameters":{"id":4465,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4464,"mutability":"mutable","name":"n","nameLocation":"1068:1:22","nodeType":"VariableDeclaration","scope":4482,"src":"1061:8:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4463,"name":"int256","nodeType":"ElementaryTypeName","src":"1061:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1060:10:22"},"returnParameters":{"id":4468,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4467,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4482,"src":"1094:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4466,"name":"uint256","nodeType":"ElementaryTypeName","src":"1094:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1093:9:22"},"scope":4483,"src":"1048:213:22","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":4484,"src":"216:1047:22","usedErrors":[],"usedEvents":[]}],"src":"109:1155:22"},"id":22},"contracts/MoCoKoV1.sol":{"ast":{"absolutePath":"contracts/MoCoKoV1.sol","exportedSymbols":{"ContextUpgradeable":[1655],"ECDSA":[3250],"EIP712Upgradeable":[2286],"ERC20BurnableUpgradeable":[1127],"ERC20FlashMintUpgradeable":[1387],"ERC20PausableUpgradeable":[1440],"ERC20PermitUpgradeable":[1609],"ERC20Upgradeable":[1065],"IERC20":[2585],"IERC20Errors":[2412],"IERC20Metadata":[2611],"IERC20Permit":[2647],"IERC3156FlashBorrower":[2306],"IERC3156FlashLender":[2345],"Initializable":[448],"MoCoKoV1":[4599],"NoncesUpgradeable":[1766],"OwnableUpgradeable":[194],"PausableUpgradeable":[1942]},"id":4600,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4485,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"81:24:23"},{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol","file":"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol","id":4486,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4600,"sourceUnit":1066,"src":"107:78:23","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol","id":4487,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4600,"sourceUnit":1128,"src":"186:97:23","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PausableUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PausableUpgradeable.sol","id":4488,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4600,"sourceUnit":1441,"src":"284:97:23","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol","id":4489,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4600,"sourceUnit":195,"src":"382:75:23","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PermitUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PermitUpgradeable.sol","id":4490,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4600,"sourceUnit":1610,"src":"458:95:23","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20FlashMintUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20FlashMintUpgradeable.sol","id":4491,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4600,"sourceUnit":1388,"src":"554:98:23","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","id":4492,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4600,"sourceUnit":449,"src":"653:75:23","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":4493,"name":"Initializable","nameLocations":["751:13:23"],"nodeType":"IdentifierPath","referencedDeclaration":448,"src":"751:13:23"},"id":4494,"nodeType":"InheritanceSpecifier","src":"751:13:23"},{"baseName":{"id":4495,"name":"ERC20Upgradeable","nameLocations":["766:16:23"],"nodeType":"IdentifierPath","referencedDeclaration":1065,"src":"766:16:23"},"id":4496,"nodeType":"InheritanceSpecifier","src":"766:16:23"},{"baseName":{"id":4497,"name":"ERC20BurnableUpgradeable","nameLocations":["784:24:23"],"nodeType":"IdentifierPath","referencedDeclaration":1127,"src":"784:24:23"},"id":4498,"nodeType":"InheritanceSpecifier","src":"784:24:23"},{"baseName":{"id":4499,"name":"ERC20PausableUpgradeable","nameLocations":["810:24:23"],"nodeType":"IdentifierPath","referencedDeclaration":1440,"src":"810:24:23"},"id":4500,"nodeType":"InheritanceSpecifier","src":"810:24:23"},{"baseName":{"id":4501,"name":"OwnableUpgradeable","nameLocations":["836:18:23"],"nodeType":"IdentifierPath","referencedDeclaration":194,"src":"836:18:23"},"id":4502,"nodeType":"InheritanceSpecifier","src":"836:18:23"},{"baseName":{"id":4503,"name":"ERC20PermitUpgradeable","nameLocations":["856:22:23"],"nodeType":"IdentifierPath","referencedDeclaration":1609,"src":"856:22:23"},"id":4504,"nodeType":"InheritanceSpecifier","src":"856:22:23"},{"baseName":{"id":4505,"name":"ERC20FlashMintUpgradeable","nameLocations":["880:25:23"],"nodeType":"IdentifierPath","referencedDeclaration":1387,"src":"880:25:23"},"id":4506,"nodeType":"InheritanceSpecifier","src":"880:25:23"}],"canonicalName":"MoCoKoV1","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":4599,"linearizedBaseContracts":[4599,1387,2345,1609,1766,2286,2370,2647,194,1440,1942,1127,1065,2412,2611,2585,1655,448],"name":"MoCoKoV1","nameLocation":"739:8:23","nodeType":"ContractDefinition","nodes":[{"body":{"id":4513,"nodeType":"Block","src":"979:39:23","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":4510,"name":"_disableInitializers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":416,"src":"989:20:23","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":4511,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"989:22:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4512,"nodeType":"ExpressionStatement","src":"989:22:23"}]},"documentation":{"id":4507,"nodeType":"StructuredDocumentation","src":"912:48:23","text":"@custom:oz-upgrades-unsafe-allow constructor"},"id":4514,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":4508,"nodeType":"ParameterList","parameters":[],"src":"976:2:23"},"returnParameters":{"id":4509,"nodeType":"ParameterList","parameters":[],"src":"979:0:23"},"scope":4599,"src":"965:53:23","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":4543,"nodeType":"Block","src":"1085:219:23","statements":[{"expression":{"arguments":[{"hexValue":"4d6f436f4b6f","id":4522,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1108:8:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_eeb92a078cce9566e9743164cac8af283727c1276ddc323980e8b9264d023462","typeString":"literal_string \"MoCoKo\""},"value":"MoCoKo"},{"hexValue":"4d434b","id":4523,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1118:5:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_9c3aa7d11ecb9affb5001de98d930d23db7380c6f51732a92986229c98447bc4","typeString":"literal_string \"MCK\""},"value":"MCK"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_eeb92a078cce9566e9743164cac8af283727c1276ddc323980e8b9264d023462","typeString":"literal_string \"MoCoKo\""},{"typeIdentifier":"t_stringliteral_9c3aa7d11ecb9affb5001de98d930d23db7380c6f51732a92986229c98447bc4","typeString":"literal_string \"MCK\""}],"id":4521,"name":"__ERC20_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":516,"src":"1095:12:23","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory,string memory)"}},"id":4524,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1095:29:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4525,"nodeType":"ExpressionStatement","src":"1095:29:23"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":4526,"name":"__ERC20Burnable_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1086,"src":"1134:20:23","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":4527,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1134:22:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4528,"nodeType":"ExpressionStatement","src":"1134:22:23"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":4529,"name":"__ERC20Pausable_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1411,"src":"1166:20:23","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":4530,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1166:22:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4531,"nodeType":"ExpressionStatement","src":"1166:22:23"},{"expression":{"arguments":[{"id":4533,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4516,"src":"1213:12:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4532,"name":"__Ownable_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":54,"src":"1198:14:23","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":4534,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1198:28:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4535,"nodeType":"ExpressionStatement","src":"1198:28:23"},{"expression":{"arguments":[{"hexValue":"4d6f436f4b6f","id":4537,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1255:8:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_eeb92a078cce9566e9743164cac8af283727c1276ddc323980e8b9264d023462","typeString":"literal_string \"MoCoKo\""},"value":"MoCoKo"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_eeb92a078cce9566e9743164cac8af283727c1276ddc323980e8b9264d023462","typeString":"literal_string \"MoCoKo\""}],"id":4536,"name":"__ERC20Permit_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1496,"src":"1236:18:23","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory)"}},"id":4538,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1236:28:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4539,"nodeType":"ExpressionStatement","src":"1236:28:23"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":4540,"name":"__ERC20FlashMint_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1170,"src":"1274:21:23","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":4541,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1274:23:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4542,"nodeType":"ExpressionStatement","src":"1274:23:23"}]},"functionSelector":"c4d66de8","id":4544,"implemented":true,"kind":"function","modifiers":[{"id":4519,"kind":"modifierInvocation","modifierName":{"id":4518,"name":"initializer","nameLocations":["1066:11:23"],"nodeType":"IdentifierPath","referencedDeclaration":302,"src":"1066:11:23"},"nodeType":"ModifierInvocation","src":"1066:11:23"}],"name":"initialize","nameLocation":"1033:10:23","nodeType":"FunctionDefinition","parameters":{"id":4517,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4516,"mutability":"mutable","name":"initialOwner","nameLocation":"1052:12:23","nodeType":"VariableDeclaration","scope":4544,"src":"1044:20:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4515,"name":"address","nodeType":"ElementaryTypeName","src":"1044:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1043:22:23"},"returnParameters":{"id":4520,"nodeType":"ParameterList","parameters":[],"src":"1085:0:23"},"scope":4599,"src":"1024:280:23","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":4552,"nodeType":"Block","src":"1344:25:23","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":4549,"name":"_pause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1917,"src":"1354:6:23","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":4550,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1354:8:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4551,"nodeType":"ExpressionStatement","src":"1354:8:23"}]},"functionSelector":"8456cb59","id":4553,"implemented":true,"kind":"function","modifiers":[{"id":4547,"kind":"modifierInvocation","modifierName":{"id":4546,"name":"onlyOwner","nameLocations":["1334:9:23"],"nodeType":"IdentifierPath","referencedDeclaration":89,"src":"1334:9:23"},"nodeType":"ModifierInvocation","src":"1334:9:23"}],"name":"pause","nameLocation":"1319:5:23","nodeType":"FunctionDefinition","parameters":{"id":4545,"nodeType":"ParameterList","parameters":[],"src":"1324:2:23"},"returnParameters":{"id":4548,"nodeType":"ParameterList","parameters":[],"src":"1344:0:23"},"scope":4599,"src":"1310:59:23","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":4561,"nodeType":"Block","src":"1411:27:23","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":4558,"name":"_unpause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1941,"src":"1421:8:23","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":4559,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1421:10:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4560,"nodeType":"ExpressionStatement","src":"1421:10:23"}]},"functionSelector":"3f4ba83a","id":4562,"implemented":true,"kind":"function","modifiers":[{"id":4556,"kind":"modifierInvocation","modifierName":{"id":4555,"name":"onlyOwner","nameLocations":["1401:9:23"],"nodeType":"IdentifierPath","referencedDeclaration":89,"src":"1401:9:23"},"nodeType":"ModifierInvocation","src":"1401:9:23"}],"name":"unpause","nameLocation":"1384:7:23","nodeType":"FunctionDefinition","parameters":{"id":4554,"nodeType":"ParameterList","parameters":[],"src":"1391:2:23"},"returnParameters":{"id":4557,"nodeType":"ParameterList","parameters":[],"src":"1411:0:23"},"scope":4599,"src":"1375:63:23","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":4576,"nodeType":"Block","src":"1503:34:23","statements":[{"expression":{"arguments":[{"id":4572,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4564,"src":"1519:2:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4573,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4566,"src":"1523:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4571,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":897,"src":"1513:5:23","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":4574,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1513:17:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4575,"nodeType":"ExpressionStatement","src":"1513:17:23"}]},"functionSelector":"40c10f19","id":4577,"implemented":true,"kind":"function","modifiers":[{"id":4569,"kind":"modifierInvocation","modifierName":{"id":4568,"name":"onlyOwner","nameLocations":["1493:9:23"],"nodeType":"IdentifierPath","referencedDeclaration":89,"src":"1493:9:23"},"nodeType":"ModifierInvocation","src":"1493:9:23"}],"name":"mint","nameLocation":"1453:4:23","nodeType":"FunctionDefinition","parameters":{"id":4567,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4564,"mutability":"mutable","name":"to","nameLocation":"1466:2:23","nodeType":"VariableDeclaration","scope":4577,"src":"1458:10:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4563,"name":"address","nodeType":"ElementaryTypeName","src":"1458:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4566,"mutability":"mutable","name":"amount","nameLocation":"1478:6:23","nodeType":"VariableDeclaration","scope":4577,"src":"1470:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4565,"name":"uint256","nodeType":"ElementaryTypeName","src":"1470:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1457:28:23"},"returnParameters":{"id":4570,"nodeType":"ParameterList","parameters":[],"src":"1503:0:23"},"scope":4599,"src":"1444:93:23","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[864,1439],"body":{"id":4597,"nodeType":"Block","src":"1751:47:23","statements":[{"expression":{"arguments":[{"id":4592,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4579,"src":"1775:4:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4593,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4581,"src":"1781:2:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4594,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4583,"src":"1785:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4589,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1761:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_MoCoKoV1_$4599_$","typeString":"type(contract super MoCoKoV1)"}},"id":4591,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1767:7:23","memberName":"_update","nodeType":"MemberAccess","referencedDeclaration":1439,"src":"1761:13:23","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":4595,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1761:30:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4596,"nodeType":"ExpressionStatement","src":"1761:30:23"}]},"id":4598,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"1620:7:23","nodeType":"FunctionDefinition","overrides":{"id":4587,"nodeType":"OverrideSpecifier","overrides":[{"id":4585,"name":"ERC20Upgradeable","nameLocations":["1703:16:23"],"nodeType":"IdentifierPath","referencedDeclaration":1065,"src":"1703:16:23"},{"id":4586,"name":"ERC20PausableUpgradeable","nameLocations":["1721:24:23"],"nodeType":"IdentifierPath","referencedDeclaration":1440,"src":"1721:24:23"}],"src":"1694:52:23"},"parameters":{"id":4584,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4579,"mutability":"mutable","name":"from","nameLocation":"1636:4:23","nodeType":"VariableDeclaration","scope":4598,"src":"1628:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4578,"name":"address","nodeType":"ElementaryTypeName","src":"1628:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4581,"mutability":"mutable","name":"to","nameLocation":"1650:2:23","nodeType":"VariableDeclaration","scope":4598,"src":"1642:10:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4580,"name":"address","nodeType":"ElementaryTypeName","src":"1642:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4583,"mutability":"mutable","name":"value","nameLocation":"1662:5:23","nodeType":"VariableDeclaration","scope":4598,"src":"1654:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4582,"name":"uint256","nodeType":"ElementaryTypeName","src":"1654:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1627:41:23"},"returnParameters":{"id":4588,"nodeType":"ParameterList","parameters":[],"src":"1751:0:23"},"scope":4599,"src":"1611:187:23","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":4600,"src":"730:1070:23","usedErrors":[30,35,211,214,1154,1159,1164,1475,1482,1669,1805,1808,2382,2387,2392,2401,2406,2411,2913,2918,2923],"usedEvents":[41,219,1797,1802,2350,2519,2528]}],"src":"81:1720:23"},"id":23}},"contracts":{"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol":{"OwnableUpgradeable":{"abi":[{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":\"OwnableUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9706d43a0124053d9880f6e31a59f31bc0a6a3dc1acd66ce0a16e1111658c5f6\",\"dweb:/ipfs/QmUFmfowzkRwGtDu36cXV9SPTBHJ3n7dG9xQiK5B28jTf2\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"Initializable":{"abi":[{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor constructor() {     _disableInitializers(); } ``` ====\",\"details\":\"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\\\"MyToken\\\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":{"ERC20Upgradeable":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":\"ERC20Upgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":{\"keccak256\":\"0x9a1766b1921bf91b3e61eb53c7a6e70725254befd4bdcbbcd3af40bd9f66856f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://29bf2fa41a172086a665c9738377b93655aa4b1ffda9fe839c8bdf646f185040\",\"dweb:/ipfs/QmeB21qDuo8WPQSrqXJbQmWHKsdeocGNSUWLhCwniVejrt\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol":{"ERC20BurnableUpgradeable":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"}],"name":"burn","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"burnFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","burn(uint256)":"42966c68","burnFrom(address,uint256)":"79cc6790","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension of {ERC20} that allows token holders to destroy both their own tokens and those that they have an allowance for, in a way that can be recognized off-chain (via event analysis).\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol\":\"ERC20BurnableUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":{\"keccak256\":\"0x9a1766b1921bf91b3e61eb53c7a6e70725254befd4bdcbbcd3af40bd9f66856f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://29bf2fa41a172086a665c9738377b93655aa4b1ffda9fe839c8bdf646f185040\",\"dweb:/ipfs/QmeB21qDuo8WPQSrqXJbQmWHKsdeocGNSUWLhCwniVejrt\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol\":{\"keccak256\":\"0xe74dd150d031e8ecf9755893a2aae02dec954158140424f11c28ff689a48492f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://554e0934aecff6725e10d4aeb2e70ff214384b68782b1ba9f9322a0d16105a2f\",\"dweb:/ipfs/QmVvmHc7xPftEkWvJRNAqv7mXihKLEAVXpiebG7RT5rhMW\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20FlashMintUpgradeable.sol":{"ERC20FlashMintUpgradeable":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"inputs":[{"internalType":"uint256","name":"maxLoan","type":"uint256"}],"name":"ERC3156ExceededMaxLoan","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC3156InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"name":"ERC3156UnsupportedToken","type":"error"},{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"flashFee","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"contract IERC3156FlashBorrower","name":"receiver","type":"address"},{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"flashLoan","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"name":"maxFlashLoan","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","flashFee(address,uint256)":"d9d98ce4","flashLoan(address,address,uint256,bytes)":"5cffe9de","maxFlashLoan(address)":"613255ab","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"maxLoan\",\"type\":\"uint256\"}],\"name\":\"ERC3156ExceededMaxLoan\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC3156InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"ERC3156UnsupportedToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"flashFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC3156FlashBorrower\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"flashLoan\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"maxFlashLoan\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the ERC3156 Flash loans extension, as defined in https://eips.ethereum.org/EIPS/eip-3156[ERC-3156]. Adds the {flashLoan} method, which provides flash loan support at the token level. By default there is no fee, but this can be changed by overriding {flashFee}. NOTE: When this extension is used along with the {ERC20Capped} or {ERC20Votes} extensions, {maxFlashLoan} will not correctly reflect the maximum that can be flash minted. We recommend overriding {maxFlashLoan} so that it correctly reflects the supply cap.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC3156ExceededMaxLoan(uint256)\":[{\"details\":\"The requested loan exceeds the max loan value for `token`.\"}],\"ERC3156InvalidReceiver(address)\":[{\"details\":\"The receiver of a flashloan is not a valid {onFlashLoan} implementer.\"}],\"ERC3156UnsupportedToken(address)\":[{\"details\":\"The loan token is not valid.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"flashFee(address,uint256)\":{\"details\":\"Returns the fee applied when doing flash loans. This function calls the {_flashFee} function which returns the fee applied when doing flash loans.\",\"params\":{\"token\":\"The token to be flash loaned.\",\"value\":\"The amount of tokens to be loaned.\"},\"returns\":{\"_0\":\"The fees applied to the corresponding flash loan.\"}},\"flashLoan(address,address,uint256,bytes)\":{\"details\":\"Performs a flash loan. New tokens are minted and sent to the `receiver`, who is required to implement the {IERC3156FlashBorrower} interface. By the end of the flash loan, the receiver is expected to own value + fee tokens and have them approved back to the token contract itself so they can be burned.\",\"params\":{\"data\":\"An arbitrary datafield that is passed to the receiver.\",\"receiver\":\"The receiver of the flash loan. Should implement the {IERC3156FlashBorrower-onFlashLoan} interface.\",\"token\":\"The token to be flash loaned. Only `address(this)` is supported.\",\"value\":\"The amount of tokens to be loaned.\"},\"returns\":{\"_0\":\"`true` if the flash loan was successful.\"}},\"maxFlashLoan(address)\":{\"details\":\"Returns the maximum amount of tokens available for loan.\",\"params\":{\"token\":\"The address of the token that is requested.\"},\"returns\":{\"_0\":\"The amount of token that can be loaned. NOTE: This function does not consider any form of supply cap, so in case it's used in a token with a cap like {ERC20Capped}, make sure to override this function to integrate the cap instead of `type(uint256).max`.\"}},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20FlashMintUpgradeable.sol\":\"ERC20FlashMintUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":{\"keccak256\":\"0x9a1766b1921bf91b3e61eb53c7a6e70725254befd4bdcbbcd3af40bd9f66856f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://29bf2fa41a172086a665c9738377b93655aa4b1ffda9fe839c8bdf646f185040\",\"dweb:/ipfs/QmeB21qDuo8WPQSrqXJbQmWHKsdeocGNSUWLhCwniVejrt\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20FlashMintUpgradeable.sol\":{\"keccak256\":\"0x5419ce583668d1ab6a0833923c0f4c3eed93e87edbeca4f833c35bd5b53163bd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c9a241f708d229ac116533a18d8a49b38276a5c96ccda661fbda63e93d5ad23\",\"dweb:/ipfs/QmQBwhTKBfWSR5gxG8LJS4YbfJtUz9e9yQXsLsCkQD8vr9\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"@openzeppelin/contracts/interfaces/IERC3156FlashBorrower.sol\":{\"keccak256\":\"0x9f9e6dba43fe0775c400aa384375f1f503efaf733a40187169fdfc195f5ea6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ff5fe5fac5e4ecbf9fcd34c42b6d58d1af150263dfe07bc6785a59329dd1e475\",\"dweb:/ipfs/QmX1EhNKKL6n6RFrLLAYh6Uf3itkozjSHyGFs9DqwW4Rzy\"]},\"@openzeppelin/contracts/interfaces/IERC3156FlashLender.sol\":{\"keccak256\":\"0x95d9eb59f21e885406d0e28b0510f9e1a0e7b4abe6636b5c966682927c65cfdd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a1cbff4d620ab51abe0c4ede9e4395bae53bcc3a7edd74e0eb08d7bdef155306\",\"dweb:/ipfs/QmQcnBK28GDH4S5uXWqAcdRY1KcusXH4CxAqp87rYLir6n\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PausableUpgradeable.sol":{"ERC20PausableUpgradeable":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"inputs":[],"name":"EnforcedPause","type":"error"},{"inputs":[],"name":"ExpectedPause","type":"error"},{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Paused","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Unpaused","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","paused()":"5c975abb","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC20 token with pausable token transfers, minting and burning. Useful for scenarios such as preventing trades until the end of an evaluation period, or having an emergency switch for freezing all token transfers in the event of a large bug. IMPORTANT: This contract does not include public pause and unpause functions. In addition to inheriting this contract, you must define both functions, invoking the {Pausable-_pause} and {Pausable-_unpause} internal functions, with appropriate access control, e.g. using {AccessControl} or {Ownable}. Not doing so will make the contract pause mechanism of the contract unreachable, and thus unusable.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PausableUpgradeable.sol\":\"ERC20PausableUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":{\"keccak256\":\"0x9a1766b1921bf91b3e61eb53c7a6e70725254befd4bdcbbcd3af40bd9f66856f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://29bf2fa41a172086a665c9738377b93655aa4b1ffda9fe839c8bdf646f185040\",\"dweb:/ipfs/QmeB21qDuo8WPQSrqXJbQmWHKsdeocGNSUWLhCwniVejrt\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PausableUpgradeable.sol\":{\"keccak256\":\"0xf31761e4cd0b20c33a04e8cfa21d3b40f0a18dd26f66f97686f87668ab5ba8f3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8be0ae676c129bb8ee94e32f075f5d017b257c09e02f3ed6c830ec5b9ca6e666\",\"dweb:/ipfs/QmeaPYo4t3XaAK8bbxkjTT3bTKQZHUXVadjysSfz5cuUbX\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":{\"keccak256\":\"0x92915b7f7f642c6be3f65bfd1522feb5d5b6ef25f755f4dbb51df32c868f2f97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://85ad36d5cc7e190e1ee6c94b24659bc3a31396c4c36b6ffa6a509e10661f8007\",\"dweb:/ipfs/QmPFyc4zMh2zo6YWZt25gjm3YdR2hg6wGETaWw256fMmJJ\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PermitUpgradeable.sol":{"ERC20PermitUpgradeable":{"abi":[{"inputs":[],"name":"ECDSAInvalidSignature","type":"error"},{"inputs":[{"internalType":"uint256","name":"length","type":"uint256"}],"name":"ECDSAInvalidSignatureLength","type":"error"},{"inputs":[{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"ECDSAInvalidSignatureS","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"inputs":[{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"ERC2612ExpiredSignature","type":"error"},{"inputs":[{"internalType":"address","name":"signer","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC2612InvalidSigner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"currentNonce","type":"uint256"}],"name":"InvalidAccountNonce","type":"error"},{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","eip712Domain()":"84b0196e","name()":"06fdde03","nonces(address)":"7ecebe00","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"ERC2612ExpiredSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC2612InvalidSigner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentNonce\",\"type\":\"uint256\"}],\"name\":\"InvalidAccountNonce\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.\",\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}],\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC2612ExpiredSignature(uint256)\":[{\"details\":\"Permit deadline has expired.\"}],\"ERC2612InvalidSigner(address,address)\":[{\"details\":\"Mismatched signature.\"}],\"InvalidAccountNonce(address,uint256)\":[{\"details\":\"The nonce used for an `account` is not the expected current nonce.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"},\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"eip712Domain()\":{\"details\":\"See {IERC-5267}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PermitUpgradeable.sol\":\"ERC20PermitUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":{\"keccak256\":\"0x9a1766b1921bf91b3e61eb53c7a6e70725254befd4bdcbbcd3af40bd9f66856f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://29bf2fa41a172086a665c9738377b93655aa4b1ffda9fe839c8bdf646f185040\",\"dweb:/ipfs/QmeB21qDuo8WPQSrqXJbQmWHKsdeocGNSUWLhCwniVejrt\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PermitUpgradeable.sol\":{\"keccak256\":\"0x8a97653aeba40e9f0c2e8df1a1379b29b927b6dc3534040c668e71ad9ae89d88\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e529c294c9d634eb68a1e4aeb66eb8381de5a08ccd2c0bfeebd48a6b28fcff7\",\"dweb:/ipfs/QmWCezuxfZb68nM3Hs6XzQNNiW7VJsymU4sajy2DW1CKbp\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"@openzeppelin/contracts-upgradeable/utils/NoncesUpgradeable.sol\":{\"keccak256\":\"0x778f4a1546a1c6c726ecc8e2348a2789690fb8f26e12bd9d89537669167b79a4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://851d3dfe724e918ff0a064b206e1ef46b27ab0df2aa2c8af976973a22ef59827\",\"dweb:/ipfs/Qmd4wb7zX8ueYhMVBy5PJjfsANK3Ra3pKPN7qQkNsdwGHn\"]},\"@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol\":{\"keccak256\":\"0x85462422a22578744581e012e9aa0a391958cb360288b0b63f29bf0431d70327\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2bc529e2b9b28da5d26da451058250d85afcaa3c5083ee273ac68fa6bf956b78\",\"dweb:/ipfs/Qmd3Aq59ztmoVmHigsaR4YjkXWKERVpjfQ4a2PHk7Ke6Rx\"]},\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xeed0a08b0b091f528356cbc7245891a4c748682d4f6a18055e8e6ca77d12a6cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba80ba06c8e6be852847e4c5f4492cef801feb6558ae09ed705ff2e04ea8b13c\",\"dweb:/ipfs/QmXRJDv3xHLVQCVXg1ZvR35QS9sij5y9NDWYzMfUfAdTHF\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0xba333517a3add42cd35fe877656fc3dfcc9de53baa4f3aabbd6d12a92e4ea435\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ceacff44c0fdc81e48e0e0b1db87a2076d3c1fb497341de077bf1da9f6b406c\",\"dweb:/ipfs/QmRUo1muMRAewxrKQ7TkXUtknyRoR57AyEkoPpiuZQ8FzX\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":{"ContextUpgradeable":{"abi":[{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":\"ContextUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts-upgradeable/utils/NoncesUpgradeable.sol":{"NoncesUpgradeable":{"abi":[{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"currentNonce","type":"uint256"}],"name":"InvalidAccountNonce","type":"error"},{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"nonces(address)":"7ecebe00"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentNonce\",\"type\":\"uint256\"}],\"name\":\"InvalidAccountNonce\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Provides tracking nonces for addresses. Nonces will only increment.\",\"errors\":{\"InvalidAccountNonce(address,uint256)\":[{\"details\":\"The nonce used for an `account` is not the expected current nonce.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{\"nonces(address)\":{\"details\":\"Returns the next unused nonce for an address.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/NoncesUpgradeable.sol\":\"NoncesUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/utils/NoncesUpgradeable.sol\":{\"keccak256\":\"0x778f4a1546a1c6c726ecc8e2348a2789690fb8f26e12bd9d89537669167b79a4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://851d3dfe724e918ff0a064b206e1ef46b27ab0df2aa2c8af976973a22ef59827\",\"dweb:/ipfs/Qmd4wb7zX8ueYhMVBy5PJjfsANK3Ra3pKPN7qQkNsdwGHn\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol":{"PausableUpgradeable":{"abi":[{"inputs":[],"name":"EnforcedPause","type":"error"},{"inputs":[],"name":"ExpectedPause","type":"error"},{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Paused","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Unpaused","type":"event"},{"inputs":[],"name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"paused()":"5c975abb"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"errors\":{\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":\"PausableUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":{\"keccak256\":\"0x92915b7f7f642c6be3f65bfd1522feb5d5b6ef25f755f4dbb51df32c868f2f97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://85ad36d5cc7e190e1ee6c94b24659bc3a31396c4c36b6ffa6a509e10661f8007\",\"dweb:/ipfs/QmPFyc4zMh2zo6YWZt25gjm3YdR2hg6wGETaWw256fMmJJ\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol":{"EIP712Upgradeable":{"abi":[{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"eip712Domain()":"84b0196e"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"https://eips.ethereum.org/EIPS/eip-712[EIP 712] is a standard for hashing and signing of typed structured data. The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to produce the hash of their typed data using a combination of `abi.encode` and `keccak256`. This contract implements the EIP 712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA ({_hashTypedDataV4}). The implementation of the domain separator was designed to be as efficient as possible while still properly updating the chain id to protect against replay attacks on an eventual fork of the chain. NOTE: This contract implements the version of the encoding known as \\\"v4\\\", as implemented by the JSON RPC method https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask]. NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain separator of the implementation contract. This will cause the {_domainSeparatorV4} function to always rebuild the separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"},\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{\"eip712Domain()\":{\"details\":\"See {IERC-5267}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol\":\"EIP712Upgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol\":{\"keccak256\":\"0x85462422a22578744581e012e9aa0a391958cb360288b0b63f29bf0431d70327\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2bc529e2b9b28da5d26da451058250d85afcaa3c5083ee273ac68fa6bf956b78\",\"dweb:/ipfs/Qmd3Aq59ztmoVmHigsaR4YjkXWKERVpjfQ4a2PHk7Ke6Rx\"]},\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0xba333517a3add42cd35fe877656fc3dfcc9de53baa4f3aabbd6d12a92e4ea435\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ceacff44c0fdc81e48e0e0b1db87a2076d3c1fb497341de077bf1da9f6b406c\",\"dweb:/ipfs/QmRUo1muMRAewxrKQ7TkXUtknyRoR57AyEkoPpiuZQ8FzX\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/interfaces/IERC3156FlashBorrower.sol":{"IERC3156FlashBorrower":{"abi":[{"inputs":[{"internalType":"address","name":"initiator","type":"address"},{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"fee","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"onFlashLoan","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"onFlashLoan(address,address,uint256,uint256,bytes)":"23e30c8b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initiator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onFlashLoan\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC3156 FlashBorrower, as defined in https://eips.ethereum.org/EIPS/eip-3156[ERC-3156].\",\"kind\":\"dev\",\"methods\":{\"onFlashLoan(address,address,uint256,uint256,bytes)\":{\"details\":\"Receive a flash loan.\",\"params\":{\"amount\":\"The amount of tokens lent.\",\"data\":\"Arbitrary data structure, intended to contain user-defined parameters.\",\"fee\":\"The additional amount of tokens to repay.\",\"initiator\":\"The initiator of the loan.\",\"token\":\"The loan currency.\"},\"returns\":{\"_0\":\"The keccak256 hash of \\\"ERC3156FlashBorrower.onFlashLoan\\\"\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC3156FlashBorrower.sol\":\"IERC3156FlashBorrower\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC3156FlashBorrower.sol\":{\"keccak256\":\"0x9f9e6dba43fe0775c400aa384375f1f503efaf733a40187169fdfc195f5ea6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ff5fe5fac5e4ecbf9fcd34c42b6d58d1af150263dfe07bc6785a59329dd1e475\",\"dweb:/ipfs/QmX1EhNKKL6n6RFrLLAYh6Uf3itkozjSHyGFs9DqwW4Rzy\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/interfaces/IERC3156FlashLender.sol":{"IERC3156FlashLender":{"abi":[{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"flashFee","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"contract IERC3156FlashBorrower","name":"receiver","type":"address"},{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"flashLoan","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"name":"maxFlashLoan","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"flashFee(address,uint256)":"d9d98ce4","flashLoan(address,address,uint256,bytes)":"5cffe9de","maxFlashLoan(address)":"613255ab"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"flashFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC3156FlashBorrower\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"flashLoan\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"maxFlashLoan\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC3156 FlashLender, as defined in https://eips.ethereum.org/EIPS/eip-3156[ERC-3156].\",\"kind\":\"dev\",\"methods\":{\"flashFee(address,uint256)\":{\"details\":\"The fee to be charged for a given loan.\",\"params\":{\"amount\":\"The amount of tokens lent.\",\"token\":\"The loan currency.\"},\"returns\":{\"_0\":\"The amount of `token` to be charged for the loan, on top of the returned principal.\"}},\"flashLoan(address,address,uint256,bytes)\":{\"details\":\"Initiate a flash loan.\",\"params\":{\"amount\":\"The amount of tokens lent.\",\"data\":\"Arbitrary data structure, intended to contain user-defined parameters.\",\"receiver\":\"The receiver of the tokens in the loan, and the receiver of the callback.\",\"token\":\"The loan currency.\"}},\"maxFlashLoan(address)\":{\"details\":\"The amount of currency available to be lended.\",\"params\":{\"token\":\"The loan currency.\"},\"returns\":{\"_0\":\"The amount of `token` that can be borrowed.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC3156FlashLender.sol\":\"IERC3156FlashLender\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC3156FlashBorrower.sol\":{\"keccak256\":\"0x9f9e6dba43fe0775c400aa384375f1f503efaf733a40187169fdfc195f5ea6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ff5fe5fac5e4ecbf9fcd34c42b6d58d1af150263dfe07bc6785a59329dd1e475\",\"dweb:/ipfs/QmX1EhNKKL6n6RFrLLAYh6Uf3itkozjSHyGFs9DqwW4Rzy\"]},\"@openzeppelin/contracts/interfaces/IERC3156FlashLender.sol\":{\"keccak256\":\"0x95d9eb59f21e885406d0e28b0510f9e1a0e7b4abe6636b5c966682927c65cfdd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a1cbff4d620ab51abe0c4ede9e4395bae53bcc3a7edd74e0eb08d7bdef155306\",\"dweb:/ipfs/QmQcnBK28GDH4S5uXWqAcdRY1KcusXH4CxAqp87rYLir6n\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/interfaces/IERC5267.sol":{"IERC5267":{"abi":[{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"eip712Domain()":"84b0196e"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"}},\"kind\":\"dev\",\"methods\":{\"eip712Domain()\":{\"details\":\"returns the fields and values that describe the domain separator used by this contract for EIP-712 signature.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":\"IERC5267\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"IERC1155Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC1155InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC1155InvalidApprover","type":"error"},{"inputs":[{"internalType":"uint256","name":"idsLength","type":"uint256"},{"internalType":"uint256","name":"valuesLength","type":"uint256"}],"name":"ERC1155InvalidArrayLength","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC1155InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC1155InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC1155InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC1155MissingApprovalForAll","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}},"IERC20Errors":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}},"IERC721Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"IERC20Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol":{"IERC20Permit":{"abi":[{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","nonces(address)":"7ecebe00","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. ==== Security Considerations There are two important considerations concerning the use of `permit`. The first is that a valid permit signature expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be considered as an intention to spend the allowance in any specific way. The second is that because permits have built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be generally recommended is: ```solidity function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}     doThing(..., value); } function doThing(..., uint256 value) public {     token.safeTransferFrom(msg.sender, address(this), value);     ... } ``` Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also {SafeERC20-safeTransferFrom}). Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so contracts should have entry points that don't rely on permit.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":\"IERC20Permit\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/Strings.sol":{"Strings":{"abi":[{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"length","type":"uint256"}],"name":"StringsInsufficientHexLength","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220def6c700362972812669fe56e66090c2a8e18de909bbeaaa236252c6b9a275f664736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDE 0xF6 0xC7 STOP CALLDATASIZE 0x29 PUSH19 0x812669FE56E66090C2A8E18DE909BBEAAA2362 MSTORE 0xC6 0xB9 LOG2 PUSH22 0xF664736F6C6343000814003300000000000000000000 ","sourceMap":"251:2847:18:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220def6c700362972812669fe56e66090c2a8e18de909bbeaaa236252c6b9a275f664736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDE 0xF6 0xC7 STOP CALLDATASIZE 0x29 PUSH19 0x812669FE56E66090C2A8E18DE909BBEAAA2362 MSTORE 0xC6 0xB9 LOG2 PUSH22 0xF664736F6C6343000814003300000000000000000000 ","sourceMap":"251:2847:18:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"ECDSA":{"abi":[{"inputs":[],"name":"ECDSAInvalidSignature","type":"error"},{"inputs":[{"internalType":"uint256","name":"length","type":"uint256"}],"name":"ECDSAInvalidSignatureLength","type":"error"},{"inputs":[{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"ECDSAInvalidSignatureS","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205c2dd3b0bfb87dc5c8cdda90411642948b2f1b22157b65a111fc980003dd4d6264736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5C 0x2D 0xD3 0xB0 0xBF 0xB8 PUSH30 0xC5C8CDDA90411642948B2F1B22157B65A111FC980003DD4D6264736F6C63 NUMBER STOP ADDMOD EQ STOP CALLER ","sourceMap":"344:7386:19:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205c2dd3b0bfb87dc5c8cdda90411642948b2f1b22157b65a111fc980003dd4d6264736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5C 0x2D 0xD3 0xB0 0xBF 0xB8 PUSH30 0xC5C8CDDA90411642948B2F1B22157B65A111FC980003DD4D6264736F6C63 NUMBER STOP ADDMOD EQ STOP CALLER ","sourceMap":"344:7386:19:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Elliptic Curve Digital Signature Algorithm (ECDSA) operations. These functions can be used to verify that a message was signed by the holder of the private keys of a given address.\",\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":\"ECDSA\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xeed0a08b0b091f528356cbc7245891a4c748682d4f6a18055e8e6ca77d12a6cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba80ba06c8e6be852847e4c5f4492cef801feb6558ae09ed705ff2e04ea8b13c\",\"dweb:/ipfs/QmXRJDv3xHLVQCVXg1ZvR35QS9sij5y9NDWYzMfUfAdTHF\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol":{"MessageHashUtils":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212207712b062d76803d4ad28ee3f5795f2f704585b62e28a7c168984142f1dbaae1464736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH24 0x12B062D76803D4AD28EE3F5795F2F704585B62E28A7C1689 DUP5 EQ 0x2F SAR 0xBA 0xAE EQ PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"521:3235:20:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212207712b062d76803d4ad28ee3f5795f2f704585b62e28a7c168984142f1dbaae1464736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH24 0x12B062D76803D4AD28EE3F5795F2F704585B62E28A7C1689 DUP5 EQ 0x2F SAR 0xBA 0xAE EQ PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"521:3235:20:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing. The library provides methods for generating a hash of a message that conforms to the https://eips.ethereum.org/EIPS/eip-191[EIP 191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712] specifications.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":\"MessageHashUtils\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0xba333517a3add42cd35fe877656fc3dfcc9de53baa4f3aabbd6d12a92e4ea435\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ceacff44c0fdc81e48e0e0b1db87a2076d3c1fb497341de077bf1da9f6b406c\",\"dweb:/ipfs/QmRUo1muMRAewxrKQ7TkXUtknyRoR57AyEkoPpiuZQ8FzX\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/math/Math.sol":{"Math":{"abi":[{"inputs":[],"name":"MathOverflowedMulDiv","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220790d7b91fdd446ac2c697f171eeef084d56599665c6d788fe80fcce7f6a12f8764736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH26 0xD7B91FDD446AC2C697F171EEEF084D56599665C6D788FE80FCC 0xE7 0xF6 LOG1 0x2F DUP8 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"203:14914:21:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220790d7b91fdd446ac2c697f171eeef084d56599665c6d788fe80fcce7f6a12f8764736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH26 0xD7B91FDD446AC2C697F171EEEF084D56599665C6D788FE80FCC 0xE7 0xF6 LOG1 0x2F DUP8 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"203:14914:21:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"MathOverflowedMulDiv\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"errors\":{\"MathOverflowedMulDiv()\":[{\"details\":\"Muldiv operation overflow.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"SignedMath":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d184e53d3ebb413bc45fd94e6304b84cba20c89298f8b078eec6d1497f332a3264736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD1 DUP5 0xE5 RETURNDATASIZE RETURNDATACOPY 0xBB COINBASE EXTCODESIZE 0xC4 PUSH0 0xD9 0x4E PUSH4 0x4B84CBA KECCAK256 0xC8 SWAP3 SWAP9 0xF8 0xB0 PUSH25 0xEEC6D1497F332A3264736F6C63430008140033000000000000 ","sourceMap":"216:1047:22:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d184e53d3ebb413bc45fd94e6304b84cba20c89298f8b078eec6d1497f332a3264736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD1 DUP5 0xE5 RETURNDATASIZE RETURNDATACOPY 0xBB COINBASE EXTCODESIZE 0xC4 PUSH0 0xD9 0x4E PUSH4 0x4B84CBA KECCAK256 0xC8 SWAP3 SWAP9 0xF8 0xB0 PUSH25 0xEEC6D1497F332A3264736F6C63430008140033000000000000 ","sourceMap":"216:1047:22:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"contracts/MoCoKoV1.sol":{"MoCoKoV1":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"ECDSAInvalidSignature","type":"error"},{"inputs":[{"internalType":"uint256","name":"length","type":"uint256"}],"name":"ECDSAInvalidSignatureLength","type":"error"},{"inputs":[{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"ECDSAInvalidSignatureS","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"inputs":[{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"ERC2612ExpiredSignature","type":"error"},{"inputs":[{"internalType":"address","name":"signer","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC2612InvalidSigner","type":"error"},{"inputs":[{"internalType":"uint256","name":"maxLoan","type":"uint256"}],"name":"ERC3156ExceededMaxLoan","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC3156InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"name":"ERC3156UnsupportedToken","type":"error"},{"inputs":[],"name":"EnforcedPause","type":"error"},{"inputs":[],"name":"ExpectedPause","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"currentNonce","type":"uint256"}],"name":"InvalidAccountNonce","type":"error"},{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Paused","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Unpaused","type":"event"},{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"}],"name":"burn","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"burnFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"flashFee","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"contract IERC3156FlashBorrower","name":"receiver","type":"address"},{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"flashLoan","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"initialOwner","type":"address"}],"name":"initialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"name":"maxFlashLoan","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"mint","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"pause","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"unpause","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_4514":{"entryPoint":null,"id":4514,"parameterSlots":0,"returnSlots":0},"@_disableInitializers_416":{"entryPoint":40,"id":416,"parameterSlots":0,"returnSlots":0},"@_getInitializableStorage_447":{"entryPoint":306,"id":447,"parameterSlots":0,"returnSlots":1},"abi_encode_t_uint64_to_t_uint64_fromStack":{"entryPoint":366,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed":{"entryPoint":383,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_uint64":{"entryPoint":346,"id":null,"parameterSlots":1,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:456:24","statements":[{"body":{"nodeType":"YulBlock","src":"51:57:24","statements":[{"nodeType":"YulAssignment","src":"61:41:24","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"76:5:24"},{"kind":"number","nodeType":"YulLiteral","src":"83:18:24","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"72:3:24"},"nodeType":"YulFunctionCall","src":"72:30:24"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"61:7:24"}]}]},"name":"cleanup_t_uint64","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"33:5:24","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"43:7:24","type":""}],"src":"7:101:24"},{"body":{"nodeType":"YulBlock","src":"177:52:24","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"194:3:24"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"216:5:24"}],"functionName":{"name":"cleanup_t_uint64","nodeType":"YulIdentifier","src":"199:16:24"},"nodeType":"YulFunctionCall","src":"199:23:24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"187:6:24"},"nodeType":"YulFunctionCall","src":"187:36:24"},"nodeType":"YulExpressionStatement","src":"187:36:24"}]},"name":"abi_encode_t_uint64_to_t_uint64_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"165:5:24","type":""},{"name":"pos","nodeType":"YulTypedName","src":"172:3:24","type":""}],"src":"114:115:24"},{"body":{"nodeType":"YulBlock","src":"331:122:24","statements":[{"nodeType":"YulAssignment","src":"341:26:24","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"353:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"364:2:24","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"349:3:24"},"nodeType":"YulFunctionCall","src":"349:18:24"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"341:4:24"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"419:6:24"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"432:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"443:1:24","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"428:3:24"},"nodeType":"YulFunctionCall","src":"428:17:24"}],"functionName":{"name":"abi_encode_t_uint64_to_t_uint64_fromStack","nodeType":"YulIdentifier","src":"377:41:24"},"nodeType":"YulFunctionCall","src":"377:69:24"},"nodeType":"YulExpressionStatement","src":"377:69:24"}]},"name":"abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"303:9:24","type":""},{"name":"value0","nodeType":"YulTypedName","src":"315:6:24","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"326:4:24","type":""}],"src":"235:218:24"}]},"contents":"{\n\n    function cleanup_t_uint64(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffff)\n    }\n\n    function abi_encode_t_uint64_to_t_uint64_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint64(value))\n    }\n\n    function abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint64_to_t_uint64_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n","id":24,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60806040523480156200001157600080fd5b50620000226200002860201b60201c565b6200019c565b60006200003a6200013260201b60201c565b90508060000160089054906101000a900460ff161562000086576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b67ffffffffffffffff80168160000160009054906101000a900467ffffffffffffffff1667ffffffffffffffff16146200012f5767ffffffffffffffff8160000160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055507fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d267ffffffffffffffff6040516200012691906200017f565b60405180910390a15b50565b60007ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00905090565b600067ffffffffffffffff82169050919050565b62000179816200015a565b82525050565b60006020820190506200019660008301846200016e565b92915050565b61327080620001ac6000396000f3fe608060405234801561001057600080fd5b506004361061018e5760003560e01c8063715018a6116100de57806395d89b4111610097578063d505accf11610071578063d505accf14610467578063d9d98ce414610483578063dd62ed3e146104b3578063f2fde38b146104e35761018e565b806395d89b41146103fd578063a9059cbb1461041b578063c4d66de81461044b5761018e565b8063715018a61461035b57806379cc6790146103655780637ecebe00146103815780638456cb59146103b157806384b0196e146103bb5780638da5cb5b146103df5761018e565b80633f4ba83a1161014b5780635c975abb116101255780635c975abb146102ad5780635cffe9de146102cb578063613255ab146102fb57806370a082311461032b5761018e565b80633f4ba83a1461026b57806340c10f191461027557806342966c68146102915761018e565b806306fdde0314610193578063095ea7b3146101b157806318160ddd146101e157806323b872dd146101ff578063313ce5671461022f5780633644e5151461024d575b600080fd5b61019b6104ff565b6040516101a891906124c9565b60405180910390f35b6101cb60048036038101906101c69190612589565b6105a0565b6040516101d891906125e4565b60405180910390f35b6101e96105c3565b6040516101f6919061260e565b60405180910390f35b61021960048036038101906102149190612629565b6105db565b60405161022691906125e4565b60405180910390f35b61023761060a565b6040516102449190612698565b60405180910390f35b610255610613565b60405161026291906126cc565b60405180910390f35b610273610622565b005b61028f600480360381019061028a9190612589565b610634565b005b6102ab60048036038101906102a691906126e7565b61064a565b005b6102b561065e565b6040516102c291906125e4565b60405180910390f35b6102e560048036038101906102e091906127b7565b610683565b6040516102f291906125e4565b60405180910390f35b6103156004803603810190610310919061283f565b610880565b604051610322919061260e565b60405180910390f35b6103456004803603810190610340919061283f565b6108f7565b604051610352919061260e565b60405180910390f35b61036361094e565b005b61037f600480360381019061037a9190612589565b610962565b005b61039b6004803603810190610396919061283f565b610982565b6040516103a8919061260e565b60405180910390f35b6103b9610994565b005b6103c36109a6565b6040516103d69796959493929190612974565b60405180910390f35b6103e7610ab8565b6040516103f491906129f8565b60405180910390f35b610405610af0565b60405161041291906124c9565b60405180910390f35b61043560048036038101906104309190612589565b610b91565b60405161044291906125e4565b60405180910390f35b6104656004803603810190610460919061283f565b610bb4565b005b610481600480360381019061047c9190612a6b565b610e0d565b005b61049d60048036038101906104989190612589565b610f55565b6040516104aa919061260e565b60405180910390f35b6104cd60048036038101906104c89190612b0d565b610fd9565b6040516104da919061260e565b60405180910390f35b6104fd60048036038101906104f8919061283f565b61106e565b005b6060600061050b6110f4565b905080600301805461051c90612b7c565b80601f016020809104026020016040519081016040528092919081815260200182805461054890612b7c565b80156105955780601f1061056a57610100808354040283529160200191610595565b820191906000526020600020905b81548152906001019060200180831161057857829003601f168201915b505050505091505090565b6000806105ab61111c565b90506105b8818585611124565b600191505092915050565b6000806105ce6110f4565b9050806002015491505090565b6000806105e661111c565b90506105f3858285611136565b6105fe8585856111ca565b60019150509392505050565b60006012905090565b600061061d6112be565b905090565b61062a6112cd565b610632611354565b565b61063c6112cd565b61064682826113c6565b5050565b61065b61065561111c565b82611448565b50565b6000806106696114ca565b90508060000160009054906101000a900460ff1691505090565b60008061068f86610880565b9050808511156106d657806040517ffd9a76090000000000000000000000000000000000000000000000000000000081526004016106cd919061260e565b60405180910390fd5b60006106e28787610f55565b90506106ee88876113c6565b7f439148f0bbc682ca079e46d6e2c2f0c1e3b820f1a291b069d8882abf8cf18dd98873ffffffffffffffffffffffffffffffffffffffff166323e30c8b61073361111c565b8a8a868b8b6040518763ffffffff1660e01b815260040161075996959493929190612bfa565b6020604051808303816000875af1158015610778573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061079c9190612c6b565b146107de57876040517f678c5b000000000000000000000000000000000000000000000000000000000081526004016107d591906129f8565b60405180910390fd5b60006107e86114f2565b90506108008930848a6107fb9190612cc7565b611136565b600082148061083b5750600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16145b1561085a576108558983896108509190612cc7565b611448565b610870565b6108648988611448565b61086f8982846111ca565b5b6001935050505095945050505050565b60003073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16146108bc5760006108f0565b6108c46105c3565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6108ef9190612cfb565b5b9050919050565b6000806109026110f4565b90508060000160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054915050919050565b6109566112cd565b61096060006114f7565b565b6109748261096e61111c565b83611136565b61097e8282611448565b5050565b600061098d826115ce565b9050919050565b61099c6112cd565b6109a4611625565b565b60006060806000806000606060006109bc611697565b90506000801b81600001541480156109da57506000801b8160010154145b610a19576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a1090612d7b565b60405180910390fd5b610a216116bf565b610a29611760565b46306000801b600067ffffffffffffffff811115610a4a57610a49612d9b565b5b604051908082528060200260200182016040528015610a785781602001602082028036833780820191505090505b507f0f0000000000000000000000000000000000000000000000000000000000000095949392919097509750975097509750975097505090919293949596565b600080610ac3611801565b90508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1691505090565b60606000610afc6110f4565b9050806004018054610b0d90612b7c565b80601f0160208091040260200160405190810160405280929190818152602001828054610b3990612b7c565b8015610b865780601f10610b5b57610100808354040283529160200191610b86565b820191906000526020600020905b815481529060010190602001808311610b6957829003601f168201915b505050505091505090565b600080610b9c61111c565b9050610ba98185856111ca565b600191505092915050565b6000610bbe611829565b905060008160000160089054906101000a900460ff1615905060008260000160009054906101000a900467ffffffffffffffff1690506000808267ffffffffffffffff16148015610c0c5750825b9050600060018367ffffffffffffffff16148015610c41575060003073ffffffffffffffffffffffffffffffffffffffff163b145b905081158015610c4f575080155b15610c86576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018560000160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055508315610cd65760018560000160086101000a81548160ff0219169083151502179055505b610d4a6040518060400160405280600681526020017f4d6f436f4b6f00000000000000000000000000000000000000000000000000008152506040518060400160405280600381526020017f4d434b0000000000000000000000000000000000000000000000000000000000815250611851565b610d52611867565b610d5a611871565b610d6386611883565b610da16040518060400160405280600681526020017f4d6f436f4b6f0000000000000000000000000000000000000000000000000000815250611897565b610da96118e1565b8315610e055760008560000160086101000a81548160ff0219169083151502179055507fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d26001604051610dfc9190612e23565b60405180910390a15b505050505050565b83421115610e5257836040517f62791302000000000000000000000000000000000000000000000000000000008152600401610e49919061260e565b60405180910390fd5b60007f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9888888610e818c6118eb565b89604051602001610e9796959493929190612e3e565b6040516020818303038152906040528051906020012090506000610eba82611950565b90506000610eca8287878761196a565b90508973ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610f3e57808a6040517f4b800e46000000000000000000000000000000000000000000000000000000008152600401610f35929190612e9f565b60405180910390fd5b610f498a8a8a611124565b50505050505050505050565b60003073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614610fc757826040517fb5a7db92000000000000000000000000000000000000000000000000000000008152600401610fbe91906129f8565b60405180910390fd5b610fd1838361199a565b905092915050565b600080610fe46110f4565b90508060010160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205491505092915050565b6110766112cd565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036110e85760006040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016110df91906129f8565b60405180910390fd5b6110f1816114f7565b50565b60007f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace00905090565b600033905090565b61113183838360016119a2565b505050565b60006111428484610fd9565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146111c457818110156111b4578281836040517ffb8f41b20000000000000000000000000000000000000000000000000000000081526004016111ab93929190612ec8565b60405180910390fd5b6111c3848484840360006119a2565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361123c5760006040517f96c6fd1e00000000000000000000000000000000000000000000000000000000815260040161123391906129f8565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036112ae5760006040517fec442f050000000000000000000000000000000000000000000000000000000081526004016112a591906129f8565b60405180910390fd5b6112b9838383611b88565b505050565b60006112c8611b98565b905090565b6112d561111c565b73ffffffffffffffffffffffffffffffffffffffff166112f3610ab8565b73ffffffffffffffffffffffffffffffffffffffff16146113525761131661111c565b6040517f118cdaa700000000000000000000000000000000000000000000000000000000815260040161134991906129f8565b60405180910390fd5b565b61135c611bfc565b60006113666114ca565b905060008160000160006101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa6113ae61111c565b6040516113bb91906129f8565b60405180910390a150565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036114385760006040517fec442f0500000000000000000000000000000000000000000000000000000000815260040161142f91906129f8565b60405180910390fd5b61144460008383611b88565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036114ba5760006040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016114b191906129f8565b60405180910390fd5b6114c682600083611b88565b5050565b60007fcd5ed15c6e187e77e9aee88184c21f4f2182ab5827cb3b7e07fbedcd63f03300905090565b600090565b6000611501611801565b905060008160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050828260000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3505050565b6000806115d9611c3c565b90508060000160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054915050919050565b61162d611c64565b60006116376114ca565b905060018160000160006101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25861167f61111c565b60405161168c91906129f8565b60405180910390a150565b60007fa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d100905090565b606060006116cb611697565b90508060020180546116dc90612b7c565b80601f016020809104026020016040519081016040528092919081815260200182805461170890612b7c565b80156117555780601f1061172a57610100808354040283529160200191611755565b820191906000526020600020905b81548152906001019060200180831161173857829003601f168201915b505050505091505090565b6060600061176c611697565b905080600301805461177d90612b7c565b80601f01602080910402602001604051908101604052809291908181526020018280546117a990612b7c565b80156117f65780601f106117cb576101008083540402835291602001916117f6565b820191906000526020600020905b8154815290600101906020018083116117d957829003601f168201915b505050505091505090565b60007f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300905090565b60007ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00905090565b611859611ca5565b6118638282611ce5565b5050565b61186f611ca5565b565b611879611ca5565b611881611d22565b565b61188b611ca5565b61189481611d56565b50565b61189f611ca5565b6118de816040518060400160405280600181526020017f3100000000000000000000000000000000000000000000000000000000000000815250611ddc565b50565b6118e9611ca5565b565b6000806118f6611c3c565b90508060000160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600081548092919060010191905055915050919050565b600061196361195d6112be565b83611e31565b9050919050565b60008060008061197c88888888611e72565b92509250925061198c8282611f66565b829350505050949350505050565b600092915050565b60006119ac6110f4565b9050600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1603611a205760006040517fe602df05000000000000000000000000000000000000000000000000000000008152600401611a1791906129f8565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603611a925760006040517f94280d62000000000000000000000000000000000000000000000000000000008152600401611a8991906129f8565b60405180910390fd5b828160010160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508115611b81578373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92585604051611b78919061260e565b60405180910390a35b5050505050565b611b938383836120ca565b505050565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f611bc36120e2565b611bcb61215e565b4630604051602001611be1959493929190612eff565b60405160208183030381529060405280519060200120905090565b611c0461065e565b611c3a576040517f8dfc202b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b60007f5ab42ced628888259c08ac98db1eb0cf702fc1501344311d8b100cd1bfe4bb00905090565b611c6c61065e565b15611ca3576040517fd93c066500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b611cad6121da565b611ce3576040517fd7e6bcf800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b611ced611ca5565b6000611cf76110f4565b905082816003019081611d0a91906130f4565b5081816004019081611d1c91906130f4565b50505050565b611d2a611ca5565b6000611d346114ca565b905060008160000160006101000a81548160ff02191690831515021790555050565b611d5e611ca5565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611dd05760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401611dc791906129f8565b60405180910390fd5b611dd9816114f7565b50565b611de4611ca5565b6000611dee611697565b905082816002019081611e0191906130f4565b5081816003019081611e1391906130f4565b506000801b81600001819055506000801b8160010181905550505050565b60006040517f190100000000000000000000000000000000000000000000000000000000000081528360028201528260228201526042812091505092915050565b60008060007f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08460001c1115611eb2576000600385925092509250611f5c565b600060018888888860405160008152602001604052604051611ed794939291906131c6565b6020604051602081039080840390855afa158015611ef9573d6000803e3d6000fd5b505050602060405103519050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611f4d57600060016000801b93509350935050611f5c565b8060008060001b935093509350505b9450945094915050565b60006003811115611f7a57611f7961320b565b5b826003811115611f8d57611f8c61320b565b5b03156120c65760016003811115611fa757611fa661320b565b5b826003811115611fba57611fb961320b565b5b03611ff1576040517ff645eedf00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600260038111156120055761200461320b565b5b8260038111156120185761201761320b565b5b0361205d578060001c6040517ffce698f7000000000000000000000000000000000000000000000000000000008152600401612054919061260e565b60405180910390fd5b6003808111156120705761206f61320b565b5b8260038111156120835761208261320b565b5b036120c557806040517fd78bce0c0000000000000000000000000000000000000000000000000000000081526004016120bc91906126cc565b60405180910390fd5b5b5050565b6120d2611c64565b6120dd8383836121fa565b505050565b6000806120ed611697565b905060006120f96116bf565b90506000815111156121165780805190602001209250505061215b565b6000826000015490506000801b81146121345780935050505061215b565b7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47093505050505b90565b600080612169611697565b90506000612175611760565b9050600081511115612192578080519060200120925050506121d7565b6000826001015490506000801b81146121b0578093505050506121d7565b7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47093505050505b90565b60006121e4611829565b60000160089054906101000a900460ff16905090565b60006122046110f4565b9050600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff160361225a578181600201600082825461224e9190612cc7565b92505081905550612333565b60008160000160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050828110156122e9578481846040517fe450d38c0000000000000000000000000000000000000000000000000000000081526004016122e093929190612ec8565b60405180910390fd5b8281038260000160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361237e578181600201600082825403925050819055506123ce565b818160000160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161242b919061260e565b60405180910390a350505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015612473578082015181840152602081019050612458565b60008484015250505050565b6000601f19601f8301169050919050565b600061249b82612439565b6124a58185612444565b93506124b5818560208601612455565b6124be8161247f565b840191505092915050565b600060208201905081810360008301526124e38184612490565b905092915050565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000612520826124f5565b9050919050565b61253081612515565b811461253b57600080fd5b50565b60008135905061254d81612527565b92915050565b6000819050919050565b61256681612553565b811461257157600080fd5b50565b6000813590506125838161255d565b92915050565b600080604083850312156125a05761259f6124eb565b5b60006125ae8582860161253e565b92505060206125bf85828601612574565b9150509250929050565b60008115159050919050565b6125de816125c9565b82525050565b60006020820190506125f960008301846125d5565b92915050565b61260881612553565b82525050565b600060208201905061262360008301846125ff565b92915050565b600080600060608486031215612642576126416124eb565b5b60006126508682870161253e565b93505060206126618682870161253e565b925050604061267286828701612574565b9150509250925092565b600060ff82169050919050565b6126928161267c565b82525050565b60006020820190506126ad6000830184612689565b92915050565b6000819050919050565b6126c6816126b3565b82525050565b60006020820190506126e160008301846126bd565b92915050565b6000602082840312156126fd576126fc6124eb565b5b600061270b84828501612574565b91505092915050565b600061271f82612515565b9050919050565b61272f81612714565b811461273a57600080fd5b50565b60008135905061274c81612726565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f84011261277757612776612752565b5b8235905067ffffffffffffffff81111561279457612793612757565b5b6020830191508360018202830111156127b0576127af61275c565b5b9250929050565b6000806000806000608086880312156127d3576127d26124eb565b5b60006127e18882890161273d565b95505060206127f28882890161253e565b945050604061280388828901612574565b935050606086013567ffffffffffffffff811115612824576128236124f0565b5b61283088828901612761565b92509250509295509295909350565b600060208284031215612855576128546124eb565b5b60006128638482850161253e565b91505092915050565b60007fff0000000000000000000000000000000000000000000000000000000000000082169050919050565b6128a18161286c565b82525050565b6128b081612515565b82525050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6128eb81612553565b82525050565b60006128fd83836128e2565b60208301905092915050565b6000602082019050919050565b6000612921826128b6565b61292b81856128c1565b9350612936836128d2565b8060005b8381101561296757815161294e88826128f1565b975061295983612909565b92505060018101905061293a565b5085935050505092915050565b600060e082019050612989600083018a612898565b818103602083015261299b8189612490565b905081810360408301526129af8188612490565b90506129be60608301876125ff565b6129cb60808301866128a7565b6129d860a08301856126bd565b81810360c08301526129ea8184612916565b905098975050505050505050565b6000602082019050612a0d60008301846128a7565b92915050565b612a1c8161267c565b8114612a2757600080fd5b50565b600081359050612a3981612a13565b92915050565b612a48816126b3565b8114612a5357600080fd5b50565b600081359050612a6581612a3f565b92915050565b600080600080600080600060e0888a031215612a8a57612a896124eb565b5b6000612a988a828b0161253e565b9750506020612aa98a828b0161253e565b9650506040612aba8a828b01612574565b9550506060612acb8a828b01612574565b9450506080612adc8a828b01612a2a565b93505060a0612aed8a828b01612a56565b92505060c0612afe8a828b01612a56565b91505092959891949750929550565b60008060408385031215612b2457612b236124eb565b5b6000612b328582860161253e565b9250506020612b438582860161253e565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680612b9457607f821691505b602082108103612ba757612ba6612b4d565b5b50919050565b600082825260208201905092915050565b82818337600083830152505050565b6000612bd98385612bad565b9350612be6838584612bbe565b612bef8361247f565b840190509392505050565b600060a082019050612c0f60008301896128a7565b612c1c60208301886128a7565b612c2960408301876125ff565b612c3660608301866125ff565b8181036080830152612c49818486612bcd565b9050979650505050505050565b600081519050612c6581612a3f565b92915050565b600060208284031215612c8157612c806124eb565b5b6000612c8f84828501612c56565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000612cd282612553565b9150612cdd83612553565b9250828201905080821115612cf557612cf4612c98565b5b92915050565b6000612d0682612553565b9150612d1183612553565b9250828203905081811115612d2957612d28612c98565b5b92915050565b7f4549503731323a20556e696e697469616c697a65640000000000000000000000600082015250565b6000612d65601583612444565b9150612d7082612d2f565b602082019050919050565b60006020820190508181036000830152612d9481612d58565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000819050919050565b600067ffffffffffffffff82169050919050565b6000819050919050565b6000612e0d612e08612e0384612dca565b612de8565b612dd4565b9050919050565b612e1d81612df2565b82525050565b6000602082019050612e386000830184612e14565b92915050565b600060c082019050612e5360008301896126bd565b612e6060208301886128a7565b612e6d60408301876128a7565b612e7a60608301866125ff565b612e8760808301856125ff565b612e9460a08301846125ff565b979650505050505050565b6000604082019050612eb460008301856128a7565b612ec160208301846128a7565b9392505050565b6000606082019050612edd60008301866128a7565b612eea60208301856125ff565b612ef760408301846125ff565b949350505050565b600060a082019050612f1460008301886126bd565b612f2160208301876126bd565b612f2e60408301866126bd565b612f3b60608301856125ff565b612f4860808301846128a7565b9695505050505050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302612fb47fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82612f77565b612fbe8683612f77565b95508019841693508086168417925050509392505050565b6000612ff1612fec612fe784612553565b612de8565b612553565b9050919050565b6000819050919050565b61300b83612fd6565b61301f61301782612ff8565b848454612f84565b825550505050565b600090565b613034613027565b61303f818484613002565b505050565b5b818110156130635761305860008261302c565b600181019050613045565b5050565b601f8211156130a85761307981612f52565b61308284612f67565b81016020851015613091578190505b6130a561309d85612f67565b830182613044565b50505b505050565b600082821c905092915050565b60006130cb600019846008026130ad565b1980831691505092915050565b60006130e483836130ba565b9150826002028217905092915050565b6130fd82612439565b67ffffffffffffffff81111561311657613115612d9b565b5b6131208254612b7c565b61312b828285613067565b600060209050601f83116001811461315e576000841561314c578287015190505b61315685826130d8565b8655506131be565b601f19841661316c86612f52565b60005b828110156131945784890151825560018201915060208501945060208101905061316f565b868310156131b157848901516131ad601f8916826130ba565b8355505b6001600288020188555050505b505050505050565b60006080820190506131db60008301876126bd565b6131e86020830186612689565b6131f560408301856126bd565b61320260608301846126bd565b95945050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fdfea2646970667358221220aff5e5a751a571612f6fac27ccc74e17fe33bf1934538a501d2b1a733fc5c8cf64736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x22 PUSH3 0x28 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x19C JUMP JUMPDEST PUSH1 0x0 PUSH3 0x3A PUSH3 0x132 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH3 0x86 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP1 AND DUP2 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND EQ PUSH3 0x12F JUMPI PUSH8 0xFFFFFFFFFFFFFFFF DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x40 MLOAD PUSH3 0x126 SWAP2 SWAP1 PUSH3 0x17F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x179 DUP2 PUSH3 0x15A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x196 PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x16E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3270 DUP1 PUSH3 0x1AC PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x18E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xDE JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xD505ACCF GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x467 JUMPI DUP1 PUSH4 0xD9D98CE4 EQ PUSH2 0x483 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x4B3 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x4E3 JUMPI PUSH2 0x18E JUMP JUMPDEST DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x3FD JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x41B JUMPI DUP1 PUSH4 0xC4D66DE8 EQ PUSH2 0x44B JUMPI PUSH2 0x18E JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x35B JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x365 JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x381 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x3B1 JUMPI DUP1 PUSH4 0x84B0196E EQ PUSH2 0x3BB JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x3DF JUMPI PUSH2 0x18E JUMP JUMPDEST DUP1 PUSH4 0x3F4BA83A GT PUSH2 0x14B JUMPI DUP1 PUSH4 0x5C975ABB GT PUSH2 0x125 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x2AD JUMPI DUP1 PUSH4 0x5CFFE9DE EQ PUSH2 0x2CB JUMPI DUP1 PUSH4 0x613255AB EQ PUSH2 0x2FB JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x32B JUMPI PUSH2 0x18E JUMP JUMPDEST DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x26B JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x275 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x291 JUMPI PUSH2 0x18E JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x193 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1B1 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1E1 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1FF JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x22F JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x24D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x19B PUSH2 0x4FF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A8 SWAP2 SWAP1 PUSH2 0x24C9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1CB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C6 SWAP2 SWAP1 PUSH2 0x2589 JUMP JUMPDEST PUSH2 0x5A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D8 SWAP2 SWAP1 PUSH2 0x25E4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E9 PUSH2 0x5C3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F6 SWAP2 SWAP1 PUSH2 0x260E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x219 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x214 SWAP2 SWAP1 PUSH2 0x2629 JUMP JUMPDEST PUSH2 0x5DB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x226 SWAP2 SWAP1 PUSH2 0x25E4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x237 PUSH2 0x60A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x244 SWAP2 SWAP1 PUSH2 0x2698 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x255 PUSH2 0x613 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x262 SWAP2 SWAP1 PUSH2 0x26CC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x273 PUSH2 0x622 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x28F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x28A SWAP2 SWAP1 PUSH2 0x2589 JUMP JUMPDEST PUSH2 0x634 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2AB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A6 SWAP2 SWAP1 PUSH2 0x26E7 JUMP JUMPDEST PUSH2 0x64A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2B5 PUSH2 0x65E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C2 SWAP2 SWAP1 PUSH2 0x25E4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2E5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2E0 SWAP2 SWAP1 PUSH2 0x27B7 JUMP JUMPDEST PUSH2 0x683 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2F2 SWAP2 SWAP1 PUSH2 0x25E4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x315 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x310 SWAP2 SWAP1 PUSH2 0x283F JUMP JUMPDEST PUSH2 0x880 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x322 SWAP2 SWAP1 PUSH2 0x260E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x345 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x340 SWAP2 SWAP1 PUSH2 0x283F JUMP JUMPDEST PUSH2 0x8F7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x352 SWAP2 SWAP1 PUSH2 0x260E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x363 PUSH2 0x94E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x37F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x37A SWAP2 SWAP1 PUSH2 0x2589 JUMP JUMPDEST PUSH2 0x962 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x39B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x396 SWAP2 SWAP1 PUSH2 0x283F JUMP JUMPDEST PUSH2 0x982 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3A8 SWAP2 SWAP1 PUSH2 0x260E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3B9 PUSH2 0x994 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3C3 PUSH2 0x9A6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3D6 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2974 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3E7 PUSH2 0xAB8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3F4 SWAP2 SWAP1 PUSH2 0x29F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x405 PUSH2 0xAF0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x412 SWAP2 SWAP1 PUSH2 0x24C9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x435 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x430 SWAP2 SWAP1 PUSH2 0x2589 JUMP JUMPDEST PUSH2 0xB91 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x442 SWAP2 SWAP1 PUSH2 0x25E4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x465 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x460 SWAP2 SWAP1 PUSH2 0x283F JUMP JUMPDEST PUSH2 0xBB4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x481 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x47C SWAP2 SWAP1 PUSH2 0x2A6B JUMP JUMPDEST PUSH2 0xE0D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x49D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x498 SWAP2 SWAP1 PUSH2 0x2589 JUMP JUMPDEST PUSH2 0xF55 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4AA SWAP2 SWAP1 PUSH2 0x260E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4CD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4C8 SWAP2 SWAP1 PUSH2 0x2B0D JUMP JUMPDEST PUSH2 0xFD9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4DA SWAP2 SWAP1 PUSH2 0x260E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4FD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4F8 SWAP2 SWAP1 PUSH2 0x283F JUMP JUMPDEST PUSH2 0x106E JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x50B PUSH2 0x10F4 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x3 ADD DUP1 SLOAD PUSH2 0x51C SWAP1 PUSH2 0x2B7C JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x548 SWAP1 PUSH2 0x2B7C JUMP JUMPDEST DUP1 ISZERO PUSH2 0x595 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x56A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x595 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x578 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x5AB PUSH2 0x111C JUMP JUMPDEST SWAP1 POP PUSH2 0x5B8 DUP2 DUP6 DUP6 PUSH2 0x1124 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x5CE PUSH2 0x10F4 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x2 ADD SLOAD SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x5E6 PUSH2 0x111C JUMP JUMPDEST SWAP1 POP PUSH2 0x5F3 DUP6 DUP3 DUP6 PUSH2 0x1136 JUMP JUMPDEST PUSH2 0x5FE DUP6 DUP6 DUP6 PUSH2 0x11CA JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x61D PUSH2 0x12BE JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x62A PUSH2 0x12CD JUMP JUMPDEST PUSH2 0x632 PUSH2 0x1354 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x63C PUSH2 0x12CD JUMP JUMPDEST PUSH2 0x646 DUP3 DUP3 PUSH2 0x13C6 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x65B PUSH2 0x655 PUSH2 0x111C JUMP JUMPDEST DUP3 PUSH2 0x1448 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x669 PUSH2 0x14CA JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x68F DUP7 PUSH2 0x880 JUMP JUMPDEST SWAP1 POP DUP1 DUP6 GT ISZERO PUSH2 0x6D6 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xFD9A760900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6CD SWAP2 SWAP1 PUSH2 0x260E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x6E2 DUP8 DUP8 PUSH2 0xF55 JUMP JUMPDEST SWAP1 POP PUSH2 0x6EE DUP9 DUP8 PUSH2 0x13C6 JUMP JUMPDEST PUSH32 0x439148F0BBC682CA079E46D6E2C2F0C1E3B820F1A291B069D8882ABF8CF18DD9 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23E30C8B PUSH2 0x733 PUSH2 0x111C JUMP JUMPDEST DUP11 DUP11 DUP7 DUP12 DUP12 PUSH1 0x40 MLOAD DUP8 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x759 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2BFA JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x778 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x79C SWAP2 SWAP1 PUSH2 0x2C6B JUMP JUMPDEST EQ PUSH2 0x7DE JUMPI DUP8 PUSH1 0x40 MLOAD PUSH32 0x678C5B0000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7D5 SWAP2 SWAP1 PUSH2 0x29F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x7E8 PUSH2 0x14F2 JUMP JUMPDEST SWAP1 POP PUSH2 0x800 DUP10 ADDRESS DUP5 DUP11 PUSH2 0x7FB SWAP2 SWAP1 PUSH2 0x2CC7 JUMP JUMPDEST PUSH2 0x1136 JUMP JUMPDEST PUSH1 0x0 DUP3 EQ DUP1 PUSH2 0x83B JUMPI POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST ISZERO PUSH2 0x85A JUMPI PUSH2 0x855 DUP10 DUP4 DUP10 PUSH2 0x850 SWAP2 SWAP1 PUSH2 0x2CC7 JUMP JUMPDEST PUSH2 0x1448 JUMP JUMPDEST PUSH2 0x870 JUMP JUMPDEST PUSH2 0x864 DUP10 DUP9 PUSH2 0x1448 JUMP JUMPDEST PUSH2 0x86F DUP10 DUP3 DUP5 PUSH2 0x11CA JUMP JUMPDEST JUMPDEST PUSH1 0x1 SWAP4 POP POP POP POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x8BC JUMPI PUSH1 0x0 PUSH2 0x8F0 JUMP JUMPDEST PUSH2 0x8C4 PUSH2 0x5C3 JUMP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x8EF SWAP2 SWAP1 PUSH2 0x2CFB JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x902 PUSH2 0x10F4 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x956 PUSH2 0x12CD JUMP JUMPDEST PUSH2 0x960 PUSH1 0x0 PUSH2 0x14F7 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x974 DUP3 PUSH2 0x96E PUSH2 0x111C JUMP JUMPDEST DUP4 PUSH2 0x1136 JUMP JUMPDEST PUSH2 0x97E DUP3 DUP3 PUSH2 0x1448 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x98D DUP3 PUSH2 0x15CE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x99C PUSH2 0x12CD JUMP JUMPDEST PUSH2 0x9A4 PUSH2 0x1625 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 PUSH1 0x0 PUSH2 0x9BC PUSH2 0x1697 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 SHL DUP2 PUSH1 0x0 ADD SLOAD EQ DUP1 ISZERO PUSH2 0x9DA JUMPI POP PUSH1 0x0 DUP1 SHL DUP2 PUSH1 0x1 ADD SLOAD EQ JUMPDEST PUSH2 0xA19 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA10 SWAP1 PUSH2 0x2D7B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA21 PUSH2 0x16BF JUMP JUMPDEST PUSH2 0xA29 PUSH2 0x1760 JUMP JUMPDEST CHAINID ADDRESS PUSH1 0x0 DUP1 SHL PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xA4A JUMPI PUSH2 0xA49 PUSH2 0x2D9B JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xA78 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP PUSH32 0xF00000000000000000000000000000000000000000000000000000000000000 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 SWAP8 POP SWAP8 POP SWAP8 POP SWAP8 POP SWAP8 POP SWAP8 POP SWAP8 POP POP SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 SWAP7 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xAC3 PUSH2 0x1801 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0xAFC PUSH2 0x10F4 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x4 ADD DUP1 SLOAD PUSH2 0xB0D SWAP1 PUSH2 0x2B7C JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xB39 SWAP1 PUSH2 0x2B7C JUMP JUMPDEST DUP1 ISZERO PUSH2 0xB86 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xB5B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xB86 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xB69 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xB9C PUSH2 0x111C JUMP JUMPDEST SWAP1 POP PUSH2 0xBA9 DUP2 DUP6 DUP6 PUSH2 0x11CA JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBBE PUSH2 0x1829 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 DUP1 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0xC0C JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0xC41 JUMPI POP PUSH1 0x0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0xC4F JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0xC86 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP6 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 ISZERO PUSH2 0xCD6 JUMPI PUSH1 0x1 DUP6 PUSH1 0x0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST PUSH2 0xD4A PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x6 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4D6F436F4B6F0000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4D434B0000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0x1851 JUMP JUMPDEST PUSH2 0xD52 PUSH2 0x1867 JUMP JUMPDEST PUSH2 0xD5A PUSH2 0x1871 JUMP JUMPDEST PUSH2 0xD63 DUP7 PUSH2 0x1883 JUMP JUMPDEST PUSH2 0xDA1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x6 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4D6F436F4B6F0000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0x1897 JUMP JUMPDEST PUSH2 0xDA9 PUSH2 0x18E1 JUMP JUMPDEST DUP4 ISZERO PUSH2 0xE05 JUMPI PUSH1 0x0 DUP6 PUSH1 0x0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0xDFC SWAP2 SWAP1 PUSH2 0x2E23 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST DUP4 TIMESTAMP GT ISZERO PUSH2 0xE52 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x6279130200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE49 SWAP2 SWAP1 PUSH2 0x260E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP9 DUP9 DUP9 PUSH2 0xE81 DUP13 PUSH2 0x18EB JUMP JUMPDEST DUP10 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xE97 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2E3E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH2 0xEBA DUP3 PUSH2 0x1950 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xECA DUP3 DUP8 DUP8 DUP8 PUSH2 0x196A JUMP JUMPDEST SWAP1 POP DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xF3E JUMPI DUP1 DUP11 PUSH1 0x40 MLOAD PUSH32 0x4B800E4600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF35 SWAP3 SWAP2 SWAP1 PUSH2 0x2E9F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xF49 DUP11 DUP11 DUP11 PUSH2 0x1124 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xFC7 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0xB5A7DB9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFBE SWAP2 SWAP1 PUSH2 0x29F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xFD1 DUP4 DUP4 PUSH2 0x199A JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xFE4 PUSH2 0x10F4 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 ADD PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1076 PUSH2 0x12CD JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x10E8 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10DF SWAP2 SWAP1 PUSH2 0x29F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x10F1 DUP2 PUSH2 0x14F7 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE00 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1131 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x19A2 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1142 DUP5 DUP5 PUSH2 0xFD9 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x11C4 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x11B4 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11AB SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2EC8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x11C3 DUP5 DUP5 DUP5 DUP5 SUB PUSH1 0x0 PUSH2 0x19A2 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x123C JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1233 SWAP2 SWAP1 PUSH2 0x29F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x12AE JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12A5 SWAP2 SWAP1 PUSH2 0x29F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x12B9 DUP4 DUP4 DUP4 PUSH2 0x1B88 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12C8 PUSH2 0x1B98 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x12D5 PUSH2 0x111C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x12F3 PUSH2 0xAB8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1352 JUMPI PUSH2 0x1316 PUSH2 0x111C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1349 SWAP2 SWAP1 PUSH2 0x29F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x135C PUSH2 0x1BFC JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1366 PUSH2 0x14CA JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA PUSH2 0x13AE PUSH2 0x111C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13BB SWAP2 SWAP1 PUSH2 0x29F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1438 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x142F SWAP2 SWAP1 PUSH2 0x29F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1444 PUSH1 0x0 DUP4 DUP4 PUSH2 0x1B88 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x14BA JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14B1 SWAP2 SWAP1 PUSH2 0x29F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x14C6 DUP3 PUSH1 0x0 DUP4 PUSH2 0x1B88 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xCD5ED15C6E187E77E9AEE88184C21F4F2182AB5827CB3B7E07FBEDCD63F03300 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1501 PUSH2 0x1801 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP3 DUP3 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x15D9 PUSH2 0x1C3C JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x162D PUSH2 0x1C64 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1637 PUSH2 0x14CA JUMP JUMPDEST SWAP1 POP PUSH1 0x1 DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x167F PUSH2 0x111C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x168C SWAP2 SWAP1 PUSH2 0x29F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xA16A46D94261C7517CC8FF89F61C0CE93598E3C849801011DEE649A6A557D100 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x16CB PUSH2 0x1697 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x2 ADD DUP1 SLOAD PUSH2 0x16DC SWAP1 PUSH2 0x2B7C JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1708 SWAP1 PUSH2 0x2B7C JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1755 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x172A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1755 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1738 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x176C PUSH2 0x1697 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x3 ADD DUP1 SLOAD PUSH2 0x177D SWAP1 PUSH2 0x2B7C JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x17A9 SWAP1 PUSH2 0x2B7C JUMP JUMPDEST DUP1 ISZERO PUSH2 0x17F6 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x17CB JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x17F6 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x17D9 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1859 PUSH2 0x1CA5 JUMP JUMPDEST PUSH2 0x1863 DUP3 DUP3 PUSH2 0x1CE5 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x186F PUSH2 0x1CA5 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x1879 PUSH2 0x1CA5 JUMP JUMPDEST PUSH2 0x1881 PUSH2 0x1D22 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x188B PUSH2 0x1CA5 JUMP JUMPDEST PUSH2 0x1894 DUP2 PUSH2 0x1D56 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x189F PUSH2 0x1CA5 JUMP JUMPDEST PUSH2 0x18DE DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3100000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0x1DDC JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x18E9 PUSH2 0x1CA5 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x18F6 PUSH2 0x1C3C JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH1 0x1 ADD SWAP2 SWAP1 POP SSTORE SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1963 PUSH2 0x195D PUSH2 0x12BE JUMP JUMPDEST DUP4 PUSH2 0x1E31 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x197C DUP9 DUP9 DUP9 DUP9 PUSH2 0x1E72 JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x198C DUP3 DUP3 PUSH2 0x1F66 JUMP JUMPDEST DUP3 SWAP4 POP POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19AC PUSH2 0x10F4 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1A20 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A17 SWAP2 SWAP1 PUSH2 0x29F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1A92 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A89 SWAP2 SWAP1 PUSH2 0x29F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 DUP2 PUSH1 0x1 ADD PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 ISZERO PUSH2 0x1B81 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP6 PUSH1 0x40 MLOAD PUSH2 0x1B78 SWAP2 SWAP1 PUSH2 0x260E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1B93 DUP4 DUP4 DUP4 PUSH2 0x20CA JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH2 0x1BC3 PUSH2 0x20E2 JUMP JUMPDEST PUSH2 0x1BCB PUSH2 0x215E JUMP JUMPDEST CHAINID ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1BE1 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2EFF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1C04 PUSH2 0x65E JUMP JUMPDEST PUSH2 0x1C3A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8DFC202B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH32 0x5AB42CED628888259C08AC98DB1EB0CF702FC1501344311D8B100CD1BFE4BB00 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1C6C PUSH2 0x65E JUMP JUMPDEST ISZERO PUSH2 0x1CA3 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD93C066500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x1CAD PUSH2 0x21DA JUMP JUMPDEST PUSH2 0x1CE3 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD7E6BCF800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x1CED PUSH2 0x1CA5 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CF7 PUSH2 0x10F4 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 PUSH1 0x3 ADD SWAP1 DUP2 PUSH2 0x1D0A SWAP2 SWAP1 PUSH2 0x30F4 JUMP JUMPDEST POP DUP2 DUP2 PUSH1 0x4 ADD SWAP1 DUP2 PUSH2 0x1D1C SWAP2 SWAP1 PUSH2 0x30F4 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x1D2A PUSH2 0x1CA5 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D34 PUSH2 0x14CA JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x1D5E PUSH2 0x1CA5 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1DD0 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1DC7 SWAP2 SWAP1 PUSH2 0x29F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1DD9 DUP2 PUSH2 0x14F7 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x1DE4 PUSH2 0x1CA5 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DEE PUSH2 0x1697 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 PUSH1 0x2 ADD SWAP1 DUP2 PUSH2 0x1E01 SWAP2 SWAP1 PUSH2 0x30F4 JUMP JUMPDEST POP DUP2 DUP2 PUSH1 0x3 ADD SWAP1 DUP2 PUSH2 0x1E13 SWAP2 SWAP1 PUSH2 0x30F4 JUMP JUMPDEST POP PUSH1 0x0 DUP1 SHL DUP2 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP1 SHL DUP2 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1901000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE DUP4 PUSH1 0x2 DUP3 ADD MSTORE DUP3 PUSH1 0x22 DUP3 ADD MSTORE PUSH1 0x42 DUP2 KECCAK256 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP5 PUSH1 0x0 SHR GT ISZERO PUSH2 0x1EB2 JUMPI PUSH1 0x0 PUSH1 0x3 DUP6 SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x1F5C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP9 DUP9 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x1ED7 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x31C6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1EF9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1F4D JUMPI PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP1 SHL SWAP4 POP SWAP4 POP SWAP4 POP POP PUSH2 0x1F5C JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 SHL SWAP4 POP SWAP4 POP SWAP4 POP POP JUMPDEST SWAP5 POP SWAP5 POP SWAP5 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1F7A JUMPI PUSH2 0x1F79 PUSH2 0x320B JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1F8D JUMPI PUSH2 0x1F8C PUSH2 0x320B JUMP JUMPDEST JUMPDEST SUB ISZERO PUSH2 0x20C6 JUMPI PUSH1 0x1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1FA7 JUMPI PUSH2 0x1FA6 PUSH2 0x320B JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1FBA JUMPI PUSH2 0x1FB9 PUSH2 0x320B JUMP JUMPDEST JUMPDEST SUB PUSH2 0x1FF1 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF645EEDF00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x2005 JUMPI PUSH2 0x2004 PUSH2 0x320B JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x2018 JUMPI PUSH2 0x2017 PUSH2 0x320B JUMP JUMPDEST JUMPDEST SUB PUSH2 0x205D JUMPI DUP1 PUSH1 0x0 SHR PUSH1 0x40 MLOAD PUSH32 0xFCE698F700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2054 SWAP2 SWAP1 PUSH2 0x260E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 DUP1 DUP2 GT ISZERO PUSH2 0x2070 JUMPI PUSH2 0x206F PUSH2 0x320B JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x2083 JUMPI PUSH2 0x2082 PUSH2 0x320B JUMP JUMPDEST JUMPDEST SUB PUSH2 0x20C5 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xD78BCE0C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x20BC SWAP2 SWAP1 PUSH2 0x26CC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x20D2 PUSH2 0x1C64 JUMP JUMPDEST PUSH2 0x20DD DUP4 DUP4 DUP4 PUSH2 0x21FA JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x20ED PUSH2 0x1697 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x20F9 PUSH2 0x16BF JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x2116 JUMPI DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP3 POP POP POP PUSH2 0x215B JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x0 ADD SLOAD SWAP1 POP PUSH1 0x0 DUP1 SHL DUP2 EQ PUSH2 0x2134 JUMPI DUP1 SWAP4 POP POP POP POP PUSH2 0x215B JUMP JUMPDEST PUSH32 0xC5D2460186F7233C927E7DB2DCC703C0E500B653CA82273B7BFAD8045D85A470 SWAP4 POP POP POP POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2169 PUSH2 0x1697 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2175 PUSH2 0x1760 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x2192 JUMPI DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP3 POP POP POP PUSH2 0x21D7 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1 ADD SLOAD SWAP1 POP PUSH1 0x0 DUP1 SHL DUP2 EQ PUSH2 0x21B0 JUMPI DUP1 SWAP4 POP POP POP POP PUSH2 0x21D7 JUMP JUMPDEST PUSH32 0xC5D2460186F7233C927E7DB2DCC703C0E500B653CA82273B7BFAD8045D85A470 SWAP4 POP POP POP POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x21E4 PUSH2 0x1829 JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2204 PUSH2 0x10F4 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x225A JUMPI DUP2 DUP2 PUSH1 0x2 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x224E SWAP2 SWAP1 PUSH2 0x2CC7 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x2333 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP3 DUP2 LT ISZERO PUSH2 0x22E9 JUMPI DUP5 DUP2 DUP5 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x22E0 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2EC8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 DUP2 SUB DUP3 PUSH1 0x0 ADD PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x237E JUMPI DUP2 DUP2 PUSH1 0x2 ADD PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x23CE JUMP JUMPDEST DUP2 DUP2 PUSH1 0x0 ADD PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x242B SWAP2 SWAP1 PUSH2 0x260E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2473 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2458 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x249B DUP3 PUSH2 0x2439 JUMP JUMPDEST PUSH2 0x24A5 DUP2 DUP6 PUSH2 0x2444 JUMP JUMPDEST SWAP4 POP PUSH2 0x24B5 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2455 JUMP JUMPDEST PUSH2 0x24BE DUP2 PUSH2 0x247F JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x24E3 DUP2 DUP5 PUSH2 0x2490 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2520 DUP3 PUSH2 0x24F5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2530 DUP2 PUSH2 0x2515 JUMP JUMPDEST DUP2 EQ PUSH2 0x253B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x254D DUP2 PUSH2 0x2527 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2566 DUP2 PUSH2 0x2553 JUMP JUMPDEST DUP2 EQ PUSH2 0x2571 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2583 DUP2 PUSH2 0x255D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x25A0 JUMPI PUSH2 0x259F PUSH2 0x24EB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x25AE DUP6 DUP3 DUP7 ADD PUSH2 0x253E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x25BF DUP6 DUP3 DUP7 ADD PUSH2 0x2574 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x25DE DUP2 PUSH2 0x25C9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x25F9 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x25D5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2608 DUP2 PUSH2 0x2553 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2623 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x25FF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2642 JUMPI PUSH2 0x2641 PUSH2 0x24EB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2650 DUP7 DUP3 DUP8 ADD PUSH2 0x253E JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x2661 DUP7 DUP3 DUP8 ADD PUSH2 0x253E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x2672 DUP7 DUP3 DUP8 ADD PUSH2 0x2574 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2692 DUP2 PUSH2 0x267C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x26AD PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2689 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x26C6 DUP2 PUSH2 0x26B3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x26E1 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x26BD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x26FD JUMPI PUSH2 0x26FC PUSH2 0x24EB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x270B DUP5 DUP3 DUP6 ADD PUSH2 0x2574 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x271F DUP3 PUSH2 0x2515 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x272F DUP2 PUSH2 0x2714 JUMP JUMPDEST DUP2 EQ PUSH2 0x273A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x274C DUP2 PUSH2 0x2726 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x2777 JUMPI PUSH2 0x2776 PUSH2 0x2752 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2794 JUMPI PUSH2 0x2793 PUSH2 0x2757 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x27B0 JUMPI PUSH2 0x27AF PUSH2 0x275C JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x80 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x27D3 JUMPI PUSH2 0x27D2 PUSH2 0x24EB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x27E1 DUP9 DUP3 DUP10 ADD PUSH2 0x273D JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x27F2 DUP9 DUP3 DUP10 ADD PUSH2 0x253E JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x2803 DUP9 DUP3 DUP10 ADD PUSH2 0x2574 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2824 JUMPI PUSH2 0x2823 PUSH2 0x24F0 JUMP JUMPDEST JUMPDEST PUSH2 0x2830 DUP9 DUP3 DUP10 ADD PUSH2 0x2761 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2855 JUMPI PUSH2 0x2854 PUSH2 0x24EB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2863 DUP5 DUP3 DUP6 ADD PUSH2 0x253E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFF00000000000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x28A1 DUP2 PUSH2 0x286C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x28B0 DUP2 PUSH2 0x2515 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x28EB DUP2 PUSH2 0x2553 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x28FD DUP4 DUP4 PUSH2 0x28E2 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2921 DUP3 PUSH2 0x28B6 JUMP JUMPDEST PUSH2 0x292B DUP2 DUP6 PUSH2 0x28C1 JUMP JUMPDEST SWAP4 POP PUSH2 0x2936 DUP4 PUSH2 0x28D2 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2967 JUMPI DUP2 MLOAD PUSH2 0x294E DUP9 DUP3 PUSH2 0x28F1 JUMP JUMPDEST SWAP8 POP PUSH2 0x2959 DUP4 PUSH2 0x2909 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x293A JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE0 DUP3 ADD SWAP1 POP PUSH2 0x2989 PUSH1 0x0 DUP4 ADD DUP11 PUSH2 0x2898 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x299B DUP2 DUP10 PUSH2 0x2490 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x29AF DUP2 DUP9 PUSH2 0x2490 JUMP JUMPDEST SWAP1 POP PUSH2 0x29BE PUSH1 0x60 DUP4 ADD DUP8 PUSH2 0x25FF JUMP JUMPDEST PUSH2 0x29CB PUSH1 0x80 DUP4 ADD DUP7 PUSH2 0x28A7 JUMP JUMPDEST PUSH2 0x29D8 PUSH1 0xA0 DUP4 ADD DUP6 PUSH2 0x26BD JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0xC0 DUP4 ADD MSTORE PUSH2 0x29EA DUP2 DUP5 PUSH2 0x2916 JUMP JUMPDEST SWAP1 POP SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2A0D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x28A7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2A1C DUP2 PUSH2 0x267C JUMP JUMPDEST DUP2 EQ PUSH2 0x2A27 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2A39 DUP2 PUSH2 0x2A13 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2A48 DUP2 PUSH2 0x26B3 JUMP JUMPDEST DUP2 EQ PUSH2 0x2A53 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2A65 DUP2 PUSH2 0x2A3F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x2A8A JUMPI PUSH2 0x2A89 PUSH2 0x24EB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2A98 DUP11 DUP3 DUP12 ADD PUSH2 0x253E JUMP JUMPDEST SWAP8 POP POP PUSH1 0x20 PUSH2 0x2AA9 DUP11 DUP3 DUP12 ADD PUSH2 0x253E JUMP JUMPDEST SWAP7 POP POP PUSH1 0x40 PUSH2 0x2ABA DUP11 DUP3 DUP12 ADD PUSH2 0x2574 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x60 PUSH2 0x2ACB DUP11 DUP3 DUP12 ADD PUSH2 0x2574 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x80 PUSH2 0x2ADC DUP11 DUP3 DUP12 ADD PUSH2 0x2A2A JUMP JUMPDEST SWAP4 POP POP PUSH1 0xA0 PUSH2 0x2AED DUP11 DUP3 DUP12 ADD PUSH2 0x2A56 JUMP JUMPDEST SWAP3 POP POP PUSH1 0xC0 PUSH2 0x2AFE DUP11 DUP3 DUP12 ADD PUSH2 0x2A56 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2B24 JUMPI PUSH2 0x2B23 PUSH2 0x24EB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2B32 DUP6 DUP3 DUP7 ADD PUSH2 0x253E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2B43 DUP6 DUP3 DUP7 ADD PUSH2 0x253E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x2B94 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x2BA7 JUMPI PUSH2 0x2BA6 PUSH2 0x2B4D JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2BD9 DUP4 DUP6 PUSH2 0x2BAD JUMP JUMPDEST SWAP4 POP PUSH2 0x2BE6 DUP4 DUP6 DUP5 PUSH2 0x2BBE JUMP JUMPDEST PUSH2 0x2BEF DUP4 PUSH2 0x247F JUMP JUMPDEST DUP5 ADD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x2C0F PUSH1 0x0 DUP4 ADD DUP10 PUSH2 0x28A7 JUMP JUMPDEST PUSH2 0x2C1C PUSH1 0x20 DUP4 ADD DUP9 PUSH2 0x28A7 JUMP JUMPDEST PUSH2 0x2C29 PUSH1 0x40 DUP4 ADD DUP8 PUSH2 0x25FF JUMP JUMPDEST PUSH2 0x2C36 PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x25FF JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x2C49 DUP2 DUP5 DUP7 PUSH2 0x2BCD JUMP JUMPDEST SWAP1 POP SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2C65 DUP2 PUSH2 0x2A3F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2C81 JUMPI PUSH2 0x2C80 PUSH2 0x24EB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2C8F DUP5 DUP3 DUP6 ADD PUSH2 0x2C56 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2CD2 DUP3 PUSH2 0x2553 JUMP JUMPDEST SWAP2 POP PUSH2 0x2CDD DUP4 PUSH2 0x2553 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x2CF5 JUMPI PUSH2 0x2CF4 PUSH2 0x2C98 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2D06 DUP3 PUSH2 0x2553 JUMP JUMPDEST SWAP2 POP PUSH2 0x2D11 DUP4 PUSH2 0x2553 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x2D29 JUMPI PUSH2 0x2D28 PUSH2 0x2C98 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4549503731323A20556E696E697469616C697A65640000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2D65 PUSH1 0x15 DUP4 PUSH2 0x2444 JUMP JUMPDEST SWAP2 POP PUSH2 0x2D70 DUP3 PUSH2 0x2D2F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2D94 DUP2 PUSH2 0x2D58 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2E0D PUSH2 0x2E08 PUSH2 0x2E03 DUP5 PUSH2 0x2DCA JUMP JUMPDEST PUSH2 0x2DE8 JUMP JUMPDEST PUSH2 0x2DD4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2E1D DUP2 PUSH2 0x2DF2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2E38 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2E14 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC0 DUP3 ADD SWAP1 POP PUSH2 0x2E53 PUSH1 0x0 DUP4 ADD DUP10 PUSH2 0x26BD JUMP JUMPDEST PUSH2 0x2E60 PUSH1 0x20 DUP4 ADD DUP9 PUSH2 0x28A7 JUMP JUMPDEST PUSH2 0x2E6D PUSH1 0x40 DUP4 ADD DUP8 PUSH2 0x28A7 JUMP JUMPDEST PUSH2 0x2E7A PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x25FF JUMP JUMPDEST PUSH2 0x2E87 PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0x25FF JUMP JUMPDEST PUSH2 0x2E94 PUSH1 0xA0 DUP4 ADD DUP5 PUSH2 0x25FF JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2EB4 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x28A7 JUMP JUMPDEST PUSH2 0x2EC1 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x28A7 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2EDD PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x28A7 JUMP JUMPDEST PUSH2 0x2EEA PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x25FF JUMP JUMPDEST PUSH2 0x2EF7 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x25FF JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x2F14 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x26BD JUMP JUMPDEST PUSH2 0x2F21 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x26BD JUMP JUMPDEST PUSH2 0x2F2E PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x26BD JUMP JUMPDEST PUSH2 0x2F3B PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x25FF JUMP JUMPDEST PUSH2 0x2F48 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x28A7 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH2 0x2FB4 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x2F77 JUMP JUMPDEST PUSH2 0x2FBE DUP7 DUP4 PUSH2 0x2F77 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2FF1 PUSH2 0x2FEC PUSH2 0x2FE7 DUP5 PUSH2 0x2553 JUMP JUMPDEST PUSH2 0x2DE8 JUMP JUMPDEST PUSH2 0x2553 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x300B DUP4 PUSH2 0x2FD6 JUMP JUMPDEST PUSH2 0x301F PUSH2 0x3017 DUP3 PUSH2 0x2FF8 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x2F84 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x3034 PUSH2 0x3027 JUMP JUMPDEST PUSH2 0x303F DUP2 DUP5 DUP5 PUSH2 0x3002 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x3063 JUMPI PUSH2 0x3058 PUSH1 0x0 DUP3 PUSH2 0x302C JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x3045 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x30A8 JUMPI PUSH2 0x3079 DUP2 PUSH2 0x2F52 JUMP JUMPDEST PUSH2 0x3082 DUP5 PUSH2 0x2F67 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x3091 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x30A5 PUSH2 0x309D DUP6 PUSH2 0x2F67 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x3044 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x30CB PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x30AD JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x30E4 DUP4 DUP4 PUSH2 0x30BA JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x30FD DUP3 PUSH2 0x2439 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3116 JUMPI PUSH2 0x3115 PUSH2 0x2D9B JUMP JUMPDEST JUMPDEST PUSH2 0x3120 DUP3 SLOAD PUSH2 0x2B7C JUMP JUMPDEST PUSH2 0x312B DUP3 DUP3 DUP6 PUSH2 0x3067 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x315E JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x314C JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x3156 DUP6 DUP3 PUSH2 0x30D8 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x31BE JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x316C DUP7 PUSH2 0x2F52 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x3194 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x316F JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x31B1 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x31AD PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x30BA JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x31DB PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x26BD JUMP JUMPDEST PUSH2 0x31E8 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x2689 JUMP JUMPDEST PUSH2 0x31F5 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x26BD JUMP JUMPDEST PUSH2 0x3202 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x26BD JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAF CREATE2 0xE5 0xA7 MLOAD 0xA5 PUSH18 0x612F6FAC27CCC74E17FE33BF1934538A501D 0x2B BYTE PUSH20 0x3FC5C8CF64736F6C634300081400330000000000 ","sourceMap":"730:1070:23:-:0;;;965:53;;;;;;;;;;989:22;:20;;;:22;;:::i;:::-;730:1070;;7711:422:1;7826:30;7859:26;:24;;;:26;;:::i;:::-;7826:59;;7900:1;:15;;;;;;;;;;;;7896:76;;;7938:23;;;;;;;;;;;;;;7896:76;8003:16;7985:34;;:1;:14;;;;;;;;;;;;:34;;;7981:146;;8052:16;8035:1;:14;;;:33;;;;;;;;;;;;;;;;;;8087:29;8099:16;8087:29;;;;;;:::i;:::-;;;;;;;;7981:146;7760:373;7711:422::o;8737:170::-;8795:30;8870:21;8860:31;;8737:170;:::o;7:101:24:-;43:7;83:18;76:5;72:30;61:41;;7:101;;;:::o;114:115::-;199:23;216:5;199:23;:::i;:::-;194:3;187:36;114:115;;:::o;235:218::-;326:4;364:2;353:9;349:18;341:26;;377:69;443:1;432:9;428:17;419:6;377:69;:::i;:::-;235:218;;;;:::o;730:1070:23:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@DOMAIN_SEPARATOR_1608":{"entryPoint":1555,"id":1608,"parameterSlots":0,"returnSlots":1},"@_EIP712NameHash_2233":{"entryPoint":8418,"id":2233,"parameterSlots":0,"returnSlots":1},"@_EIP712Name_2165":{"entryPoint":5823,"id":2165,"parameterSlots":0,"returnSlots":1},"@_EIP712VersionHash_2285":{"entryPoint":8542,"id":2285,"parameterSlots":0,"returnSlots":1},"@_EIP712Version_2181":{"entryPoint":5984,"id":2181,"parameterSlots":0,"returnSlots":1},"@__EIP712_init_unchained_2039":{"entryPoint":7644,"id":2039,"parameterSlots":2,"returnSlots":0},"@__ERC20Burnable_init_1086":{"entryPoint":6247,"id":1086,"parameterSlots":0,"returnSlots":0},"@__ERC20FlashMint_init_1170":{"entryPoint":6369,"id":1170,"parameterSlots":0,"returnSlots":0},"@__ERC20Pausable_init_1411":{"entryPoint":6257,"id":1411,"parameterSlots":0,"returnSlots":0},"@__ERC20Permit_init_1496":{"entryPoint":6295,"id":1496,"parameterSlots":1,"returnSlots":0},"@__ERC20_init_516":{"entryPoint":6225,"id":516,"parameterSlots":2,"returnSlots":0},"@__ERC20_init_unchained_544":{"entryPoint":7397,"id":544,"parameterSlots":2,"returnSlots":0},"@__Ownable_init_54":{"entryPoint":6275,"id":54,"parameterSlots":1,"returnSlots":0},"@__Ownable_init_unchained_81":{"entryPoint":7510,"id":81,"parameterSlots":1,"returnSlots":0},"@__Pausable_init_unchained_1836":{"entryPoint":7458,"id":1836,"parameterSlots":0,"returnSlots":0},"@_approve_1016":{"entryPoint":6562,"id":1016,"parameterSlots":4,"returnSlots":0},"@_approve_948":{"entryPoint":4388,"id":948,"parameterSlots":3,"returnSlots":0},"@_buildDomainSeparator_2072":{"entryPoint":7064,"id":2072,"parameterSlots":0,"returnSlots":1},"@_burn_930":{"entryPoint":5192,"id":930,"parameterSlots":2,"returnSlots":0},"@_checkInitializing_370":{"entryPoint":7333,"id":370,"parameterSlots":0,"returnSlots":0},"@_checkOwner_122":{"entryPoint":4813,"id":122,"parameterSlots":0,"returnSlots":0},"@_domainSeparatorV4_2049":{"entryPoint":4798,"id":2049,"parameterSlots":0,"returnSlots":1},"@_flashFeeReceiver_1259":{"entryPoint":5362,"id":1259,"parameterSlots":0,"returnSlots":1},"@_flashFee_1247":{"entryPoint":6554,"id":1247,"parameterSlots":2,"returnSlots":1},"@_getEIP712Storage_1983":{"entryPoint":5783,"id":1983,"parameterSlots":0,"returnSlots":1},"@_getERC20Storage_500":{"entryPoint":4340,"id":500,"parameterSlots":0,"returnSlots":1},"@_getInitializableStorage_447":{"entryPoint":6185,"id":447,"parameterSlots":0,"returnSlots":1},"@_getNoncesStorage_1686":{"entryPoint":7228,"id":1686,"parameterSlots":0,"returnSlots":1},"@_getOwnableStorage_25":{"entryPoint":6145,"id":25,"parameterSlots":0,"returnSlots":1},"@_getPausableStorage_1792":{"entryPoint":5322,"id":1792,"parameterSlots":0,"returnSlots":1},"@_hashTypedDataV4_2088":{"entryPoint":6480,"id":2088,"parameterSlots":1,"returnSlots":1},"@_isInitializing_438":{"entryPoint":8666,"id":438,"parameterSlots":0,"returnSlots":1},"@_mint_897":{"entryPoint":5062,"id":897,"parameterSlots":2,"returnSlots":0},"@_msgSender_1637":{"entryPoint":4380,"id":1637,"parameterSlots":0,"returnSlots":1},"@_pause_1917":{"entryPoint":5669,"id":1917,"parameterSlots":0,"returnSlots":0},"@_requireNotPaused_1880":{"entryPoint":7268,"id":1880,"parameterSlots":0,"returnSlots":0},"@_requirePaused_1893":{"entryPoint":7164,"id":1893,"parameterSlots":0,"returnSlots":0},"@_spendAllowance_1064":{"entryPoint":4406,"id":1064,"parameterSlots":3,"returnSlots":0},"@_throwError_3249":{"entryPoint":8038,"id":3249,"parameterSlots":2,"returnSlots":0},"@_transferOwnership_193":{"entryPoint":5367,"id":193,"parameterSlots":1,"returnSlots":0},"@_transfer_772":{"entryPoint":4554,"id":772,"parameterSlots":3,"returnSlots":0},"@_unpause_1941":{"entryPoint":4948,"id":1941,"parameterSlots":0,"returnSlots":0},"@_update_1439":{"entryPoint":8394,"id":1439,"parameterSlots":3,"returnSlots":0},"@_update_4598":{"entryPoint":7048,"id":4598,"parameterSlots":3,"returnSlots":0},"@_update_864":{"entryPoint":8698,"id":864,"parameterSlots":3,"returnSlots":0},"@_useNonce_1740":{"entryPoint":6379,"id":1740,"parameterSlots":1,"returnSlots":1},"@allowance_669":{"entryPoint":4057,"id":669,"parameterSlots":2,"returnSlots":1},"@approve_693":{"entryPoint":1440,"id":693,"parameterSlots":2,"returnSlots":1},"@balanceOf_621":{"entryPoint":2295,"id":621,"parameterSlots":1,"returnSlots":1},"@burnFrom_1126":{"entryPoint":2402,"id":1126,"parameterSlots":2,"returnSlots":0},"@burn_1105":{"entryPoint":1610,"id":1105,"parameterSlots":1,"returnSlots":0},"@decimals_585":{"entryPoint":1546,"id":585,"parameterSlots":0,"returnSlots":1},"@eip712Domain_2149":{"entryPoint":2470,"id":2149,"parameterSlots":0,"returnSlots":7},"@flashFee_1230":{"entryPoint":3925,"id":1230,"parameterSlots":2,"returnSlots":1},"@flashLoan_1386":{"entryPoint":1667,"id":1386,"parameterSlots":5,"returnSlots":1},"@initialize_4544":{"entryPoint":2996,"id":4544,"parameterSlots":1,"returnSlots":0},"@maxFlashLoan_1202":{"entryPoint":2176,"id":1202,"parameterSlots":1,"returnSlots":1},"@mint_4577":{"entryPoint":1588,"id":4577,"parameterSlots":2,"returnSlots":0},"@name_560":{"entryPoint":1279,"id":560,"parameterSlots":0,"returnSlots":1},"@nonces_1598":{"entryPoint":2434,"id":1598,"parameterSlots":1,"returnSlots":1},"@nonces_1718":{"entryPoint":5582,"id":1718,"parameterSlots":1,"returnSlots":1},"@owner_105":{"entryPoint":2744,"id":105,"parameterSlots":0,"returnSlots":1},"@pause_4553":{"entryPoint":2452,"id":4553,"parameterSlots":0,"returnSlots":0},"@paused_1868":{"entryPoint":1630,"id":1868,"parameterSlots":0,"returnSlots":1},"@permit_1581":{"entryPoint":3597,"id":1581,"parameterSlots":7,"returnSlots":0},"@recover_3200":{"entryPoint":6506,"id":3200,"parameterSlots":4,"returnSlots":1},"@renounceOwnership_136":{"entryPoint":2382,"id":136,"parameterSlots":0,"returnSlots":0},"@symbol_576":{"entryPoint":2800,"id":576,"parameterSlots":0,"returnSlots":1},"@toTypedDataHash_3323":{"entryPoint":7729,"id":3323,"parameterSlots":2,"returnSlots":1},"@totalSupply_601":{"entryPoint":1475,"id":601,"parameterSlots":0,"returnSlots":1},"@transferFrom_725":{"entryPoint":1499,"id":725,"parameterSlots":3,"returnSlots":1},"@transferOwnership_164":{"entryPoint":4206,"id":164,"parameterSlots":1,"returnSlots":0},"@transfer_645":{"entryPoint":2961,"id":645,"parameterSlots":2,"returnSlots":1},"@tryRecover_3164":{"entryPoint":7794,"id":3164,"parameterSlots":4,"returnSlots":3},"@unpause_4562":{"entryPoint":1570,"id":4562,"parameterSlots":0,"returnSlots":0},"abi_decode_t_address":{"entryPoint":9534,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes32":{"entryPoint":10838,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes32_fromMemory":{"entryPoint":11350,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes_calldata_ptr":{"entryPoint":10081,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_t_contract$_IERC3156FlashBorrower_$2306":{"entryPoint":10045,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":9588,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint8":{"entryPoint":10794,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":10303,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":11021,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":9769,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32":{"entryPoint":10859,"id":null,"parameterSlots":2,"returnSlots":7},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":9609,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes32_fromMemory":{"entryPoint":11371,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_contract$_IERC3156FlashBorrower_$2306t_addresst_uint256t_bytes_calldata_ptr":{"entryPoint":10167,"id":null,"parameterSlots":2,"returnSlots":5},"abi_decode_tuple_t_uint256":{"entryPoint":9959,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encodeUpdatedPos_t_uint256_to_t_uint256":{"entryPoint":10481,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":10407,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack":{"entryPoint":10518,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":9685,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes1_to_t_bytes1_fromStack":{"entryPoint":10392,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes32_to_t_bytes32_fromStack":{"entryPoint":9917,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_fromStack":{"entryPoint":11213,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_t_rational_1_by_1_to_t_uint64_fromStack":{"entryPoint":11796,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":9360,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_2e5045ff73280aa8e8acd8c82710f23812497f87f7f576e2220a2ddd0d45eade_to_t_string_memory_ptr_fromStack":{"entryPoint":11608,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256":{"entryPoint":10466,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":9727,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint8_to_t_uint8_fromStack":{"entryPoint":9865,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":10744,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed":{"entryPoint":11935,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_calldata_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":11258,"id":null,"parameterSlots":7,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":11976,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":9700,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__to_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":10612,"id":null,"parameterSlots":8,"returnSlots":1},"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed":{"entryPoint":9932,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":11838,"id":null,"parameterSlots":7,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed":{"entryPoint":12031,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed":{"entryPoint":12742,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed":{"entryPoint":11811,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":9417,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_2e5045ff73280aa8e8acd8c82710f23812497f87f7f576e2220a2ddd0d45eade__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":11643,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":9742,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed":{"entryPoint":9880,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":10450,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_string_storage":{"entryPoint":12114,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":10422,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":9273,"id":null,"parameterSlots":1,"returnSlots":1},"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":10505,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack":{"entryPoint":10433,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack":{"entryPoint":11181,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":9284,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":11463,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":11515,"id":null,"parameterSlots":2,"returnSlots":1},"clean_up_bytearray_end_slots_t_string_storage":{"entryPoint":12391,"id":null,"parameterSlots":3,"returnSlots":0},"cleanup_t_address":{"entryPoint":9493,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":9673,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes1":{"entryPoint":10348,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":9907,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_contract$_IERC3156FlashBorrower_$2306":{"entryPoint":10004,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_rational_1_by_1":{"entryPoint":11722,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":9461,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":9555,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint64":{"entryPoint":11732,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint8":{"entryPoint":9852,"id":null,"parameterSlots":1,"returnSlots":1},"clear_storage_range_t_bytes1":{"entryPoint":12356,"id":null,"parameterSlots":2,"returnSlots":0},"convert_t_rational_1_by_1_to_t_uint64":{"entryPoint":11762,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint256_to_t_uint256":{"entryPoint":12246,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":12532,"id":null,"parameterSlots":2,"returnSlots":0},"copy_calldata_to_memory_with_cleanup":{"entryPoint":11198,"id":null,"parameterSlots":3,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":9301,"id":null,"parameterSlots":3,"returnSlots":0},"divide_by_32_ceil":{"entryPoint":12135,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":11132,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":12504,"id":null,"parameterSlots":2,"returnSlots":1},"identity":{"entryPoint":11752,"id":null,"parameterSlots":1,"returnSlots":1},"mask_bytes_dynamic":{"entryPoint":12474,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x11":{"entryPoint":11416,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x21":{"entryPoint":12811,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":11085,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":11675,"id":null,"parameterSlots":0,"returnSlots":0},"prepare_store_t_uint256":{"entryPoint":12280,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490":{"entryPoint":10071,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":10066,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef":{"entryPoint":10076,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":9456,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":9451,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":9343,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_dynamic":{"entryPoint":12151,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":12461,"id":null,"parameterSlots":2,"returnSlots":1},"storage_set_to_zero_t_uint256":{"entryPoint":12332,"id":null,"parameterSlots":2,"returnSlots":0},"store_literal_in_memory_2e5045ff73280aa8e8acd8c82710f23812497f87f7f576e2220a2ddd0d45eade":{"entryPoint":11567,"id":null,"parameterSlots":1,"returnSlots":0},"update_byte_slice_dynamic32":{"entryPoint":12164,"id":null,"parameterSlots":3,"returnSlots":1},"update_storage_value_t_uint256_to_t_uint256":{"entryPoint":12290,"id":null,"parameterSlots":3,"returnSlots":0},"validator_revert_t_address":{"entryPoint":9511,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes32":{"entryPoint":10815,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_contract$_IERC3156FlashBorrower_$2306":{"entryPoint":10022,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":9565,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint8":{"entryPoint":10771,"id":null,"parameterSlots":1,"returnSlots":0},"zero_value_for_split_t_uint256":{"entryPoint":12327,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:26429:24","statements":[{"body":{"nodeType":"YulBlock","src":"66:40:24","statements":[{"nodeType":"YulAssignment","src":"77:22:24","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"93:5:24"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"87:5:24"},"nodeType":"YulFunctionCall","src":"87:12:24"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"77:6:24"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"49:5:24","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"59:6:24","type":""}],"src":"7:99:24"},{"body":{"nodeType":"YulBlock","src":"208:73:24","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"225:3:24"},{"name":"length","nodeType":"YulIdentifier","src":"230:6:24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"218:6:24"},"nodeType":"YulFunctionCall","src":"218:19:24"},"nodeType":"YulExpressionStatement","src":"218:19:24"},{"nodeType":"YulAssignment","src":"246:29:24","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"265:3:24"},{"kind":"number","nodeType":"YulLiteral","src":"270:4:24","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"261:3:24"},"nodeType":"YulFunctionCall","src":"261:14:24"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"246:11:24"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"180:3:24","type":""},{"name":"length","nodeType":"YulTypedName","src":"185:6:24","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"196:11:24","type":""}],"src":"112:169:24"},{"body":{"nodeType":"YulBlock","src":"349:184:24","statements":[{"nodeType":"YulVariableDeclaration","src":"359:10:24","value":{"kind":"number","nodeType":"YulLiteral","src":"368:1:24","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"363:1:24","type":""}]},{"body":{"nodeType":"YulBlock","src":"428:63:24","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"453:3:24"},{"name":"i","nodeType":"YulIdentifier","src":"458:1:24"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"449:3:24"},"nodeType":"YulFunctionCall","src":"449:11:24"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"472:3:24"},{"name":"i","nodeType":"YulIdentifier","src":"477:1:24"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"468:3:24"},"nodeType":"YulFunctionCall","src":"468:11:24"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"462:5:24"},"nodeType":"YulFunctionCall","src":"462:18:24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"442:6:24"},"nodeType":"YulFunctionCall","src":"442:39:24"},"nodeType":"YulExpressionStatement","src":"442:39:24"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"389:1:24"},{"name":"length","nodeType":"YulIdentifier","src":"392:6:24"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"386:2:24"},"nodeType":"YulFunctionCall","src":"386:13:24"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"400:19:24","statements":[{"nodeType":"YulAssignment","src":"402:15:24","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"411:1:24"},{"kind":"number","nodeType":"YulLiteral","src":"414:2:24","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"407:3:24"},"nodeType":"YulFunctionCall","src":"407:10:24"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"402:1:24"}]}]},"pre":{"nodeType":"YulBlock","src":"382:3:24","statements":[]},"src":"378:113:24"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"511:3:24"},{"name":"length","nodeType":"YulIdentifier","src":"516:6:24"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"507:3:24"},"nodeType":"YulFunctionCall","src":"507:16:24"},{"kind":"number","nodeType":"YulLiteral","src":"525:1:24","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"500:6:24"},"nodeType":"YulFunctionCall","src":"500:27:24"},"nodeType":"YulExpressionStatement","src":"500:27:24"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"331:3:24","type":""},{"name":"dst","nodeType":"YulTypedName","src":"336:3:24","type":""},{"name":"length","nodeType":"YulTypedName","src":"341:6:24","type":""}],"src":"287:246:24"},{"body":{"nodeType":"YulBlock","src":"587:54:24","statements":[{"nodeType":"YulAssignment","src":"597:38:24","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"615:5:24"},{"kind":"number","nodeType":"YulLiteral","src":"622:2:24","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"611:3:24"},"nodeType":"YulFunctionCall","src":"611:14:24"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"631:2:24","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"627:3:24"},"nodeType":"YulFunctionCall","src":"627:7:24"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"607:3:24"},"nodeType":"YulFunctionCall","src":"607:28:24"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"597:6:24"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"570:5:24","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"580:6:24","type":""}],"src":"539:102:24"},{"body":{"nodeType":"YulBlock","src":"739:285:24","statements":[{"nodeType":"YulVariableDeclaration","src":"749:53:24","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"796:5:24"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"763:32:24"},"nodeType":"YulFunctionCall","src":"763:39:24"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"753:6:24","type":""}]},{"nodeType":"YulAssignment","src":"811:78:24","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"877:3:24"},{"name":"length","nodeType":"YulIdentifier","src":"882:6:24"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"818:58:24"},"nodeType":"YulFunctionCall","src":"818:71:24"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"811:3:24"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"937:5:24"},{"kind":"number","nodeType":"YulLiteral","src":"944:4:24","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"933:3:24"},"nodeType":"YulFunctionCall","src":"933:16:24"},{"name":"pos","nodeType":"YulIdentifier","src":"951:3:24"},{"name":"length","nodeType":"YulIdentifier","src":"956:6:24"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"898:34:24"},"nodeType":"YulFunctionCall","src":"898:65:24"},"nodeType":"YulExpressionStatement","src":"898:65:24"},{"nodeType":"YulAssignment","src":"972:46:24","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"983:3:24"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1010:6:24"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"988:21:24"},"nodeType":"YulFunctionCall","src":"988:29:24"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"979:3:24"},"nodeType":"YulFunctionCall","src":"979:39:24"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"972:3:24"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"720:5:24","type":""},{"name":"pos","nodeType":"YulTypedName","src":"727:3:24","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"735:3:24","type":""}],"src":"647:377:24"},{"body":{"nodeType":"YulBlock","src":"1148:195:24","statements":[{"nodeType":"YulAssignment","src":"1158:26:24","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1170:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"1181:2:24","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1166:3:24"},"nodeType":"YulFunctionCall","src":"1166:18:24"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1158:4:24"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1205:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"1216:1:24","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1201:3:24"},"nodeType":"YulFunctionCall","src":"1201:17:24"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"1224:4:24"},{"name":"headStart","nodeType":"YulIdentifier","src":"1230:9:24"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1220:3:24"},"nodeType":"YulFunctionCall","src":"1220:20:24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1194:6:24"},"nodeType":"YulFunctionCall","src":"1194:47:24"},"nodeType":"YulExpressionStatement","src":"1194:47:24"},{"nodeType":"YulAssignment","src":"1250:86:24","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1322:6:24"},{"name":"tail","nodeType":"YulIdentifier","src":"1331:4:24"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"1258:63:24"},"nodeType":"YulFunctionCall","src":"1258:78:24"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1250:4:24"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1120:9:24","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1132:6:24","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1143:4:24","type":""}],"src":"1030:313:24"},{"body":{"nodeType":"YulBlock","src":"1389:35:24","statements":[{"nodeType":"YulAssignment","src":"1399:19:24","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1415:2:24","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1409:5:24"},"nodeType":"YulFunctionCall","src":"1409:9:24"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1399:6:24"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1382:6:24","type":""}],"src":"1349:75:24"},{"body":{"nodeType":"YulBlock","src":"1519:28:24","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1536:1:24","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1539:1:24","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1529:6:24"},"nodeType":"YulFunctionCall","src":"1529:12:24"},"nodeType":"YulExpressionStatement","src":"1529:12:24"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"1430:117:24"},{"body":{"nodeType":"YulBlock","src":"1642:28:24","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1659:1:24","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1662:1:24","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1652:6:24"},"nodeType":"YulFunctionCall","src":"1652:12:24"},"nodeType":"YulExpressionStatement","src":"1652:12:24"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"1553:117:24"},{"body":{"nodeType":"YulBlock","src":"1721:81:24","statements":[{"nodeType":"YulAssignment","src":"1731:65:24","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1746:5:24"},{"kind":"number","nodeType":"YulLiteral","src":"1753:42:24","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1742:3:24"},"nodeType":"YulFunctionCall","src":"1742:54:24"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1731:7:24"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1703:5:24","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1713:7:24","type":""}],"src":"1676:126:24"},{"body":{"nodeType":"YulBlock","src":"1853:51:24","statements":[{"nodeType":"YulAssignment","src":"1863:35:24","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1892:5:24"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"1874:17:24"},"nodeType":"YulFunctionCall","src":"1874:24:24"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1863:7:24"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1835:5:24","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1845:7:24","type":""}],"src":"1808:96:24"},{"body":{"nodeType":"YulBlock","src":"1953:79:24","statements":[{"body":{"nodeType":"YulBlock","src":"2010:16:24","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2019:1:24","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2022:1:24","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2012:6:24"},"nodeType":"YulFunctionCall","src":"2012:12:24"},"nodeType":"YulExpressionStatement","src":"2012:12:24"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1976:5:24"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2001:5:24"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"1983:17:24"},"nodeType":"YulFunctionCall","src":"1983:24:24"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1973:2:24"},"nodeType":"YulFunctionCall","src":"1973:35:24"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1966:6:24"},"nodeType":"YulFunctionCall","src":"1966:43:24"},"nodeType":"YulIf","src":"1963:63:24"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1946:5:24","type":""}],"src":"1910:122:24"},{"body":{"nodeType":"YulBlock","src":"2090:87:24","statements":[{"nodeType":"YulAssignment","src":"2100:29:24","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2122:6:24"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2109:12:24"},"nodeType":"YulFunctionCall","src":"2109:20:24"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2100:5:24"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2165:5:24"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"2138:26:24"},"nodeType":"YulFunctionCall","src":"2138:33:24"},"nodeType":"YulExpressionStatement","src":"2138:33:24"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2068:6:24","type":""},{"name":"end","nodeType":"YulTypedName","src":"2076:3:24","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2084:5:24","type":""}],"src":"2038:139:24"},{"body":{"nodeType":"YulBlock","src":"2228:32:24","statements":[{"nodeType":"YulAssignment","src":"2238:16:24","value":{"name":"value","nodeType":"YulIdentifier","src":"2249:5:24"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2238:7:24"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2210:5:24","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2220:7:24","type":""}],"src":"2183:77:24"},{"body":{"nodeType":"YulBlock","src":"2309:79:24","statements":[{"body":{"nodeType":"YulBlock","src":"2366:16:24","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2375:1:24","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2378:1:24","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2368:6:24"},"nodeType":"YulFunctionCall","src":"2368:12:24"},"nodeType":"YulExpressionStatement","src":"2368:12:24"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2332:5:24"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2357:5:24"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"2339:17:24"},"nodeType":"YulFunctionCall","src":"2339:24:24"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2329:2:24"},"nodeType":"YulFunctionCall","src":"2329:35:24"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2322:6:24"},"nodeType":"YulFunctionCall","src":"2322:43:24"},"nodeType":"YulIf","src":"2319:63:24"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2302:5:24","type":""}],"src":"2266:122:24"},{"body":{"nodeType":"YulBlock","src":"2446:87:24","statements":[{"nodeType":"YulAssignment","src":"2456:29:24","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2478:6:24"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2465:12:24"},"nodeType":"YulFunctionCall","src":"2465:20:24"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2456:5:24"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2521:5:24"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"2494:26:24"},"nodeType":"YulFunctionCall","src":"2494:33:24"},"nodeType":"YulExpressionStatement","src":"2494:33:24"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2424:6:24","type":""},{"name":"end","nodeType":"YulTypedName","src":"2432:3:24","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2440:5:24","type":""}],"src":"2394:139:24"},{"body":{"nodeType":"YulBlock","src":"2622:391:24","statements":[{"body":{"nodeType":"YulBlock","src":"2668:83:24","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2670:77:24"},"nodeType":"YulFunctionCall","src":"2670:79:24"},"nodeType":"YulExpressionStatement","src":"2670:79:24"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2643:7:24"},{"name":"headStart","nodeType":"YulIdentifier","src":"2652:9:24"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2639:3:24"},"nodeType":"YulFunctionCall","src":"2639:23:24"},{"kind":"number","nodeType":"YulLiteral","src":"2664:2:24","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2635:3:24"},"nodeType":"YulFunctionCall","src":"2635:32:24"},"nodeType":"YulIf","src":"2632:119:24"},{"nodeType":"YulBlock","src":"2761:117:24","statements":[{"nodeType":"YulVariableDeclaration","src":"2776:15:24","value":{"kind":"number","nodeType":"YulLiteral","src":"2790:1:24","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2780:6:24","type":""}]},{"nodeType":"YulAssignment","src":"2805:63:24","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2840:9:24"},{"name":"offset","nodeType":"YulIdentifier","src":"2851:6:24"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2836:3:24"},"nodeType":"YulFunctionCall","src":"2836:22:24"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2860:7:24"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"2815:20:24"},"nodeType":"YulFunctionCall","src":"2815:53:24"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2805:6:24"}]}]},{"nodeType":"YulBlock","src":"2888:118:24","statements":[{"nodeType":"YulVariableDeclaration","src":"2903:16:24","value":{"kind":"number","nodeType":"YulLiteral","src":"2917:2:24","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2907:6:24","type":""}]},{"nodeType":"YulAssignment","src":"2933:63:24","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2968:9:24"},{"name":"offset","nodeType":"YulIdentifier","src":"2979:6:24"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2964:3:24"},"nodeType":"YulFunctionCall","src":"2964:22:24"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2988:7:24"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"2943:20:24"},"nodeType":"YulFunctionCall","src":"2943:53:24"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2933:6:24"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2584:9:24","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2595:7:24","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2607:6:24","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2615:6:24","type":""}],"src":"2539:474:24"},{"body":{"nodeType":"YulBlock","src":"3061:48:24","statements":[{"nodeType":"YulAssignment","src":"3071:32:24","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3096:5:24"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3089:6:24"},"nodeType":"YulFunctionCall","src":"3089:13:24"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3082:6:24"},"nodeType":"YulFunctionCall","src":"3082:21:24"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3071:7:24"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3043:5:24","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3053:7:24","type":""}],"src":"3019:90:24"},{"body":{"nodeType":"YulBlock","src":"3174:50:24","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3191:3:24"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3211:5:24"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"3196:14:24"},"nodeType":"YulFunctionCall","src":"3196:21:24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3184:6:24"},"nodeType":"YulFunctionCall","src":"3184:34:24"},"nodeType":"YulExpressionStatement","src":"3184:34:24"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3162:5:24","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3169:3:24","type":""}],"src":"3115:109:24"},{"body":{"nodeType":"YulBlock","src":"3322:118:24","statements":[{"nodeType":"YulAssignment","src":"3332:26:24","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3344:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"3355:2:24","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3340:3:24"},"nodeType":"YulFunctionCall","src":"3340:18:24"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3332:4:24"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3406:6:24"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3419:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"3430:1:24","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3415:3:24"},"nodeType":"YulFunctionCall","src":"3415:17:24"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"3368:37:24"},"nodeType":"YulFunctionCall","src":"3368:65:24"},"nodeType":"YulExpressionStatement","src":"3368:65:24"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3294:9:24","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3306:6:24","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3317:4:24","type":""}],"src":"3230:210:24"},{"body":{"nodeType":"YulBlock","src":"3511:53:24","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3528:3:24"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3551:5:24"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"3533:17:24"},"nodeType":"YulFunctionCall","src":"3533:24:24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3521:6:24"},"nodeType":"YulFunctionCall","src":"3521:37:24"},"nodeType":"YulExpressionStatement","src":"3521:37:24"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3499:5:24","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3506:3:24","type":""}],"src":"3446:118:24"},{"body":{"nodeType":"YulBlock","src":"3668:124:24","statements":[{"nodeType":"YulAssignment","src":"3678:26:24","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3690:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"3701:2:24","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3686:3:24"},"nodeType":"YulFunctionCall","src":"3686:18:24"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3678:4:24"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3758:6:24"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3771:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"3782:1:24","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3767:3:24"},"nodeType":"YulFunctionCall","src":"3767:17:24"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"3714:43:24"},"nodeType":"YulFunctionCall","src":"3714:71:24"},"nodeType":"YulExpressionStatement","src":"3714:71:24"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3640:9:24","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3652:6:24","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3663:4:24","type":""}],"src":"3570:222:24"},{"body":{"nodeType":"YulBlock","src":"3898:519:24","statements":[{"body":{"nodeType":"YulBlock","src":"3944:83:24","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3946:77:24"},"nodeType":"YulFunctionCall","src":"3946:79:24"},"nodeType":"YulExpressionStatement","src":"3946:79:24"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3919:7:24"},{"name":"headStart","nodeType":"YulIdentifier","src":"3928:9:24"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3915:3:24"},"nodeType":"YulFunctionCall","src":"3915:23:24"},{"kind":"number","nodeType":"YulLiteral","src":"3940:2:24","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3911:3:24"},"nodeType":"YulFunctionCall","src":"3911:32:24"},"nodeType":"YulIf","src":"3908:119:24"},{"nodeType":"YulBlock","src":"4037:117:24","statements":[{"nodeType":"YulVariableDeclaration","src":"4052:15:24","value":{"kind":"number","nodeType":"YulLiteral","src":"4066:1:24","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4056:6:24","type":""}]},{"nodeType":"YulAssignment","src":"4081:63:24","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4116:9:24"},{"name":"offset","nodeType":"YulIdentifier","src":"4127:6:24"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4112:3:24"},"nodeType":"YulFunctionCall","src":"4112:22:24"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4136:7:24"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4091:20:24"},"nodeType":"YulFunctionCall","src":"4091:53:24"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4081:6:24"}]}]},{"nodeType":"YulBlock","src":"4164:118:24","statements":[{"nodeType":"YulVariableDeclaration","src":"4179:16:24","value":{"kind":"number","nodeType":"YulLiteral","src":"4193:2:24","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4183:6:24","type":""}]},{"nodeType":"YulAssignment","src":"4209:63:24","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4244:9:24"},{"name":"offset","nodeType":"YulIdentifier","src":"4255:6:24"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4240:3:24"},"nodeType":"YulFunctionCall","src":"4240:22:24"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4264:7:24"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4219:20:24"},"nodeType":"YulFunctionCall","src":"4219:53:24"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4209:6:24"}]}]},{"nodeType":"YulBlock","src":"4292:118:24","statements":[{"nodeType":"YulVariableDeclaration","src":"4307:16:24","value":{"kind":"number","nodeType":"YulLiteral","src":"4321:2:24","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4311:6:24","type":""}]},{"nodeType":"YulAssignment","src":"4337:63:24","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4372:9:24"},{"name":"offset","nodeType":"YulIdentifier","src":"4383:6:24"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4368:3:24"},"nodeType":"YulFunctionCall","src":"4368:22:24"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4392:7:24"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"4347:20:24"},"nodeType":"YulFunctionCall","src":"4347:53:24"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"4337:6:24"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3852:9:24","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3863:7:24","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3875:6:24","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3883:6:24","type":""},{"name":"value2","nodeType":"YulTypedName","src":"3891:6:24","type":""}],"src":"3798:619:24"},{"body":{"nodeType":"YulBlock","src":"4466:43:24","statements":[{"nodeType":"YulAssignment","src":"4476:27:24","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4491:5:24"},{"kind":"number","nodeType":"YulLiteral","src":"4498:4:24","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4487:3:24"},"nodeType":"YulFunctionCall","src":"4487:16:24"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"4476:7:24"}]}]},"name":"cleanup_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4448:5:24","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"4458:7:24","type":""}],"src":"4423:86:24"},{"body":{"nodeType":"YulBlock","src":"4576:51:24","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4593:3:24"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4614:5:24"}],"functionName":{"name":"cleanup_t_uint8","nodeType":"YulIdentifier","src":"4598:15:24"},"nodeType":"YulFunctionCall","src":"4598:22:24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4586:6:24"},"nodeType":"YulFunctionCall","src":"4586:35:24"},"nodeType":"YulExpressionStatement","src":"4586:35:24"}]},"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4564:5:24","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4571:3:24","type":""}],"src":"4515:112:24"},{"body":{"nodeType":"YulBlock","src":"4727:120:24","statements":[{"nodeType":"YulAssignment","src":"4737:26:24","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4749:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"4760:2:24","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4745:3:24"},"nodeType":"YulFunctionCall","src":"4745:18:24"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4737:4:24"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4813:6:24"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4826:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"4837:1:24","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4822:3:24"},"nodeType":"YulFunctionCall","src":"4822:17:24"}],"functionName":{"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulIdentifier","src":"4773:39:24"},"nodeType":"YulFunctionCall","src":"4773:67:24"},"nodeType":"YulExpressionStatement","src":"4773:67:24"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4699:9:24","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4711:6:24","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4722:4:24","type":""}],"src":"4633:214:24"},{"body":{"nodeType":"YulBlock","src":"4898:32:24","statements":[{"nodeType":"YulAssignment","src":"4908:16:24","value":{"name":"value","nodeType":"YulIdentifier","src":"4919:5:24"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"4908:7:24"}]}]},"name":"cleanup_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4880:5:24","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"4890:7:24","type":""}],"src":"4853:77:24"},{"body":{"nodeType":"YulBlock","src":"5001:53:24","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5018:3:24"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5041:5:24"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"5023:17:24"},"nodeType":"YulFunctionCall","src":"5023:24:24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5011:6:24"},"nodeType":"YulFunctionCall","src":"5011:37:24"},"nodeType":"YulExpressionStatement","src":"5011:37:24"}]},"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4989:5:24","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4996:3:24","type":""}],"src":"4936:118:24"},{"body":{"nodeType":"YulBlock","src":"5158:124:24","statements":[{"nodeType":"YulAssignment","src":"5168:26:24","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5180:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"5191:2:24","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5176:3:24"},"nodeType":"YulFunctionCall","src":"5176:18:24"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5168:4:24"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5248:6:24"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5261:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"5272:1:24","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5257:3:24"},"nodeType":"YulFunctionCall","src":"5257:17:24"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"5204:43:24"},"nodeType":"YulFunctionCall","src":"5204:71:24"},"nodeType":"YulExpressionStatement","src":"5204:71:24"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5130:9:24","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5142:6:24","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5153:4:24","type":""}],"src":"5060:222:24"},{"body":{"nodeType":"YulBlock","src":"5354:263:24","statements":[{"body":{"nodeType":"YulBlock","src":"5400:83:24","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"5402:77:24"},"nodeType":"YulFunctionCall","src":"5402:79:24"},"nodeType":"YulExpressionStatement","src":"5402:79:24"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5375:7:24"},{"name":"headStart","nodeType":"YulIdentifier","src":"5384:9:24"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5371:3:24"},"nodeType":"YulFunctionCall","src":"5371:23:24"},{"kind":"number","nodeType":"YulLiteral","src":"5396:2:24","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5367:3:24"},"nodeType":"YulFunctionCall","src":"5367:32:24"},"nodeType":"YulIf","src":"5364:119:24"},{"nodeType":"YulBlock","src":"5493:117:24","statements":[{"nodeType":"YulVariableDeclaration","src":"5508:15:24","value":{"kind":"number","nodeType":"YulLiteral","src":"5522:1:24","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5512:6:24","type":""}]},{"nodeType":"YulAssignment","src":"5537:63:24","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5572:9:24"},{"name":"offset","nodeType":"YulIdentifier","src":"5583:6:24"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5568:3:24"},"nodeType":"YulFunctionCall","src":"5568:22:24"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5592:7:24"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"5547:20:24"},"nodeType":"YulFunctionCall","src":"5547:53:24"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5537:6:24"}]}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5324:9:24","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5335:7:24","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5347:6:24","type":""}],"src":"5288:329:24"},{"body":{"nodeType":"YulBlock","src":"5698:51:24","statements":[{"nodeType":"YulAssignment","src":"5708:35:24","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5737:5:24"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"5719:17:24"},"nodeType":"YulFunctionCall","src":"5719:24:24"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"5708:7:24"}]}]},"name":"cleanup_t_contract$_IERC3156FlashBorrower_$2306","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5680:5:24","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"5690:7:24","type":""}],"src":"5623:126:24"},{"body":{"nodeType":"YulBlock","src":"5828:109:24","statements":[{"body":{"nodeType":"YulBlock","src":"5915:16:24","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5924:1:24","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5927:1:24","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5917:6:24"},"nodeType":"YulFunctionCall","src":"5917:12:24"},"nodeType":"YulExpressionStatement","src":"5917:12:24"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5851:5:24"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5906:5:24"}],"functionName":{"name":"cleanup_t_contract$_IERC3156FlashBorrower_$2306","nodeType":"YulIdentifier","src":"5858:47:24"},"nodeType":"YulFunctionCall","src":"5858:54:24"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"5848:2:24"},"nodeType":"YulFunctionCall","src":"5848:65:24"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5841:6:24"},"nodeType":"YulFunctionCall","src":"5841:73:24"},"nodeType":"YulIf","src":"5838:93:24"}]},"name":"validator_revert_t_contract$_IERC3156FlashBorrower_$2306","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5821:5:24","type":""}],"src":"5755:182:24"},{"body":{"nodeType":"YulBlock","src":"6025:117:24","statements":[{"nodeType":"YulAssignment","src":"6035:29:24","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6057:6:24"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6044:12:24"},"nodeType":"YulFunctionCall","src":"6044:20:24"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"6035:5:24"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6130:5:24"}],"functionName":{"name":"validator_revert_t_contract$_IERC3156FlashBorrower_$2306","nodeType":"YulIdentifier","src":"6073:56:24"},"nodeType":"YulFunctionCall","src":"6073:63:24"},"nodeType":"YulExpressionStatement","src":"6073:63:24"}]},"name":"abi_decode_t_contract$_IERC3156FlashBorrower_$2306","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"6003:6:24","type":""},{"name":"end","nodeType":"YulTypedName","src":"6011:3:24","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"6019:5:24","type":""}],"src":"5943:199:24"},{"body":{"nodeType":"YulBlock","src":"6237:28:24","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6254:1:24","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6257:1:24","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6247:6:24"},"nodeType":"YulFunctionCall","src":"6247:12:24"},"nodeType":"YulExpressionStatement","src":"6247:12:24"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"6148:117:24"},{"body":{"nodeType":"YulBlock","src":"6360:28:24","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6377:1:24","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6380:1:24","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6370:6:24"},"nodeType":"YulFunctionCall","src":"6370:12:24"},"nodeType":"YulExpressionStatement","src":"6370:12:24"}]},"name":"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490","nodeType":"YulFunctionDefinition","src":"6271:117:24"},{"body":{"nodeType":"YulBlock","src":"6483:28:24","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6500:1:24","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6503:1:24","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6493:6:24"},"nodeType":"YulFunctionCall","src":"6493:12:24"},"nodeType":"YulExpressionStatement","src":"6493:12:24"}]},"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulFunctionDefinition","src":"6394:117:24"},{"body":{"nodeType":"YulBlock","src":"6604:478:24","statements":[{"body":{"nodeType":"YulBlock","src":"6653:83:24","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"6655:77:24"},"nodeType":"YulFunctionCall","src":"6655:79:24"},"nodeType":"YulExpressionStatement","src":"6655:79:24"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6632:6:24"},{"kind":"number","nodeType":"YulLiteral","src":"6640:4:24","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6628:3:24"},"nodeType":"YulFunctionCall","src":"6628:17:24"},{"name":"end","nodeType":"YulIdentifier","src":"6647:3:24"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6624:3:24"},"nodeType":"YulFunctionCall","src":"6624:27:24"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6617:6:24"},"nodeType":"YulFunctionCall","src":"6617:35:24"},"nodeType":"YulIf","src":"6614:122:24"},{"nodeType":"YulAssignment","src":"6745:30:24","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6768:6:24"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6755:12:24"},"nodeType":"YulFunctionCall","src":"6755:20:24"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"6745:6:24"}]},{"body":{"nodeType":"YulBlock","src":"6818:83:24","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490","nodeType":"YulIdentifier","src":"6820:77:24"},"nodeType":"YulFunctionCall","src":"6820:79:24"},"nodeType":"YulExpressionStatement","src":"6820:79:24"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6790:6:24"},{"kind":"number","nodeType":"YulLiteral","src":"6798:18:24","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6787:2:24"},"nodeType":"YulFunctionCall","src":"6787:30:24"},"nodeType":"YulIf","src":"6784:117:24"},{"nodeType":"YulAssignment","src":"6910:29:24","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6926:6:24"},{"kind":"number","nodeType":"YulLiteral","src":"6934:4:24","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6922:3:24"},"nodeType":"YulFunctionCall","src":"6922:17:24"},"variableNames":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"6910:8:24"}]},{"body":{"nodeType":"YulBlock","src":"6993:83:24","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulIdentifier","src":"6995:77:24"},"nodeType":"YulFunctionCall","src":"6995:79:24"},"nodeType":"YulExpressionStatement","src":"6995:79:24"}]},"condition":{"arguments":[{"arguments":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"6958:8:24"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6972:6:24"},{"kind":"number","nodeType":"YulLiteral","src":"6980:4:24","type":"","value":"0x01"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"6968:3:24"},"nodeType":"YulFunctionCall","src":"6968:17:24"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6954:3:24"},"nodeType":"YulFunctionCall","src":"6954:32:24"},{"name":"end","nodeType":"YulIdentifier","src":"6988:3:24"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6951:2:24"},"nodeType":"YulFunctionCall","src":"6951:41:24"},"nodeType":"YulIf","src":"6948:128:24"}]},"name":"abi_decode_t_bytes_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"6571:6:24","type":""},{"name":"end","nodeType":"YulTypedName","src":"6579:3:24","type":""}],"returnVariables":[{"name":"arrayPos","nodeType":"YulTypedName","src":"6587:8:24","type":""},{"name":"length","nodeType":"YulTypedName","src":"6597:6:24","type":""}],"src":"6530:552:24"},{"body":{"nodeType":"YulBlock","src":"7254:857:24","statements":[{"body":{"nodeType":"YulBlock","src":"7301:83:24","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"7303:77:24"},"nodeType":"YulFunctionCall","src":"7303:79:24"},"nodeType":"YulExpressionStatement","src":"7303:79:24"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"7275:7:24"},{"name":"headStart","nodeType":"YulIdentifier","src":"7284:9:24"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7271:3:24"},"nodeType":"YulFunctionCall","src":"7271:23:24"},{"kind":"number","nodeType":"YulLiteral","src":"7296:3:24","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"7267:3:24"},"nodeType":"YulFunctionCall","src":"7267:33:24"},"nodeType":"YulIf","src":"7264:120:24"},{"nodeType":"YulBlock","src":"7394:147:24","statements":[{"nodeType":"YulVariableDeclaration","src":"7409:15:24","value":{"kind":"number","nodeType":"YulLiteral","src":"7423:1:24","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7413:6:24","type":""}]},{"nodeType":"YulAssignment","src":"7438:93:24","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7503:9:24"},{"name":"offset","nodeType":"YulIdentifier","src":"7514:6:24"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7499:3:24"},"nodeType":"YulFunctionCall","src":"7499:22:24"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7523:7:24"}],"functionName":{"name":"abi_decode_t_contract$_IERC3156FlashBorrower_$2306","nodeType":"YulIdentifier","src":"7448:50:24"},"nodeType":"YulFunctionCall","src":"7448:83:24"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"7438:6:24"}]}]},{"nodeType":"YulBlock","src":"7551:118:24","statements":[{"nodeType":"YulVariableDeclaration","src":"7566:16:24","value":{"kind":"number","nodeType":"YulLiteral","src":"7580:2:24","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7570:6:24","type":""}]},{"nodeType":"YulAssignment","src":"7596:63:24","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7631:9:24"},{"name":"offset","nodeType":"YulIdentifier","src":"7642:6:24"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7627:3:24"},"nodeType":"YulFunctionCall","src":"7627:22:24"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7651:7:24"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"7606:20:24"},"nodeType":"YulFunctionCall","src":"7606:53:24"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"7596:6:24"}]}]},{"nodeType":"YulBlock","src":"7679:118:24","statements":[{"nodeType":"YulVariableDeclaration","src":"7694:16:24","value":{"kind":"number","nodeType":"YulLiteral","src":"7708:2:24","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7698:6:24","type":""}]},{"nodeType":"YulAssignment","src":"7724:63:24","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7759:9:24"},{"name":"offset","nodeType":"YulIdentifier","src":"7770:6:24"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7755:3:24"},"nodeType":"YulFunctionCall","src":"7755:22:24"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7779:7:24"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"7734:20:24"},"nodeType":"YulFunctionCall","src":"7734:53:24"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"7724:6:24"}]}]},{"nodeType":"YulBlock","src":"7807:297:24","statements":[{"nodeType":"YulVariableDeclaration","src":"7822:46:24","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7853:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"7864:2:24","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7849:3:24"},"nodeType":"YulFunctionCall","src":"7849:18:24"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7836:12:24"},"nodeType":"YulFunctionCall","src":"7836:32:24"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7826:6:24","type":""}]},{"body":{"nodeType":"YulBlock","src":"7915:83:24","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"7917:77:24"},"nodeType":"YulFunctionCall","src":"7917:79:24"},"nodeType":"YulExpressionStatement","src":"7917:79:24"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7887:6:24"},{"kind":"number","nodeType":"YulLiteral","src":"7895:18:24","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7884:2:24"},"nodeType":"YulFunctionCall","src":"7884:30:24"},"nodeType":"YulIf","src":"7881:117:24"},{"nodeType":"YulAssignment","src":"8012:82:24","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8066:9:24"},{"name":"offset","nodeType":"YulIdentifier","src":"8077:6:24"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8062:3:24"},"nodeType":"YulFunctionCall","src":"8062:22:24"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"8086:7:24"}],"functionName":{"name":"abi_decode_t_bytes_calldata_ptr","nodeType":"YulIdentifier","src":"8030:31:24"},"nodeType":"YulFunctionCall","src":"8030:64:24"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"8012:6:24"},{"name":"value4","nodeType":"YulIdentifier","src":"8020:6:24"}]}]}]},"name":"abi_decode_tuple_t_contract$_IERC3156FlashBorrower_$2306t_addresst_uint256t_bytes_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7192:9:24","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"7203:7:24","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"7215:6:24","type":""},{"name":"value1","nodeType":"YulTypedName","src":"7223:6:24","type":""},{"name":"value2","nodeType":"YulTypedName","src":"7231:6:24","type":""},{"name":"value3","nodeType":"YulTypedName","src":"7239:6:24","type":""},{"name":"value4","nodeType":"YulTypedName","src":"7247:6:24","type":""}],"src":"7088:1023:24"},{"body":{"nodeType":"YulBlock","src":"8183:263:24","statements":[{"body":{"nodeType":"YulBlock","src":"8229:83:24","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"8231:77:24"},"nodeType":"YulFunctionCall","src":"8231:79:24"},"nodeType":"YulExpressionStatement","src":"8231:79:24"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"8204:7:24"},{"name":"headStart","nodeType":"YulIdentifier","src":"8213:9:24"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8200:3:24"},"nodeType":"YulFunctionCall","src":"8200:23:24"},{"kind":"number","nodeType":"YulLiteral","src":"8225:2:24","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"8196:3:24"},"nodeType":"YulFunctionCall","src":"8196:32:24"},"nodeType":"YulIf","src":"8193:119:24"},{"nodeType":"YulBlock","src":"8322:117:24","statements":[{"nodeType":"YulVariableDeclaration","src":"8337:15:24","value":{"kind":"number","nodeType":"YulLiteral","src":"8351:1:24","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"8341:6:24","type":""}]},{"nodeType":"YulAssignment","src":"8366:63:24","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8401:9:24"},{"name":"offset","nodeType":"YulIdentifier","src":"8412:6:24"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8397:3:24"},"nodeType":"YulFunctionCall","src":"8397:22:24"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"8421:7:24"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"8376:20:24"},"nodeType":"YulFunctionCall","src":"8376:53:24"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"8366:6:24"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8153:9:24","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"8164:7:24","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"8176:6:24","type":""}],"src":"8117:329:24"},{"body":{"nodeType":"YulBlock","src":"8496:105:24","statements":[{"nodeType":"YulAssignment","src":"8506:89:24","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8521:5:24"},{"kind":"number","nodeType":"YulLiteral","src":"8528:66:24","type":"","value":"0xff00000000000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8517:3:24"},"nodeType":"YulFunctionCall","src":"8517:78:24"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"8506:7:24"}]}]},"name":"cleanup_t_bytes1","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8478:5:24","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"8488:7:24","type":""}],"src":"8452:149:24"},{"body":{"nodeType":"YulBlock","src":"8670:52:24","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8687:3:24"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8709:5:24"}],"functionName":{"name":"cleanup_t_bytes1","nodeType":"YulIdentifier","src":"8692:16:24"},"nodeType":"YulFunctionCall","src":"8692:23:24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8680:6:24"},"nodeType":"YulFunctionCall","src":"8680:36:24"},"nodeType":"YulExpressionStatement","src":"8680:36:24"}]},"name":"abi_encode_t_bytes1_to_t_bytes1_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8658:5:24","type":""},{"name":"pos","nodeType":"YulTypedName","src":"8665:3:24","type":""}],"src":"8607:115:24"},{"body":{"nodeType":"YulBlock","src":"8793:53:24","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8810:3:24"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8833:5:24"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"8815:17:24"},"nodeType":"YulFunctionCall","src":"8815:24:24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8803:6:24"},"nodeType":"YulFunctionCall","src":"8803:37:24"},"nodeType":"YulExpressionStatement","src":"8803:37:24"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8781:5:24","type":""},{"name":"pos","nodeType":"YulTypedName","src":"8788:3:24","type":""}],"src":"8728:118:24"},{"body":{"nodeType":"YulBlock","src":"8926:40:24","statements":[{"nodeType":"YulAssignment","src":"8937:22:24","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8953:5:24"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8947:5:24"},"nodeType":"YulFunctionCall","src":"8947:12:24"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"8937:6:24"}]}]},"name":"array_length_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8909:5:24","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"8919:6:24","type":""}],"src":"8852:114:24"},{"body":{"nodeType":"YulBlock","src":"9083:73:24","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9100:3:24"},{"name":"length","nodeType":"YulIdentifier","src":"9105:6:24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9093:6:24"},"nodeType":"YulFunctionCall","src":"9093:19:24"},"nodeType":"YulExpressionStatement","src":"9093:19:24"},{"nodeType":"YulAssignment","src":"9121:29:24","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9140:3:24"},{"kind":"number","nodeType":"YulLiteral","src":"9145:4:24","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9136:3:24"},"nodeType":"YulFunctionCall","src":"9136:14:24"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"9121:11:24"}]}]},"name":"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"9055:3:24","type":""},{"name":"length","nodeType":"YulTypedName","src":"9060:6:24","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"9071:11:24","type":""}],"src":"8972:184:24"},{"body":{"nodeType":"YulBlock","src":"9234:60:24","statements":[{"nodeType":"YulAssignment","src":"9244:11:24","value":{"name":"ptr","nodeType":"YulIdentifier","src":"9252:3:24"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"9244:4:24"}]},{"nodeType":"YulAssignment","src":"9265:22:24","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"9277:3:24"},{"kind":"number","nodeType":"YulLiteral","src":"9282:4:24","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9273:3:24"},"nodeType":"YulFunctionCall","src":"9273:14:24"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"9265:4:24"}]}]},"name":"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"9221:3:24","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"9229:4:24","type":""}],"src":"9162:132:24"},{"body":{"nodeType":"YulBlock","src":"9355:53:24","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9372:3:24"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9395:5:24"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"9377:17:24"},"nodeType":"YulFunctionCall","src":"9377:24:24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9365:6:24"},"nodeType":"YulFunctionCall","src":"9365:37:24"},"nodeType":"YulExpressionStatement","src":"9365:37:24"}]},"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9343:5:24","type":""},{"name":"pos","nodeType":"YulTypedName","src":"9350:3:24","type":""}],"src":"9300:108:24"},{"body":{"nodeType":"YulBlock","src":"9494:99:24","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"9538:6:24"},{"name":"pos","nodeType":"YulIdentifier","src":"9546:3:24"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"9504:33:24"},"nodeType":"YulFunctionCall","src":"9504:46:24"},"nodeType":"YulExpressionStatement","src":"9504:46:24"},{"nodeType":"YulAssignment","src":"9559:28:24","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9577:3:24"},{"kind":"number","nodeType":"YulLiteral","src":"9582:4:24","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9573:3:24"},"nodeType":"YulFunctionCall","src":"9573:14:24"},"variableNames":[{"name":"updatedPos","nodeType":"YulIdentifier","src":"9559:10:24"}]}]},"name":"abi_encodeUpdatedPos_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value0","nodeType":"YulTypedName","src":"9467:6:24","type":""},{"name":"pos","nodeType":"YulTypedName","src":"9475:3:24","type":""}],"returnVariables":[{"name":"updatedPos","nodeType":"YulTypedName","src":"9483:10:24","type":""}],"src":"9414:179:24"},{"body":{"nodeType":"YulBlock","src":"9674:38:24","statements":[{"nodeType":"YulAssignment","src":"9684:22:24","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"9696:3:24"},{"kind":"number","nodeType":"YulLiteral","src":"9701:4:24","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9692:3:24"},"nodeType":"YulFunctionCall","src":"9692:14:24"},"variableNames":[{"name":"next","nodeType":"YulIdentifier","src":"9684:4:24"}]}]},"name":"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"9661:3:24","type":""}],"returnVariables":[{"name":"next","nodeType":"YulTypedName","src":"9669:4:24","type":""}],"src":"9599:113:24"},{"body":{"nodeType":"YulBlock","src":"9872:608:24","statements":[{"nodeType":"YulVariableDeclaration","src":"9882:68:24","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9944:5:24"}],"functionName":{"name":"array_length_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"9896:47:24"},"nodeType":"YulFunctionCall","src":"9896:54:24"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"9886:6:24","type":""}]},{"nodeType":"YulAssignment","src":"9959:93:24","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10040:3:24"},{"name":"length","nodeType":"YulIdentifier","src":"10045:6:24"}],"functionName":{"name":"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9966:73:24"},"nodeType":"YulFunctionCall","src":"9966:86:24"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"9959:3:24"}]},{"nodeType":"YulVariableDeclaration","src":"10061:71:24","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10126:5:24"}],"functionName":{"name":"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"10076:49:24"},"nodeType":"YulFunctionCall","src":"10076:56:24"},"variables":[{"name":"baseRef","nodeType":"YulTypedName","src":"10065:7:24","type":""}]},{"nodeType":"YulVariableDeclaration","src":"10141:21:24","value":{"name":"baseRef","nodeType":"YulIdentifier","src":"10155:7:24"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"10145:6:24","type":""}]},{"body":{"nodeType":"YulBlock","src":"10231:224:24","statements":[{"nodeType":"YulVariableDeclaration","src":"10245:34:24","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"10272:6:24"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"10266:5:24"},"nodeType":"YulFunctionCall","src":"10266:13:24"},"variables":[{"name":"elementValue0","nodeType":"YulTypedName","src":"10249:13:24","type":""}]},{"nodeType":"YulAssignment","src":"10292:70:24","value":{"arguments":[{"name":"elementValue0","nodeType":"YulIdentifier","src":"10343:13:24"},{"name":"pos","nodeType":"YulIdentifier","src":"10358:3:24"}],"functionName":{"name":"abi_encodeUpdatedPos_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"10299:43:24"},"nodeType":"YulFunctionCall","src":"10299:63:24"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"10292:3:24"}]},{"nodeType":"YulAssignment","src":"10375:70:24","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"10438:6:24"}],"functionName":{"name":"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"10385:52:24"},"nodeType":"YulFunctionCall","src":"10385:60:24"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"10375:6:24"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"10193:1:24"},{"name":"length","nodeType":"YulIdentifier","src":"10196:6:24"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"10190:2:24"},"nodeType":"YulFunctionCall","src":"10190:13:24"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"10204:18:24","statements":[{"nodeType":"YulAssignment","src":"10206:14:24","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"10215:1:24"},{"kind":"number","nodeType":"YulLiteral","src":"10218:1:24","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10211:3:24"},"nodeType":"YulFunctionCall","src":"10211:9:24"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"10206:1:24"}]}]},"pre":{"nodeType":"YulBlock","src":"10175:14:24","statements":[{"nodeType":"YulVariableDeclaration","src":"10177:10:24","value":{"kind":"number","nodeType":"YulLiteral","src":"10186:1:24","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"10181:1:24","type":""}]}]},"src":"10171:284:24"},{"nodeType":"YulAssignment","src":"10464:10:24","value":{"name":"pos","nodeType":"YulIdentifier","src":"10471:3:24"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"10464:3:24"}]}]},"name":"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9851:5:24","type":""},{"name":"pos","nodeType":"YulTypedName","src":"9858:3:24","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"9867:3:24","type":""}],"src":"9748:732:24"},{"body":{"nodeType":"YulBlock","src":"10840:861:24","statements":[{"nodeType":"YulAssignment","src":"10850:27:24","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10862:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"10873:3:24","type":"","value":"224"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10858:3:24"},"nodeType":"YulFunctionCall","src":"10858:19:24"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10850:4:24"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"10929:6:24"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10942:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"10953:1:24","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10938:3:24"},"nodeType":"YulFunctionCall","src":"10938:17:24"}],"functionName":{"name":"abi_encode_t_bytes1_to_t_bytes1_fromStack","nodeType":"YulIdentifier","src":"10887:41:24"},"nodeType":"YulFunctionCall","src":"10887:69:24"},"nodeType":"YulExpressionStatement","src":"10887:69:24"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10977:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"10988:2:24","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10973:3:24"},"nodeType":"YulFunctionCall","src":"10973:18:24"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"10997:4:24"},{"name":"headStart","nodeType":"YulIdentifier","src":"11003:9:24"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10993:3:24"},"nodeType":"YulFunctionCall","src":"10993:20:24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10966:6:24"},"nodeType":"YulFunctionCall","src":"10966:48:24"},"nodeType":"YulExpressionStatement","src":"10966:48:24"},{"nodeType":"YulAssignment","src":"11023:86:24","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"11095:6:24"},{"name":"tail","nodeType":"YulIdentifier","src":"11104:4:24"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"11031:63:24"},"nodeType":"YulFunctionCall","src":"11031:78:24"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11023:4:24"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11130:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"11141:2:24","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11126:3:24"},"nodeType":"YulFunctionCall","src":"11126:18:24"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"11150:4:24"},{"name":"headStart","nodeType":"YulIdentifier","src":"11156:9:24"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11146:3:24"},"nodeType":"YulFunctionCall","src":"11146:20:24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11119:6:24"},"nodeType":"YulFunctionCall","src":"11119:48:24"},"nodeType":"YulExpressionStatement","src":"11119:48:24"},{"nodeType":"YulAssignment","src":"11176:86:24","value":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"11248:6:24"},{"name":"tail","nodeType":"YulIdentifier","src":"11257:4:24"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"11184:63:24"},"nodeType":"YulFunctionCall","src":"11184:78:24"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11176:4:24"}]},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"11316:6:24"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11329:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"11340:2:24","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11325:3:24"},"nodeType":"YulFunctionCall","src":"11325:18:24"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"11272:43:24"},"nodeType":"YulFunctionCall","src":"11272:72:24"},"nodeType":"YulExpressionStatement","src":"11272:72:24"},{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"11398:6:24"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11411:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"11422:3:24","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11407:3:24"},"nodeType":"YulFunctionCall","src":"11407:19:24"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"11354:43:24"},"nodeType":"YulFunctionCall","src":"11354:73:24"},"nodeType":"YulExpressionStatement","src":"11354:73:24"},{"expression":{"arguments":[{"name":"value5","nodeType":"YulIdentifier","src":"11481:6:24"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11494:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"11505:3:24","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11490:3:24"},"nodeType":"YulFunctionCall","src":"11490:19:24"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"11437:43:24"},"nodeType":"YulFunctionCall","src":"11437:73:24"},"nodeType":"YulExpressionStatement","src":"11437:73:24"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11531:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"11542:3:24","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11527:3:24"},"nodeType":"YulFunctionCall","src":"11527:19:24"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"11552:4:24"},{"name":"headStart","nodeType":"YulIdentifier","src":"11558:9:24"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11548:3:24"},"nodeType":"YulFunctionCall","src":"11548:20:24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11520:6:24"},"nodeType":"YulFunctionCall","src":"11520:49:24"},"nodeType":"YulExpressionStatement","src":"11520:49:24"},{"nodeType":"YulAssignment","src":"11578:116:24","value":{"arguments":[{"name":"value6","nodeType":"YulIdentifier","src":"11680:6:24"},{"name":"tail","nodeType":"YulIdentifier","src":"11689:4:24"}],"functionName":{"name":"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"11586:93:24"},"nodeType":"YulFunctionCall","src":"11586:108:24"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11578:4:24"}]}]},"name":"abi_encode_tuple_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__to_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10764:9:24","type":""},{"name":"value6","nodeType":"YulTypedName","src":"10776:6:24","type":""},{"name":"value5","nodeType":"YulTypedName","src":"10784:6:24","type":""},{"name":"value4","nodeType":"YulTypedName","src":"10792:6:24","type":""},{"name":"value3","nodeType":"YulTypedName","src":"10800:6:24","type":""},{"name":"value2","nodeType":"YulTypedName","src":"10808:6:24","type":""},{"name":"value1","nodeType":"YulTypedName","src":"10816:6:24","type":""},{"name":"value0","nodeType":"YulTypedName","src":"10824:6:24","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10835:4:24","type":""}],"src":"10486:1215:24"},{"body":{"nodeType":"YulBlock","src":"11805:124:24","statements":[{"nodeType":"YulAssignment","src":"11815:26:24","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11827:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"11838:2:24","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11823:3:24"},"nodeType":"YulFunctionCall","src":"11823:18:24"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11815:4:24"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"11895:6:24"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11908:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"11919:1:24","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11904:3:24"},"nodeType":"YulFunctionCall","src":"11904:17:24"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"11851:43:24"},"nodeType":"YulFunctionCall","src":"11851:71:24"},"nodeType":"YulExpressionStatement","src":"11851:71:24"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11777:9:24","type":""},{"name":"value0","nodeType":"YulTypedName","src":"11789:6:24","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11800:4:24","type":""}],"src":"11707:222:24"},{"body":{"nodeType":"YulBlock","src":"11976:77:24","statements":[{"body":{"nodeType":"YulBlock","src":"12031:16:24","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12040:1:24","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12043:1:24","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"12033:6:24"},"nodeType":"YulFunctionCall","src":"12033:12:24"},"nodeType":"YulExpressionStatement","src":"12033:12:24"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11999:5:24"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12022:5:24"}],"functionName":{"name":"cleanup_t_uint8","nodeType":"YulIdentifier","src":"12006:15:24"},"nodeType":"YulFunctionCall","src":"12006:22:24"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"11996:2:24"},"nodeType":"YulFunctionCall","src":"11996:33:24"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"11989:6:24"},"nodeType":"YulFunctionCall","src":"11989:41:24"},"nodeType":"YulIf","src":"11986:61:24"}]},"name":"validator_revert_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11969:5:24","type":""}],"src":"11935:118:24"},{"body":{"nodeType":"YulBlock","src":"12109:85:24","statements":[{"nodeType":"YulAssignment","src":"12119:29:24","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"12141:6:24"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"12128:12:24"},"nodeType":"YulFunctionCall","src":"12128:20:24"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"12119:5:24"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12182:5:24"}],"functionName":{"name":"validator_revert_t_uint8","nodeType":"YulIdentifier","src":"12157:24:24"},"nodeType":"YulFunctionCall","src":"12157:31:24"},"nodeType":"YulExpressionStatement","src":"12157:31:24"}]},"name":"abi_decode_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"12087:6:24","type":""},{"name":"end","nodeType":"YulTypedName","src":"12095:3:24","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"12103:5:24","type":""}],"src":"12059:135:24"},{"body":{"nodeType":"YulBlock","src":"12243:79:24","statements":[{"body":{"nodeType":"YulBlock","src":"12300:16:24","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12309:1:24","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12312:1:24","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"12302:6:24"},"nodeType":"YulFunctionCall","src":"12302:12:24"},"nodeType":"YulExpressionStatement","src":"12302:12:24"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12266:5:24"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12291:5:24"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"12273:17:24"},"nodeType":"YulFunctionCall","src":"12273:24:24"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"12263:2:24"},"nodeType":"YulFunctionCall","src":"12263:35:24"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"12256:6:24"},"nodeType":"YulFunctionCall","src":"12256:43:24"},"nodeType":"YulIf","src":"12253:63:24"}]},"name":"validator_revert_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12236:5:24","type":""}],"src":"12200:122:24"},{"body":{"nodeType":"YulBlock","src":"12380:87:24","statements":[{"nodeType":"YulAssignment","src":"12390:29:24","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"12412:6:24"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"12399:12:24"},"nodeType":"YulFunctionCall","src":"12399:20:24"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"12390:5:24"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12455:5:24"}],"functionName":{"name":"validator_revert_t_bytes32","nodeType":"YulIdentifier","src":"12428:26:24"},"nodeType":"YulFunctionCall","src":"12428:33:24"},"nodeType":"YulExpressionStatement","src":"12428:33:24"}]},"name":"abi_decode_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"12358:6:24","type":""},{"name":"end","nodeType":"YulTypedName","src":"12366:3:24","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"12374:5:24","type":""}],"src":"12328:139:24"},{"body":{"nodeType":"YulBlock","src":"12639:1033:24","statements":[{"body":{"nodeType":"YulBlock","src":"12686:83:24","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"12688:77:24"},"nodeType":"YulFunctionCall","src":"12688:79:24"},"nodeType":"YulExpressionStatement","src":"12688:79:24"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"12660:7:24"},{"name":"headStart","nodeType":"YulIdentifier","src":"12669:9:24"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12656:3:24"},"nodeType":"YulFunctionCall","src":"12656:23:24"},{"kind":"number","nodeType":"YulLiteral","src":"12681:3:24","type":"","value":"224"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"12652:3:24"},"nodeType":"YulFunctionCall","src":"12652:33:24"},"nodeType":"YulIf","src":"12649:120:24"},{"nodeType":"YulBlock","src":"12779:117:24","statements":[{"nodeType":"YulVariableDeclaration","src":"12794:15:24","value":{"kind":"number","nodeType":"YulLiteral","src":"12808:1:24","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"12798:6:24","type":""}]},{"nodeType":"YulAssignment","src":"12823:63:24","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12858:9:24"},{"name":"offset","nodeType":"YulIdentifier","src":"12869:6:24"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12854:3:24"},"nodeType":"YulFunctionCall","src":"12854:22:24"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"12878:7:24"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"12833:20:24"},"nodeType":"YulFunctionCall","src":"12833:53:24"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"12823:6:24"}]}]},{"nodeType":"YulBlock","src":"12906:118:24","statements":[{"nodeType":"YulVariableDeclaration","src":"12921:16:24","value":{"kind":"number","nodeType":"YulLiteral","src":"12935:2:24","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"12925:6:24","type":""}]},{"nodeType":"YulAssignment","src":"12951:63:24","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12986:9:24"},{"name":"offset","nodeType":"YulIdentifier","src":"12997:6:24"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12982:3:24"},"nodeType":"YulFunctionCall","src":"12982:22:24"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"13006:7:24"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"12961:20:24"},"nodeType":"YulFunctionCall","src":"12961:53:24"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"12951:6:24"}]}]},{"nodeType":"YulBlock","src":"13034:118:24","statements":[{"nodeType":"YulVariableDeclaration","src":"13049:16:24","value":{"kind":"number","nodeType":"YulLiteral","src":"13063:2:24","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"13053:6:24","type":""}]},{"nodeType":"YulAssignment","src":"13079:63:24","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13114:9:24"},{"name":"offset","nodeType":"YulIdentifier","src":"13125:6:24"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13110:3:24"},"nodeType":"YulFunctionCall","src":"13110:22:24"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"13134:7:24"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"13089:20:24"},"nodeType":"YulFunctionCall","src":"13089:53:24"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"13079:6:24"}]}]},{"nodeType":"YulBlock","src":"13162:118:24","statements":[{"nodeType":"YulVariableDeclaration","src":"13177:16:24","value":{"kind":"number","nodeType":"YulLiteral","src":"13191:2:24","type":"","value":"96"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"13181:6:24","type":""}]},{"nodeType":"YulAssignment","src":"13207:63:24","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13242:9:24"},{"name":"offset","nodeType":"YulIdentifier","src":"13253:6:24"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13238:3:24"},"nodeType":"YulFunctionCall","src":"13238:22:24"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"13262:7:24"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"13217:20:24"},"nodeType":"YulFunctionCall","src":"13217:53:24"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"13207:6:24"}]}]},{"nodeType":"YulBlock","src":"13290:117:24","statements":[{"nodeType":"YulVariableDeclaration","src":"13305:17:24","value":{"kind":"number","nodeType":"YulLiteral","src":"13319:3:24","type":"","value":"128"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"13309:6:24","type":""}]},{"nodeType":"YulAssignment","src":"13336:61:24","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13369:9:24"},{"name":"offset","nodeType":"YulIdentifier","src":"13380:6:24"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13365:3:24"},"nodeType":"YulFunctionCall","src":"13365:22:24"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"13389:7:24"}],"functionName":{"name":"abi_decode_t_uint8","nodeType":"YulIdentifier","src":"13346:18:24"},"nodeType":"YulFunctionCall","src":"13346:51:24"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"13336:6:24"}]}]},{"nodeType":"YulBlock","src":"13417:119:24","statements":[{"nodeType":"YulVariableDeclaration","src":"13432:17:24","value":{"kind":"number","nodeType":"YulLiteral","src":"13446:3:24","type":"","value":"160"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"13436:6:24","type":""}]},{"nodeType":"YulAssignment","src":"13463:63:24","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13498:9:24"},{"name":"offset","nodeType":"YulIdentifier","src":"13509:6:24"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13494:3:24"},"nodeType":"YulFunctionCall","src":"13494:22:24"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"13518:7:24"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"13473:20:24"},"nodeType":"YulFunctionCall","src":"13473:53:24"},"variableNames":[{"name":"value5","nodeType":"YulIdentifier","src":"13463:6:24"}]}]},{"nodeType":"YulBlock","src":"13546:119:24","statements":[{"nodeType":"YulVariableDeclaration","src":"13561:17:24","value":{"kind":"number","nodeType":"YulLiteral","src":"13575:3:24","type":"","value":"192"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"13565:6:24","type":""}]},{"nodeType":"YulAssignment","src":"13592:63:24","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13627:9:24"},{"name":"offset","nodeType":"YulIdentifier","src":"13638:6:24"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13623:3:24"},"nodeType":"YulFunctionCall","src":"13623:22:24"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"13647:7:24"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"13602:20:24"},"nodeType":"YulFunctionCall","src":"13602:53:24"},"variableNames":[{"name":"value6","nodeType":"YulIdentifier","src":"13592:6:24"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12561:9:24","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"12572:7:24","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"12584:6:24","type":""},{"name":"value1","nodeType":"YulTypedName","src":"12592:6:24","type":""},{"name":"value2","nodeType":"YulTypedName","src":"12600:6:24","type":""},{"name":"value3","nodeType":"YulTypedName","src":"12608:6:24","type":""},{"name":"value4","nodeType":"YulTypedName","src":"12616:6:24","type":""},{"name":"value5","nodeType":"YulTypedName","src":"12624:6:24","type":""},{"name":"value6","nodeType":"YulTypedName","src":"12632:6:24","type":""}],"src":"12473:1199:24"},{"body":{"nodeType":"YulBlock","src":"13761:391:24","statements":[{"body":{"nodeType":"YulBlock","src":"13807:83:24","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"13809:77:24"},"nodeType":"YulFunctionCall","src":"13809:79:24"},"nodeType":"YulExpressionStatement","src":"13809:79:24"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"13782:7:24"},{"name":"headStart","nodeType":"YulIdentifier","src":"13791:9:24"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13778:3:24"},"nodeType":"YulFunctionCall","src":"13778:23:24"},{"kind":"number","nodeType":"YulLiteral","src":"13803:2:24","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"13774:3:24"},"nodeType":"YulFunctionCall","src":"13774:32:24"},"nodeType":"YulIf","src":"13771:119:24"},{"nodeType":"YulBlock","src":"13900:117:24","statements":[{"nodeType":"YulVariableDeclaration","src":"13915:15:24","value":{"kind":"number","nodeType":"YulLiteral","src":"13929:1:24","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"13919:6:24","type":""}]},{"nodeType":"YulAssignment","src":"13944:63:24","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13979:9:24"},{"name":"offset","nodeType":"YulIdentifier","src":"13990:6:24"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13975:3:24"},"nodeType":"YulFunctionCall","src":"13975:22:24"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"13999:7:24"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"13954:20:24"},"nodeType":"YulFunctionCall","src":"13954:53:24"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"13944:6:24"}]}]},{"nodeType":"YulBlock","src":"14027:118:24","statements":[{"nodeType":"YulVariableDeclaration","src":"14042:16:24","value":{"kind":"number","nodeType":"YulLiteral","src":"14056:2:24","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"14046:6:24","type":""}]},{"nodeType":"YulAssignment","src":"14072:63:24","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14107:9:24"},{"name":"offset","nodeType":"YulIdentifier","src":"14118:6:24"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14103:3:24"},"nodeType":"YulFunctionCall","src":"14103:22:24"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"14127:7:24"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"14082:20:24"},"nodeType":"YulFunctionCall","src":"14082:53:24"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"14072:6:24"}]}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13723:9:24","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"13734:7:24","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"13746:6:24","type":""},{"name":"value1","nodeType":"YulTypedName","src":"13754:6:24","type":""}],"src":"13678:474:24"},{"body":{"nodeType":"YulBlock","src":"14186:152:24","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14203:1:24","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"14206:77:24","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14196:6:24"},"nodeType":"YulFunctionCall","src":"14196:88:24"},"nodeType":"YulExpressionStatement","src":"14196:88:24"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14300:1:24","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"14303:4:24","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14293:6:24"},"nodeType":"YulFunctionCall","src":"14293:15:24"},"nodeType":"YulExpressionStatement","src":"14293:15:24"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14324:1:24","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"14327:4:24","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"14317:6:24"},"nodeType":"YulFunctionCall","src":"14317:15:24"},"nodeType":"YulExpressionStatement","src":"14317:15:24"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"14158:180:24"},{"body":{"nodeType":"YulBlock","src":"14395:269:24","statements":[{"nodeType":"YulAssignment","src":"14405:22:24","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"14419:4:24"},{"kind":"number","nodeType":"YulLiteral","src":"14425:1:24","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"14415:3:24"},"nodeType":"YulFunctionCall","src":"14415:12:24"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"14405:6:24"}]},{"nodeType":"YulVariableDeclaration","src":"14436:38:24","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"14466:4:24"},{"kind":"number","nodeType":"YulLiteral","src":"14472:1:24","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"14462:3:24"},"nodeType":"YulFunctionCall","src":"14462:12:24"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"14440:18:24","type":""}]},{"body":{"nodeType":"YulBlock","src":"14513:51:24","statements":[{"nodeType":"YulAssignment","src":"14527:27:24","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"14541:6:24"},{"kind":"number","nodeType":"YulLiteral","src":"14549:4:24","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"14537:3:24"},"nodeType":"YulFunctionCall","src":"14537:17:24"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"14527:6:24"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"14493:18:24"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"14486:6:24"},"nodeType":"YulFunctionCall","src":"14486:26:24"},"nodeType":"YulIf","src":"14483:81:24"},{"body":{"nodeType":"YulBlock","src":"14616:42:24","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"14630:16:24"},"nodeType":"YulFunctionCall","src":"14630:18:24"},"nodeType":"YulExpressionStatement","src":"14630:18:24"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"14580:18:24"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"14603:6:24"},{"kind":"number","nodeType":"YulLiteral","src":"14611:2:24","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"14600:2:24"},"nodeType":"YulFunctionCall","src":"14600:14:24"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"14577:2:24"},"nodeType":"YulFunctionCall","src":"14577:38:24"},"nodeType":"YulIf","src":"14574:84:24"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"14379:4:24","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"14388:6:24","type":""}],"src":"14344:320:24"},{"body":{"nodeType":"YulBlock","src":"14765:73:24","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14782:3:24"},{"name":"length","nodeType":"YulIdentifier","src":"14787:6:24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14775:6:24"},"nodeType":"YulFunctionCall","src":"14775:19:24"},"nodeType":"YulExpressionStatement","src":"14775:19:24"},{"nodeType":"YulAssignment","src":"14803:29:24","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14822:3:24"},{"kind":"number","nodeType":"YulLiteral","src":"14827:4:24","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14818:3:24"},"nodeType":"YulFunctionCall","src":"14818:14:24"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"14803:11:24"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"14737:3:24","type":""},{"name":"length","nodeType":"YulTypedName","src":"14742:6:24","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"14753:11:24","type":""}],"src":"14670:168:24"},{"body":{"nodeType":"YulBlock","src":"14908:82:24","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"14931:3:24"},{"name":"src","nodeType":"YulIdentifier","src":"14936:3:24"},{"name":"length","nodeType":"YulIdentifier","src":"14941:6:24"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"14918:12:24"},"nodeType":"YulFunctionCall","src":"14918:30:24"},"nodeType":"YulExpressionStatement","src":"14918:30:24"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"14968:3:24"},{"name":"length","nodeType":"YulIdentifier","src":"14973:6:24"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14964:3:24"},"nodeType":"YulFunctionCall","src":"14964:16:24"},{"kind":"number","nodeType":"YulLiteral","src":"14982:1:24","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14957:6:24"},"nodeType":"YulFunctionCall","src":"14957:27:24"},"nodeType":"YulExpressionStatement","src":"14957:27:24"}]},"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"14890:3:24","type":""},{"name":"dst","nodeType":"YulTypedName","src":"14895:3:24","type":""},{"name":"length","nodeType":"YulTypedName","src":"14900:6:24","type":""}],"src":"14844:146:24"},{"body":{"nodeType":"YulBlock","src":"15118:214:24","statements":[{"nodeType":"YulAssignment","src":"15128:77:24","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15193:3:24"},{"name":"length","nodeType":"YulIdentifier","src":"15198:6:24"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"15135:57:24"},"nodeType":"YulFunctionCall","src":"15135:70:24"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"15128:3:24"}]},{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"15252:5:24"},{"name":"pos","nodeType":"YulIdentifier","src":"15259:3:24"},{"name":"length","nodeType":"YulIdentifier","src":"15264:6:24"}],"functionName":{"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"15215:36:24"},"nodeType":"YulFunctionCall","src":"15215:56:24"},"nodeType":"YulExpressionStatement","src":"15215:56:24"},{"nodeType":"YulAssignment","src":"15280:46:24","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15291:3:24"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"15318:6:24"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"15296:21:24"},"nodeType":"YulFunctionCall","src":"15296:29:24"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15287:3:24"},"nodeType":"YulFunctionCall","src":"15287:39:24"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"15280:3:24"}]}]},"name":"abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nodeType":"YulTypedName","src":"15091:5:24","type":""},{"name":"length","nodeType":"YulTypedName","src":"15098:6:24","type":""},{"name":"pos","nodeType":"YulTypedName","src":"15106:3:24","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"15114:3:24","type":""}],"src":"15018:314:24"},{"body":{"nodeType":"YulBlock","src":"15576:533:24","statements":[{"nodeType":"YulAssignment","src":"15586:27:24","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15598:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"15609:3:24","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15594:3:24"},"nodeType":"YulFunctionCall","src":"15594:19:24"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15586:4:24"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"15667:6:24"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15680:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"15691:1:24","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15676:3:24"},"nodeType":"YulFunctionCall","src":"15676:17:24"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"15623:43:24"},"nodeType":"YulFunctionCall","src":"15623:71:24"},"nodeType":"YulExpressionStatement","src":"15623:71:24"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"15748:6:24"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15761:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"15772:2:24","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15757:3:24"},"nodeType":"YulFunctionCall","src":"15757:18:24"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"15704:43:24"},"nodeType":"YulFunctionCall","src":"15704:72:24"},"nodeType":"YulExpressionStatement","src":"15704:72:24"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"15830:6:24"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15843:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"15854:2:24","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15839:3:24"},"nodeType":"YulFunctionCall","src":"15839:18:24"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"15786:43:24"},"nodeType":"YulFunctionCall","src":"15786:72:24"},"nodeType":"YulExpressionStatement","src":"15786:72:24"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"15912:6:24"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15925:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"15936:2:24","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15921:3:24"},"nodeType":"YulFunctionCall","src":"15921:18:24"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"15868:43:24"},"nodeType":"YulFunctionCall","src":"15868:72:24"},"nodeType":"YulExpressionStatement","src":"15868:72:24"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15961:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"15972:3:24","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15957:3:24"},"nodeType":"YulFunctionCall","src":"15957:19:24"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"15982:4:24"},{"name":"headStart","nodeType":"YulIdentifier","src":"15988:9:24"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15978:3:24"},"nodeType":"YulFunctionCall","src":"15978:20:24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15950:6:24"},"nodeType":"YulFunctionCall","src":"15950:49:24"},"nodeType":"YulExpressionStatement","src":"15950:49:24"},{"nodeType":"YulAssignment","src":"16008:94:24","value":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"16080:6:24"},{"name":"value5","nodeType":"YulIdentifier","src":"16088:6:24"},{"name":"tail","nodeType":"YulIdentifier","src":"16097:4:24"}],"functionName":{"name":"abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"16016:63:24"},"nodeType":"YulFunctionCall","src":"16016:86:24"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16008:4:24"}]}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_calldata_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15508:9:24","type":""},{"name":"value5","nodeType":"YulTypedName","src":"15520:6:24","type":""},{"name":"value4","nodeType":"YulTypedName","src":"15528:6:24","type":""},{"name":"value3","nodeType":"YulTypedName","src":"15536:6:24","type":""},{"name":"value2","nodeType":"YulTypedName","src":"15544:6:24","type":""},{"name":"value1","nodeType":"YulTypedName","src":"15552:6:24","type":""},{"name":"value0","nodeType":"YulTypedName","src":"15560:6:24","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15571:4:24","type":""}],"src":"15338:771:24"},{"body":{"nodeType":"YulBlock","src":"16178:80:24","statements":[{"nodeType":"YulAssignment","src":"16188:22:24","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"16203:6:24"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"16197:5:24"},"nodeType":"YulFunctionCall","src":"16197:13:24"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"16188:5:24"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16246:5:24"}],"functionName":{"name":"validator_revert_t_bytes32","nodeType":"YulIdentifier","src":"16219:26:24"},"nodeType":"YulFunctionCall","src":"16219:33:24"},"nodeType":"YulExpressionStatement","src":"16219:33:24"}]},"name":"abi_decode_t_bytes32_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"16156:6:24","type":""},{"name":"end","nodeType":"YulTypedName","src":"16164:3:24","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"16172:5:24","type":""}],"src":"16115:143:24"},{"body":{"nodeType":"YulBlock","src":"16341:274:24","statements":[{"body":{"nodeType":"YulBlock","src":"16387:83:24","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"16389:77:24"},"nodeType":"YulFunctionCall","src":"16389:79:24"},"nodeType":"YulExpressionStatement","src":"16389:79:24"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"16362:7:24"},{"name":"headStart","nodeType":"YulIdentifier","src":"16371:9:24"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"16358:3:24"},"nodeType":"YulFunctionCall","src":"16358:23:24"},{"kind":"number","nodeType":"YulLiteral","src":"16383:2:24","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"16354:3:24"},"nodeType":"YulFunctionCall","src":"16354:32:24"},"nodeType":"YulIf","src":"16351:119:24"},{"nodeType":"YulBlock","src":"16480:128:24","statements":[{"nodeType":"YulVariableDeclaration","src":"16495:15:24","value":{"kind":"number","nodeType":"YulLiteral","src":"16509:1:24","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"16499:6:24","type":""}]},{"nodeType":"YulAssignment","src":"16524:74:24","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16570:9:24"},{"name":"offset","nodeType":"YulIdentifier","src":"16581:6:24"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16566:3:24"},"nodeType":"YulFunctionCall","src":"16566:22:24"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"16590:7:24"}],"functionName":{"name":"abi_decode_t_bytes32_fromMemory","nodeType":"YulIdentifier","src":"16534:31:24"},"nodeType":"YulFunctionCall","src":"16534:64:24"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"16524:6:24"}]}]}]},"name":"abi_decode_tuple_t_bytes32_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16311:9:24","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"16322:7:24","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"16334:6:24","type":""}],"src":"16264:351:24"},{"body":{"nodeType":"YulBlock","src":"16649:152:24","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16666:1:24","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"16669:77:24","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16659:6:24"},"nodeType":"YulFunctionCall","src":"16659:88:24"},"nodeType":"YulExpressionStatement","src":"16659:88:24"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16763:1:24","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"16766:4:24","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16756:6:24"},"nodeType":"YulFunctionCall","src":"16756:15:24"},"nodeType":"YulExpressionStatement","src":"16756:15:24"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16787:1:24","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"16790:4:24","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"16780:6:24"},"nodeType":"YulFunctionCall","src":"16780:15:24"},"nodeType":"YulExpressionStatement","src":"16780:15:24"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"16621:180:24"},{"body":{"nodeType":"YulBlock","src":"16851:147:24","statements":[{"nodeType":"YulAssignment","src":"16861:25:24","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"16884:1:24"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"16866:17:24"},"nodeType":"YulFunctionCall","src":"16866:20:24"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"16861:1:24"}]},{"nodeType":"YulAssignment","src":"16895:25:24","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"16918:1:24"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"16900:17:24"},"nodeType":"YulFunctionCall","src":"16900:20:24"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"16895:1:24"}]},{"nodeType":"YulAssignment","src":"16929:16:24","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"16940:1:24"},{"name":"y","nodeType":"YulIdentifier","src":"16943:1:24"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16936:3:24"},"nodeType":"YulFunctionCall","src":"16936:9:24"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"16929:3:24"}]},{"body":{"nodeType":"YulBlock","src":"16969:22:24","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"16971:16:24"},"nodeType":"YulFunctionCall","src":"16971:18:24"},"nodeType":"YulExpressionStatement","src":"16971:18:24"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"16961:1:24"},{"name":"sum","nodeType":"YulIdentifier","src":"16964:3:24"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"16958:2:24"},"nodeType":"YulFunctionCall","src":"16958:10:24"},"nodeType":"YulIf","src":"16955:36:24"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"16838:1:24","type":""},{"name":"y","nodeType":"YulTypedName","src":"16841:1:24","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"16847:3:24","type":""}],"src":"16807:191:24"},{"body":{"nodeType":"YulBlock","src":"17049:149:24","statements":[{"nodeType":"YulAssignment","src":"17059:25:24","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"17082:1:24"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"17064:17:24"},"nodeType":"YulFunctionCall","src":"17064:20:24"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"17059:1:24"}]},{"nodeType":"YulAssignment","src":"17093:25:24","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"17116:1:24"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"17098:17:24"},"nodeType":"YulFunctionCall","src":"17098:20:24"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"17093:1:24"}]},{"nodeType":"YulAssignment","src":"17127:17:24","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"17139:1:24"},{"name":"y","nodeType":"YulIdentifier","src":"17142:1:24"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"17135:3:24"},"nodeType":"YulFunctionCall","src":"17135:9:24"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"17127:4:24"}]},{"body":{"nodeType":"YulBlock","src":"17169:22:24","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"17171:16:24"},"nodeType":"YulFunctionCall","src":"17171:18:24"},"nodeType":"YulExpressionStatement","src":"17171:18:24"}]},"condition":{"arguments":[{"name":"diff","nodeType":"YulIdentifier","src":"17160:4:24"},{"name":"x","nodeType":"YulIdentifier","src":"17166:1:24"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"17157:2:24"},"nodeType":"YulFunctionCall","src":"17157:11:24"},"nodeType":"YulIf","src":"17154:37:24"}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"17035:1:24","type":""},{"name":"y","nodeType":"YulTypedName","src":"17038:1:24","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"17044:4:24","type":""}],"src":"17004:194:24"},{"body":{"nodeType":"YulBlock","src":"17310:65:24","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"17332:6:24"},{"kind":"number","nodeType":"YulLiteral","src":"17340:1:24","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17328:3:24"},"nodeType":"YulFunctionCall","src":"17328:14:24"},{"hexValue":"4549503731323a20556e696e697469616c697a6564","kind":"string","nodeType":"YulLiteral","src":"17344:23:24","type":"","value":"EIP712: Uninitialized"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17321:6:24"},"nodeType":"YulFunctionCall","src":"17321:47:24"},"nodeType":"YulExpressionStatement","src":"17321:47:24"}]},"name":"store_literal_in_memory_2e5045ff73280aa8e8acd8c82710f23812497f87f7f576e2220a2ddd0d45eade","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"17302:6:24","type":""}],"src":"17204:171:24"},{"body":{"nodeType":"YulBlock","src":"17527:220:24","statements":[{"nodeType":"YulAssignment","src":"17537:74:24","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17603:3:24"},{"kind":"number","nodeType":"YulLiteral","src":"17608:2:24","type":"","value":"21"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"17544:58:24"},"nodeType":"YulFunctionCall","src":"17544:67:24"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"17537:3:24"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17709:3:24"}],"functionName":{"name":"store_literal_in_memory_2e5045ff73280aa8e8acd8c82710f23812497f87f7f576e2220a2ddd0d45eade","nodeType":"YulIdentifier","src":"17620:88:24"},"nodeType":"YulFunctionCall","src":"17620:93:24"},"nodeType":"YulExpressionStatement","src":"17620:93:24"},{"nodeType":"YulAssignment","src":"17722:19:24","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17733:3:24"},{"kind":"number","nodeType":"YulLiteral","src":"17738:2:24","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17729:3:24"},"nodeType":"YulFunctionCall","src":"17729:12:24"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"17722:3:24"}]}]},"name":"abi_encode_t_stringliteral_2e5045ff73280aa8e8acd8c82710f23812497f87f7f576e2220a2ddd0d45eade_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"17515:3:24","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"17523:3:24","type":""}],"src":"17381:366:24"},{"body":{"nodeType":"YulBlock","src":"17924:248:24","statements":[{"nodeType":"YulAssignment","src":"17934:26:24","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17946:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"17957:2:24","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17942:3:24"},"nodeType":"YulFunctionCall","src":"17942:18:24"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17934:4:24"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17981:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"17992:1:24","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17977:3:24"},"nodeType":"YulFunctionCall","src":"17977:17:24"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"18000:4:24"},{"name":"headStart","nodeType":"YulIdentifier","src":"18006:9:24"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"17996:3:24"},"nodeType":"YulFunctionCall","src":"17996:20:24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17970:6:24"},"nodeType":"YulFunctionCall","src":"17970:47:24"},"nodeType":"YulExpressionStatement","src":"17970:47:24"},{"nodeType":"YulAssignment","src":"18026:139:24","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"18160:4:24"}],"functionName":{"name":"abi_encode_t_stringliteral_2e5045ff73280aa8e8acd8c82710f23812497f87f7f576e2220a2ddd0d45eade_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"18034:124:24"},"nodeType":"YulFunctionCall","src":"18034:131:24"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18026:4:24"}]}]},"name":"abi_encode_tuple_t_stringliteral_2e5045ff73280aa8e8acd8c82710f23812497f87f7f576e2220a2ddd0d45eade__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17904:9:24","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"17919:4:24","type":""}],"src":"17753:419:24"},{"body":{"nodeType":"YulBlock","src":"18206:152:24","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18223:1:24","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"18226:77:24","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18216:6:24"},"nodeType":"YulFunctionCall","src":"18216:88:24"},"nodeType":"YulExpressionStatement","src":"18216:88:24"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18320:1:24","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"18323:4:24","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18313:6:24"},"nodeType":"YulFunctionCall","src":"18313:15:24"},"nodeType":"YulExpressionStatement","src":"18313:15:24"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18344:1:24","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"18347:4:24","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"18337:6:24"},"nodeType":"YulFunctionCall","src":"18337:15:24"},"nodeType":"YulExpressionStatement","src":"18337:15:24"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"18178:180:24"},{"body":{"nodeType":"YulBlock","src":"18417:32:24","statements":[{"nodeType":"YulAssignment","src":"18427:16:24","value":{"name":"value","nodeType":"YulIdentifier","src":"18438:5:24"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"18427:7:24"}]}]},"name":"cleanup_t_rational_1_by_1","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"18399:5:24","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"18409:7:24","type":""}],"src":"18364:85:24"},{"body":{"nodeType":"YulBlock","src":"18499:57:24","statements":[{"nodeType":"YulAssignment","src":"18509:41:24","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"18524:5:24"},{"kind":"number","nodeType":"YulLiteral","src":"18531:18:24","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"18520:3:24"},"nodeType":"YulFunctionCall","src":"18520:30:24"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"18509:7:24"}]}]},"name":"cleanup_t_uint64","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"18481:5:24","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"18491:7:24","type":""}],"src":"18455:101:24"},{"body":{"nodeType":"YulBlock","src":"18594:28:24","statements":[{"nodeType":"YulAssignment","src":"18604:12:24","value":{"name":"value","nodeType":"YulIdentifier","src":"18611:5:24"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"18604:3:24"}]}]},"name":"identity","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"18580:5:24","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"18590:3:24","type":""}],"src":"18562:60:24"},{"body":{"nodeType":"YulBlock","src":"18695:89:24","statements":[{"nodeType":"YulAssignment","src":"18705:73:24","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"18770:5:24"}],"functionName":{"name":"cleanup_t_rational_1_by_1","nodeType":"YulIdentifier","src":"18744:25:24"},"nodeType":"YulFunctionCall","src":"18744:32:24"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"18735:8:24"},"nodeType":"YulFunctionCall","src":"18735:42:24"}],"functionName":{"name":"cleanup_t_uint64","nodeType":"YulIdentifier","src":"18718:16:24"},"nodeType":"YulFunctionCall","src":"18718:60:24"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"18705:9:24"}]}]},"name":"convert_t_rational_1_by_1_to_t_uint64","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"18675:5:24","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"18685:9:24","type":""}],"src":"18628:156:24"},{"body":{"nodeType":"YulBlock","src":"18862:73:24","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18879:3:24"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"18922:5:24"}],"functionName":{"name":"convert_t_rational_1_by_1_to_t_uint64","nodeType":"YulIdentifier","src":"18884:37:24"},"nodeType":"YulFunctionCall","src":"18884:44:24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18872:6:24"},"nodeType":"YulFunctionCall","src":"18872:57:24"},"nodeType":"YulExpressionStatement","src":"18872:57:24"}]},"name":"abi_encode_t_rational_1_by_1_to_t_uint64_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"18850:5:24","type":""},{"name":"pos","nodeType":"YulTypedName","src":"18857:3:24","type":""}],"src":"18790:145:24"},{"body":{"nodeType":"YulBlock","src":"19046:131:24","statements":[{"nodeType":"YulAssignment","src":"19056:26:24","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19068:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"19079:2:24","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19064:3:24"},"nodeType":"YulFunctionCall","src":"19064:18:24"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19056:4:24"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"19143:6:24"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19156:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"19167:1:24","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19152:3:24"},"nodeType":"YulFunctionCall","src":"19152:17:24"}],"functionName":{"name":"abi_encode_t_rational_1_by_1_to_t_uint64_fromStack","nodeType":"YulIdentifier","src":"19092:50:24"},"nodeType":"YulFunctionCall","src":"19092:78:24"},"nodeType":"YulExpressionStatement","src":"19092:78:24"}]},"name":"abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"19018:9:24","type":""},{"name":"value0","nodeType":"YulTypedName","src":"19030:6:24","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"19041:4:24","type":""}],"src":"18941:236:24"},{"body":{"nodeType":"YulBlock","src":"19421:537:24","statements":[{"nodeType":"YulAssignment","src":"19431:27:24","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19443:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"19454:3:24","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19439:3:24"},"nodeType":"YulFunctionCall","src":"19439:19:24"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19431:4:24"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"19512:6:24"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19525:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"19536:1:24","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19521:3:24"},"nodeType":"YulFunctionCall","src":"19521:17:24"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"19468:43:24"},"nodeType":"YulFunctionCall","src":"19468:71:24"},"nodeType":"YulExpressionStatement","src":"19468:71:24"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"19593:6:24"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19606:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"19617:2:24","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19602:3:24"},"nodeType":"YulFunctionCall","src":"19602:18:24"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"19549:43:24"},"nodeType":"YulFunctionCall","src":"19549:72:24"},"nodeType":"YulExpressionStatement","src":"19549:72:24"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"19675:6:24"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19688:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"19699:2:24","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19684:3:24"},"nodeType":"YulFunctionCall","src":"19684:18:24"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"19631:43:24"},"nodeType":"YulFunctionCall","src":"19631:72:24"},"nodeType":"YulExpressionStatement","src":"19631:72:24"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"19757:6:24"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19770:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"19781:2:24","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19766:3:24"},"nodeType":"YulFunctionCall","src":"19766:18:24"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"19713:43:24"},"nodeType":"YulFunctionCall","src":"19713:72:24"},"nodeType":"YulExpressionStatement","src":"19713:72:24"},{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"19839:6:24"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19852:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"19863:3:24","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19848:3:24"},"nodeType":"YulFunctionCall","src":"19848:19:24"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"19795:43:24"},"nodeType":"YulFunctionCall","src":"19795:73:24"},"nodeType":"YulExpressionStatement","src":"19795:73:24"},{"expression":{"arguments":[{"name":"value5","nodeType":"YulIdentifier","src":"19922:6:24"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19935:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"19946:3:24","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19931:3:24"},"nodeType":"YulFunctionCall","src":"19931:19:24"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"19878:43:24"},"nodeType":"YulFunctionCall","src":"19878:73:24"},"nodeType":"YulExpressionStatement","src":"19878:73:24"}]},"name":"abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"19353:9:24","type":""},{"name":"value5","nodeType":"YulTypedName","src":"19365:6:24","type":""},{"name":"value4","nodeType":"YulTypedName","src":"19373:6:24","type":""},{"name":"value3","nodeType":"YulTypedName","src":"19381:6:24","type":""},{"name":"value2","nodeType":"YulTypedName","src":"19389:6:24","type":""},{"name":"value1","nodeType":"YulTypedName","src":"19397:6:24","type":""},{"name":"value0","nodeType":"YulTypedName","src":"19405:6:24","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"19416:4:24","type":""}],"src":"19183:775:24"},{"body":{"nodeType":"YulBlock","src":"20090:206:24","statements":[{"nodeType":"YulAssignment","src":"20100:26:24","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20112:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"20123:2:24","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20108:3:24"},"nodeType":"YulFunctionCall","src":"20108:18:24"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20100:4:24"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"20180:6:24"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20193:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"20204:1:24","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20189:3:24"},"nodeType":"YulFunctionCall","src":"20189:17:24"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"20136:43:24"},"nodeType":"YulFunctionCall","src":"20136:71:24"},"nodeType":"YulExpressionStatement","src":"20136:71:24"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"20261:6:24"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20274:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"20285:2:24","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20270:3:24"},"nodeType":"YulFunctionCall","src":"20270:18:24"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"20217:43:24"},"nodeType":"YulFunctionCall","src":"20217:72:24"},"nodeType":"YulExpressionStatement","src":"20217:72:24"}]},"name":"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20054:9:24","type":""},{"name":"value1","nodeType":"YulTypedName","src":"20066:6:24","type":""},{"name":"value0","nodeType":"YulTypedName","src":"20074:6:24","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"20085:4:24","type":""}],"src":"19964:332:24"},{"body":{"nodeType":"YulBlock","src":"20456:288:24","statements":[{"nodeType":"YulAssignment","src":"20466:26:24","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20478:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"20489:2:24","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20474:3:24"},"nodeType":"YulFunctionCall","src":"20474:18:24"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20466:4:24"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"20546:6:24"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20559:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"20570:1:24","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20555:3:24"},"nodeType":"YulFunctionCall","src":"20555:17:24"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"20502:43:24"},"nodeType":"YulFunctionCall","src":"20502:71:24"},"nodeType":"YulExpressionStatement","src":"20502:71:24"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"20627:6:24"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20640:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"20651:2:24","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20636:3:24"},"nodeType":"YulFunctionCall","src":"20636:18:24"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"20583:43:24"},"nodeType":"YulFunctionCall","src":"20583:72:24"},"nodeType":"YulExpressionStatement","src":"20583:72:24"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"20709:6:24"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20722:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"20733:2:24","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20718:3:24"},"nodeType":"YulFunctionCall","src":"20718:18:24"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"20665:43:24"},"nodeType":"YulFunctionCall","src":"20665:72:24"},"nodeType":"YulExpressionStatement","src":"20665:72:24"}]},"name":"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20412:9:24","type":""},{"name":"value2","nodeType":"YulTypedName","src":"20424:6:24","type":""},{"name":"value1","nodeType":"YulTypedName","src":"20432:6:24","type":""},{"name":"value0","nodeType":"YulTypedName","src":"20440:6:24","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"20451:4:24","type":""}],"src":"20302:442:24"},{"body":{"nodeType":"YulBlock","src":"20960:454:24","statements":[{"nodeType":"YulAssignment","src":"20970:27:24","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20982:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"20993:3:24","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20978:3:24"},"nodeType":"YulFunctionCall","src":"20978:19:24"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20970:4:24"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"21051:6:24"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21064:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"21075:1:24","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21060:3:24"},"nodeType":"YulFunctionCall","src":"21060:17:24"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"21007:43:24"},"nodeType":"YulFunctionCall","src":"21007:71:24"},"nodeType":"YulExpressionStatement","src":"21007:71:24"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"21132:6:24"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21145:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"21156:2:24","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21141:3:24"},"nodeType":"YulFunctionCall","src":"21141:18:24"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"21088:43:24"},"nodeType":"YulFunctionCall","src":"21088:72:24"},"nodeType":"YulExpressionStatement","src":"21088:72:24"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"21214:6:24"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21227:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"21238:2:24","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21223:3:24"},"nodeType":"YulFunctionCall","src":"21223:18:24"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"21170:43:24"},"nodeType":"YulFunctionCall","src":"21170:72:24"},"nodeType":"YulExpressionStatement","src":"21170:72:24"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"21296:6:24"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21309:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"21320:2:24","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21305:3:24"},"nodeType":"YulFunctionCall","src":"21305:18:24"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"21252:43:24"},"nodeType":"YulFunctionCall","src":"21252:72:24"},"nodeType":"YulExpressionStatement","src":"21252:72:24"},{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"21378:6:24"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21391:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"21402:3:24","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21387:3:24"},"nodeType":"YulFunctionCall","src":"21387:19:24"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"21334:43:24"},"nodeType":"YulFunctionCall","src":"21334:73:24"},"nodeType":"YulExpressionStatement","src":"21334:73:24"}]},"name":"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20900:9:24","type":""},{"name":"value4","nodeType":"YulTypedName","src":"20912:6:24","type":""},{"name":"value3","nodeType":"YulTypedName","src":"20920:6:24","type":""},{"name":"value2","nodeType":"YulTypedName","src":"20928:6:24","type":""},{"name":"value1","nodeType":"YulTypedName","src":"20936:6:24","type":""},{"name":"value0","nodeType":"YulTypedName","src":"20944:6:24","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"20955:4:24","type":""}],"src":"20750:664:24"},{"body":{"nodeType":"YulBlock","src":"21474:87:24","statements":[{"nodeType":"YulAssignment","src":"21484:11:24","value":{"name":"ptr","nodeType":"YulIdentifier","src":"21492:3:24"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"21484:4:24"}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21512:1:24","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"21515:3:24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21505:6:24"},"nodeType":"YulFunctionCall","src":"21505:14:24"},"nodeType":"YulExpressionStatement","src":"21505:14:24"},{"nodeType":"YulAssignment","src":"21528:26:24","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21546:1:24","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"21549:4:24","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"21536:9:24"},"nodeType":"YulFunctionCall","src":"21536:18:24"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"21528:4:24"}]}]},"name":"array_dataslot_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"21461:3:24","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"21469:4:24","type":""}],"src":"21420:141:24"},{"body":{"nodeType":"YulBlock","src":"21611:49:24","statements":[{"nodeType":"YulAssignment","src":"21621:33:24","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"21639:5:24"},{"kind":"number","nodeType":"YulLiteral","src":"21646:2:24","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21635:3:24"},"nodeType":"YulFunctionCall","src":"21635:14:24"},{"kind":"number","nodeType":"YulLiteral","src":"21651:2:24","type":"","value":"32"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"21631:3:24"},"nodeType":"YulFunctionCall","src":"21631:23:24"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"21621:6:24"}]}]},"name":"divide_by_32_ceil","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"21594:5:24","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"21604:6:24","type":""}],"src":"21567:93:24"},{"body":{"nodeType":"YulBlock","src":"21719:54:24","statements":[{"nodeType":"YulAssignment","src":"21729:37:24","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"21754:4:24"},{"name":"value","nodeType":"YulIdentifier","src":"21760:5:24"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"21750:3:24"},"nodeType":"YulFunctionCall","src":"21750:16:24"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"21729:8:24"}]}]},"name":"shift_left_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"21694:4:24","type":""},{"name":"value","nodeType":"YulTypedName","src":"21700:5:24","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"21710:8:24","type":""}],"src":"21666:107:24"},{"body":{"nodeType":"YulBlock","src":"21855:317:24","statements":[{"nodeType":"YulVariableDeclaration","src":"21865:35:24","value":{"arguments":[{"name":"shiftBytes","nodeType":"YulIdentifier","src":"21886:10:24"},{"kind":"number","nodeType":"YulLiteral","src":"21898:1:24","type":"","value":"8"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"21882:3:24"},"nodeType":"YulFunctionCall","src":"21882:18:24"},"variables":[{"name":"shiftBits","nodeType":"YulTypedName","src":"21869:9:24","type":""}]},{"nodeType":"YulVariableDeclaration","src":"21909:109:24","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"21940:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"21951:66:24","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"21921:18:24"},"nodeType":"YulFunctionCall","src":"21921:97:24"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"21913:4:24","type":""}]},{"nodeType":"YulAssignment","src":"22027:51:24","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"22058:9:24"},{"name":"toInsert","nodeType":"YulIdentifier","src":"22069:8:24"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"22039:18:24"},"nodeType":"YulFunctionCall","src":"22039:39:24"},"variableNames":[{"name":"toInsert","nodeType":"YulIdentifier","src":"22027:8:24"}]},{"nodeType":"YulAssignment","src":"22087:30:24","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"22100:5:24"},{"arguments":[{"name":"mask","nodeType":"YulIdentifier","src":"22111:4:24"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"22107:3:24"},"nodeType":"YulFunctionCall","src":"22107:9:24"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"22096:3:24"},"nodeType":"YulFunctionCall","src":"22096:21:24"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"22087:5:24"}]},{"nodeType":"YulAssignment","src":"22126:40:24","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"22139:5:24"},{"arguments":[{"name":"toInsert","nodeType":"YulIdentifier","src":"22150:8:24"},{"name":"mask","nodeType":"YulIdentifier","src":"22160:4:24"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"22146:3:24"},"nodeType":"YulFunctionCall","src":"22146:19:24"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"22136:2:24"},"nodeType":"YulFunctionCall","src":"22136:30:24"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"22126:6:24"}]}]},"name":"update_byte_slice_dynamic32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"21816:5:24","type":""},{"name":"shiftBytes","nodeType":"YulTypedName","src":"21823:10:24","type":""},{"name":"toInsert","nodeType":"YulTypedName","src":"21835:8:24","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"21848:6:24","type":""}],"src":"21779:393:24"},{"body":{"nodeType":"YulBlock","src":"22238:82:24","statements":[{"nodeType":"YulAssignment","src":"22248:66:24","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"22306:5:24"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"22288:17:24"},"nodeType":"YulFunctionCall","src":"22288:24:24"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"22279:8:24"},"nodeType":"YulFunctionCall","src":"22279:34:24"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"22261:17:24"},"nodeType":"YulFunctionCall","src":"22261:53:24"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"22248:9:24"}]}]},"name":"convert_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"22218:5:24","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"22228:9:24","type":""}],"src":"22178:142:24"},{"body":{"nodeType":"YulBlock","src":"22373:28:24","statements":[{"nodeType":"YulAssignment","src":"22383:12:24","value":{"name":"value","nodeType":"YulIdentifier","src":"22390:5:24"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"22383:3:24"}]}]},"name":"prepare_store_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"22359:5:24","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"22369:3:24","type":""}],"src":"22326:75:24"},{"body":{"nodeType":"YulBlock","src":"22483:193:24","statements":[{"nodeType":"YulVariableDeclaration","src":"22493:63:24","value":{"arguments":[{"name":"value_0","nodeType":"YulIdentifier","src":"22548:7:24"}],"functionName":{"name":"convert_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"22517:30:24"},"nodeType":"YulFunctionCall","src":"22517:39:24"},"variables":[{"name":"convertedValue_0","nodeType":"YulTypedName","src":"22497:16:24","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"22572:4:24"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"22612:4:24"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"22606:5:24"},"nodeType":"YulFunctionCall","src":"22606:11:24"},{"name":"offset","nodeType":"YulIdentifier","src":"22619:6:24"},{"arguments":[{"name":"convertedValue_0","nodeType":"YulIdentifier","src":"22651:16:24"}],"functionName":{"name":"prepare_store_t_uint256","nodeType":"YulIdentifier","src":"22627:23:24"},"nodeType":"YulFunctionCall","src":"22627:41:24"}],"functionName":{"name":"update_byte_slice_dynamic32","nodeType":"YulIdentifier","src":"22578:27:24"},"nodeType":"YulFunctionCall","src":"22578:91:24"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"22565:6:24"},"nodeType":"YulFunctionCall","src":"22565:105:24"},"nodeType":"YulExpressionStatement","src":"22565:105:24"}]},"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"22460:4:24","type":""},{"name":"offset","nodeType":"YulTypedName","src":"22466:6:24","type":""},{"name":"value_0","nodeType":"YulTypedName","src":"22474:7:24","type":""}],"src":"22407:269:24"},{"body":{"nodeType":"YulBlock","src":"22731:24:24","statements":[{"nodeType":"YulAssignment","src":"22741:8:24","value":{"kind":"number","nodeType":"YulLiteral","src":"22748:1:24","type":"","value":"0"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"22741:3:24"}]}]},"name":"zero_value_for_split_t_uint256","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"22727:3:24","type":""}],"src":"22682:73:24"},{"body":{"nodeType":"YulBlock","src":"22814:136:24","statements":[{"nodeType":"YulVariableDeclaration","src":"22824:46:24","value":{"arguments":[],"functionName":{"name":"zero_value_for_split_t_uint256","nodeType":"YulIdentifier","src":"22838:30:24"},"nodeType":"YulFunctionCall","src":"22838:32:24"},"variables":[{"name":"zero_0","nodeType":"YulTypedName","src":"22828:6:24","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"22923:4:24"},{"name":"offset","nodeType":"YulIdentifier","src":"22929:6:24"},{"name":"zero_0","nodeType":"YulIdentifier","src":"22937:6:24"}],"functionName":{"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"22879:43:24"},"nodeType":"YulFunctionCall","src":"22879:65:24"},"nodeType":"YulExpressionStatement","src":"22879:65:24"}]},"name":"storage_set_to_zero_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"22800:4:24","type":""},{"name":"offset","nodeType":"YulTypedName","src":"22806:6:24","type":""}],"src":"22761:189:24"},{"body":{"nodeType":"YulBlock","src":"23006:136:24","statements":[{"body":{"nodeType":"YulBlock","src":"23073:63:24","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"23117:5:24"},{"kind":"number","nodeType":"YulLiteral","src":"23124:1:24","type":"","value":"0"}],"functionName":{"name":"storage_set_to_zero_t_uint256","nodeType":"YulIdentifier","src":"23087:29:24"},"nodeType":"YulFunctionCall","src":"23087:39:24"},"nodeType":"YulExpressionStatement","src":"23087:39:24"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"23026:5:24"},{"name":"end","nodeType":"YulIdentifier","src":"23033:3:24"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"23023:2:24"},"nodeType":"YulFunctionCall","src":"23023:14:24"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"23038:26:24","statements":[{"nodeType":"YulAssignment","src":"23040:22:24","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"23053:5:24"},{"kind":"number","nodeType":"YulLiteral","src":"23060:1:24","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23049:3:24"},"nodeType":"YulFunctionCall","src":"23049:13:24"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"23040:5:24"}]}]},"pre":{"nodeType":"YulBlock","src":"23020:2:24","statements":[]},"src":"23016:120:24"}]},"name":"clear_storage_range_t_bytes1","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nodeType":"YulTypedName","src":"22994:5:24","type":""},{"name":"end","nodeType":"YulTypedName","src":"23001:3:24","type":""}],"src":"22956:186:24"},{"body":{"nodeType":"YulBlock","src":"23227:464:24","statements":[{"body":{"nodeType":"YulBlock","src":"23253:431:24","statements":[{"nodeType":"YulVariableDeclaration","src":"23267:54:24","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"23315:5:24"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"23283:31:24"},"nodeType":"YulFunctionCall","src":"23283:38:24"},"variables":[{"name":"dataArea","nodeType":"YulTypedName","src":"23271:8:24","type":""}]},{"nodeType":"YulVariableDeclaration","src":"23334:63:24","value":{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"23357:8:24"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"23385:10:24"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"23367:17:24"},"nodeType":"YulFunctionCall","src":"23367:29:24"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23353:3:24"},"nodeType":"YulFunctionCall","src":"23353:44:24"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"23338:11:24","type":""}]},{"body":{"nodeType":"YulBlock","src":"23554:27:24","statements":[{"nodeType":"YulAssignment","src":"23556:23:24","value":{"name":"dataArea","nodeType":"YulIdentifier","src":"23571:8:24"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"23556:11:24"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"23538:10:24"},{"kind":"number","nodeType":"YulLiteral","src":"23550:2:24","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"23535:2:24"},"nodeType":"YulFunctionCall","src":"23535:18:24"},"nodeType":"YulIf","src":"23532:49:24"},{"expression":{"arguments":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"23623:11:24"},{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"23640:8:24"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"23668:3:24"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"23650:17:24"},"nodeType":"YulFunctionCall","src":"23650:22:24"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23636:3:24"},"nodeType":"YulFunctionCall","src":"23636:37:24"}],"functionName":{"name":"clear_storage_range_t_bytes1","nodeType":"YulIdentifier","src":"23594:28:24"},"nodeType":"YulFunctionCall","src":"23594:80:24"},"nodeType":"YulExpressionStatement","src":"23594:80:24"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"23244:3:24"},{"kind":"number","nodeType":"YulLiteral","src":"23249:2:24","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"23241:2:24"},"nodeType":"YulFunctionCall","src":"23241:11:24"},"nodeType":"YulIf","src":"23238:446:24"}]},"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"23203:5:24","type":""},{"name":"len","nodeType":"YulTypedName","src":"23210:3:24","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"23215:10:24","type":""}],"src":"23148:543:24"},{"body":{"nodeType":"YulBlock","src":"23760:54:24","statements":[{"nodeType":"YulAssignment","src":"23770:37:24","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"23795:4:24"},{"name":"value","nodeType":"YulIdentifier","src":"23801:5:24"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"23791:3:24"},"nodeType":"YulFunctionCall","src":"23791:16:24"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"23770:8:24"}]}]},"name":"shift_right_unsigned_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"23735:4:24","type":""},{"name":"value","nodeType":"YulTypedName","src":"23741:5:24","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"23751:8:24","type":""}],"src":"23697:117:24"},{"body":{"nodeType":"YulBlock","src":"23871:118:24","statements":[{"nodeType":"YulVariableDeclaration","src":"23881:68:24","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"23930:1:24","type":"","value":"8"},{"name":"bytes","nodeType":"YulIdentifier","src":"23933:5:24"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"23926:3:24"},"nodeType":"YulFunctionCall","src":"23926:13:24"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"23945:1:24","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"23941:3:24"},"nodeType":"YulFunctionCall","src":"23941:6:24"}],"functionName":{"name":"shift_right_unsigned_dynamic","nodeType":"YulIdentifier","src":"23897:28:24"},"nodeType":"YulFunctionCall","src":"23897:51:24"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"23893:3:24"},"nodeType":"YulFunctionCall","src":"23893:56:24"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"23885:4:24","type":""}]},{"nodeType":"YulAssignment","src":"23958:25:24","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"23972:4:24"},{"name":"mask","nodeType":"YulIdentifier","src":"23978:4:24"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"23968:3:24"},"nodeType":"YulFunctionCall","src":"23968:15:24"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"23958:6:24"}]}]},"name":"mask_bytes_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"23848:4:24","type":""},{"name":"bytes","nodeType":"YulTypedName","src":"23854:5:24","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"23864:6:24","type":""}],"src":"23820:169:24"},{"body":{"nodeType":"YulBlock","src":"24075:214:24","statements":[{"nodeType":"YulAssignment","src":"24208:37:24","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"24235:4:24"},{"name":"len","nodeType":"YulIdentifier","src":"24241:3:24"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"24216:18:24"},"nodeType":"YulFunctionCall","src":"24216:29:24"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"24208:4:24"}]},{"nodeType":"YulAssignment","src":"24254:29:24","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"24265:4:24"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"24275:1:24","type":"","value":"2"},{"name":"len","nodeType":"YulIdentifier","src":"24278:3:24"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"24271:3:24"},"nodeType":"YulFunctionCall","src":"24271:11:24"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"24262:2:24"},"nodeType":"YulFunctionCall","src":"24262:21:24"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"24254:4:24"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"24056:4:24","type":""},{"name":"len","nodeType":"YulTypedName","src":"24062:3:24","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"24070:4:24","type":""}],"src":"23994:295:24"},{"body":{"nodeType":"YulBlock","src":"24386:1303:24","statements":[{"nodeType":"YulVariableDeclaration","src":"24397:51:24","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"24444:3:24"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"24411:32:24"},"nodeType":"YulFunctionCall","src":"24411:37:24"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"24401:6:24","type":""}]},{"body":{"nodeType":"YulBlock","src":"24533:22:24","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"24535:16:24"},"nodeType":"YulFunctionCall","src":"24535:18:24"},"nodeType":"YulExpressionStatement","src":"24535:18:24"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"24505:6:24"},{"kind":"number","nodeType":"YulLiteral","src":"24513:18:24","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"24502:2:24"},"nodeType":"YulFunctionCall","src":"24502:30:24"},"nodeType":"YulIf","src":"24499:56:24"},{"nodeType":"YulVariableDeclaration","src":"24565:52:24","value":{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"24611:4:24"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"24605:5:24"},"nodeType":"YulFunctionCall","src":"24605:11:24"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"24579:25:24"},"nodeType":"YulFunctionCall","src":"24579:38:24"},"variables":[{"name":"oldLen","nodeType":"YulTypedName","src":"24569:6:24","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"24710:4:24"},{"name":"oldLen","nodeType":"YulIdentifier","src":"24716:6:24"},{"name":"newLen","nodeType":"YulIdentifier","src":"24724:6:24"}],"functionName":{"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulIdentifier","src":"24664:45:24"},"nodeType":"YulFunctionCall","src":"24664:67:24"},"nodeType":"YulExpressionStatement","src":"24664:67:24"},{"nodeType":"YulVariableDeclaration","src":"24741:18:24","value":{"kind":"number","nodeType":"YulLiteral","src":"24758:1:24","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"24745:9:24","type":""}]},{"nodeType":"YulAssignment","src":"24769:17:24","value":{"kind":"number","nodeType":"YulLiteral","src":"24782:4:24","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"24769:9:24"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"24833:611:24","statements":[{"nodeType":"YulVariableDeclaration","src":"24847:37:24","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"24866:6:24"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"24878:4:24","type":"","value":"0x1f"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"24874:3:24"},"nodeType":"YulFunctionCall","src":"24874:9:24"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"24862:3:24"},"nodeType":"YulFunctionCall","src":"24862:22:24"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"24851:7:24","type":""}]},{"nodeType":"YulVariableDeclaration","src":"24898:51:24","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"24944:4:24"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"24912:31:24"},"nodeType":"YulFunctionCall","src":"24912:37:24"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"24902:6:24","type":""}]},{"nodeType":"YulVariableDeclaration","src":"24962:10:24","value":{"kind":"number","nodeType":"YulLiteral","src":"24971:1:24","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"24966:1:24","type":""}]},{"body":{"nodeType":"YulBlock","src":"25030:163:24","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"25055:6:24"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"25073:3:24"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"25078:9:24"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25069:3:24"},"nodeType":"YulFunctionCall","src":"25069:19:24"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"25063:5:24"},"nodeType":"YulFunctionCall","src":"25063:26:24"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"25048:6:24"},"nodeType":"YulFunctionCall","src":"25048:42:24"},"nodeType":"YulExpressionStatement","src":"25048:42:24"},{"nodeType":"YulAssignment","src":"25107:24:24","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"25121:6:24"},{"kind":"number","nodeType":"YulLiteral","src":"25129:1:24","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25117:3:24"},"nodeType":"YulFunctionCall","src":"25117:14:24"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"25107:6:24"}]},{"nodeType":"YulAssignment","src":"25148:31:24","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"25165:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"25176:2:24","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25161:3:24"},"nodeType":"YulFunctionCall","src":"25161:18:24"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"25148:9:24"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"24996:1:24"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"24999:7:24"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"24993:2:24"},"nodeType":"YulFunctionCall","src":"24993:14:24"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"25008:21:24","statements":[{"nodeType":"YulAssignment","src":"25010:17:24","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"25019:1:24"},{"kind":"number","nodeType":"YulLiteral","src":"25022:4:24","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25015:3:24"},"nodeType":"YulFunctionCall","src":"25015:12:24"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"25010:1:24"}]}]},"pre":{"nodeType":"YulBlock","src":"24989:3:24","statements":[]},"src":"24985:208:24"},{"body":{"nodeType":"YulBlock","src":"25229:156:24","statements":[{"nodeType":"YulVariableDeclaration","src":"25247:43:24","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"25274:3:24"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"25279:9:24"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25270:3:24"},"nodeType":"YulFunctionCall","src":"25270:19:24"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"25264:5:24"},"nodeType":"YulFunctionCall","src":"25264:26:24"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"25251:9:24","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"25314:6:24"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"25341:9:24"},{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"25356:6:24"},{"kind":"number","nodeType":"YulLiteral","src":"25364:4:24","type":"","value":"0x1f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"25352:3:24"},"nodeType":"YulFunctionCall","src":"25352:17:24"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"25322:18:24"},"nodeType":"YulFunctionCall","src":"25322:48:24"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"25307:6:24"},"nodeType":"YulFunctionCall","src":"25307:64:24"},"nodeType":"YulExpressionStatement","src":"25307:64:24"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"25212:7:24"},{"name":"newLen","nodeType":"YulIdentifier","src":"25221:6:24"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"25209:2:24"},"nodeType":"YulFunctionCall","src":"25209:19:24"},"nodeType":"YulIf","src":"25206:179:24"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"25405:4:24"},{"arguments":[{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"25419:6:24"},{"kind":"number","nodeType":"YulLiteral","src":"25427:1:24","type":"","value":"2"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"25415:3:24"},"nodeType":"YulFunctionCall","src":"25415:14:24"},{"kind":"number","nodeType":"YulLiteral","src":"25431:1:24","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25411:3:24"},"nodeType":"YulFunctionCall","src":"25411:22:24"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"25398:6:24"},"nodeType":"YulFunctionCall","src":"25398:36:24"},"nodeType":"YulExpressionStatement","src":"25398:36:24"}]},"nodeType":"YulCase","src":"24826:618:24","value":{"kind":"number","nodeType":"YulLiteral","src":"24831:1:24","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"25461:222:24","statements":[{"nodeType":"YulVariableDeclaration","src":"25475:14:24","value":{"kind":"number","nodeType":"YulLiteral","src":"25488:1:24","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"25479:5:24","type":""}]},{"body":{"nodeType":"YulBlock","src":"25512:67:24","statements":[{"nodeType":"YulAssignment","src":"25530:35:24","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"25549:3:24"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"25554:9:24"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25545:3:24"},"nodeType":"YulFunctionCall","src":"25545:19:24"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"25539:5:24"},"nodeType":"YulFunctionCall","src":"25539:26:24"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"25530:5:24"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"25505:6:24"},"nodeType":"YulIf","src":"25502:77:24"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"25599:4:24"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"25658:5:24"},{"name":"newLen","nodeType":"YulIdentifier","src":"25665:6:24"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"25605:52:24"},"nodeType":"YulFunctionCall","src":"25605:67:24"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"25592:6:24"},"nodeType":"YulFunctionCall","src":"25592:81:24"},"nodeType":"YulExpressionStatement","src":"25592:81:24"}]},"nodeType":"YulCase","src":"25453:230:24","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"24806:6:24"},{"kind":"number","nodeType":"YulLiteral","src":"24814:2:24","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"24803:2:24"},"nodeType":"YulFunctionCall","src":"24803:14:24"},"nodeType":"YulSwitch","src":"24796:887:24"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"24375:4:24","type":""},{"name":"src","nodeType":"YulTypedName","src":"24381:3:24","type":""}],"src":"24294:1395:24"},{"body":{"nodeType":"YulBlock","src":"25873:367:24","statements":[{"nodeType":"YulAssignment","src":"25883:27:24","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25895:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"25906:3:24","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25891:3:24"},"nodeType":"YulFunctionCall","src":"25891:19:24"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"25883:4:24"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"25964:6:24"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25977:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"25988:1:24","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25973:3:24"},"nodeType":"YulFunctionCall","src":"25973:17:24"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"25920:43:24"},"nodeType":"YulFunctionCall","src":"25920:71:24"},"nodeType":"YulExpressionStatement","src":"25920:71:24"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"26041:6:24"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26054:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"26065:2:24","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26050:3:24"},"nodeType":"YulFunctionCall","src":"26050:18:24"}],"functionName":{"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulIdentifier","src":"26001:39:24"},"nodeType":"YulFunctionCall","src":"26001:68:24"},"nodeType":"YulExpressionStatement","src":"26001:68:24"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"26123:6:24"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26136:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"26147:2:24","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26132:3:24"},"nodeType":"YulFunctionCall","src":"26132:18:24"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"26079:43:24"},"nodeType":"YulFunctionCall","src":"26079:72:24"},"nodeType":"YulExpressionStatement","src":"26079:72:24"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"26205:6:24"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26218:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"26229:2:24","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26214:3:24"},"nodeType":"YulFunctionCall","src":"26214:18:24"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"26161:43:24"},"nodeType":"YulFunctionCall","src":"26161:72:24"},"nodeType":"YulExpressionStatement","src":"26161:72:24"}]},"name":"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"25821:9:24","type":""},{"name":"value3","nodeType":"YulTypedName","src":"25833:6:24","type":""},{"name":"value2","nodeType":"YulTypedName","src":"25841:6:24","type":""},{"name":"value1","nodeType":"YulTypedName","src":"25849:6:24","type":""},{"name":"value0","nodeType":"YulTypedName","src":"25857:6:24","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"25868:4:24","type":""}],"src":"25695:545:24"},{"body":{"nodeType":"YulBlock","src":"26274:152:24","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"26291:1:24","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"26294:77:24","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26284:6:24"},"nodeType":"YulFunctionCall","src":"26284:88:24"},"nodeType":"YulExpressionStatement","src":"26284:88:24"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"26388:1:24","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"26391:4:24","type":"","value":"0x21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26381:6:24"},"nodeType":"YulFunctionCall","src":"26381:15:24"},"nodeType":"YulExpressionStatement","src":"26381:15:24"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"26412:1:24","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"26415:4:24","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"26405:6:24"},"nodeType":"YulFunctionCall","src":"26405:15:24"},"nodeType":"YulExpressionStatement","src":"26405:15:24"}]},"name":"panic_error_0x21","nodeType":"YulFunctionDefinition","src":"26246:180:24"}]},"contents":"{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_contract$_IERC3156FlashBorrower_$2306(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_IERC3156FlashBorrower_$2306(value) {\n        if iszero(eq(value, cleanup_t_contract$_IERC3156FlashBorrower_$2306(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_IERC3156FlashBorrower_$2306(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_contract$_IERC3156FlashBorrower_$2306(value)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() {\n        revert(0, 0)\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x01)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    function abi_decode_tuple_t_contract$_IERC3156FlashBorrower_$2306t_addresst_uint256t_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_IERC3156FlashBorrower_$2306(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3, value4 := abi_decode_t_bytes_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bytes1(value) -> cleaned {\n        cleaned := and(value, 0xff00000000000000000000000000000000000000000000000000000000000000)\n    }\n\n    function abi_encode_t_bytes1_to_t_bytes1_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes1(value))\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function array_length_t_array$_t_uint256_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encodeUpdatedPos_t_uint256_to_t_uint256(value0, pos) -> updatedPos {\n        abi_encode_t_uint256_to_t_uint256(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // uint256[] -> uint256[]\n    function abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_uint256_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_uint256_to_t_uint256(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__to_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart , value6, value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 224)\n\n        abi_encode_t_bytes1_to_t_bytes1_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value1,  tail)\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value2,  tail)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_address_to_t_address_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value5,  add(headStart, 160))\n\n        mstore(add(headStart, 192), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value6,  tail)\n\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_uint8(value) {\n        if iszero(eq(value, cleanup_t_uint8(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint8(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint8(value)\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6 {\n        if slt(sub(dataEnd, headStart), 224) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint8(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 160\n\n            value5 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 192\n\n            value6 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n    }\n\n    // bytes -> bytes\n    function abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_fromStack(start, length, pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n\n        copy_calldata_to_memory_with_cleanup(start, pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_calldata_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        mstore(add(headStart, 128), sub(tail, headStart))\n        tail := abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_fromStack(value4, value5,  tail)\n\n    }\n\n    function abi_decode_t_bytes32_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_bytes32_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_2e5045ff73280aa8e8acd8c82710f23812497f87f7f576e2220a2ddd0d45eade(memPtr) {\n\n        mstore(add(memPtr, 0), \"EIP712: Uninitialized\")\n\n    }\n\n    function abi_encode_t_stringliteral_2e5045ff73280aa8e8acd8c82710f23812497f87f7f576e2220a2ddd0d45eade_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_2e5045ff73280aa8e8acd8c82710f23812497f87f7f576e2220a2ddd0d45eade(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_2e5045ff73280aa8e8acd8c82710f23812497f87f7f576e2220a2ddd0d45eade__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_2e5045ff73280aa8e8acd8c82710f23812497f87f7f576e2220a2ddd0d45eade_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function cleanup_t_rational_1_by_1(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint64(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffff)\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_rational_1_by_1_to_t_uint64(value) -> converted {\n        converted := cleanup_t_uint64(identity(cleanup_t_rational_1_by_1(value)))\n    }\n\n    function abi_encode_t_rational_1_by_1_to_t_uint64_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_1_by_1_to_t_uint64(value))\n    }\n\n    function abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_rational_1_by_1_to_t_uint64_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 192)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value5,  add(headStart, 160))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_address_to_t_address_fromStack(value4,  add(headStart, 128))\n\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n}\n","id":24,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b506004361061018e5760003560e01c8063715018a6116100de57806395d89b4111610097578063d505accf11610071578063d505accf14610467578063d9d98ce414610483578063dd62ed3e146104b3578063f2fde38b146104e35761018e565b806395d89b41146103fd578063a9059cbb1461041b578063c4d66de81461044b5761018e565b8063715018a61461035b57806379cc6790146103655780637ecebe00146103815780638456cb59146103b157806384b0196e146103bb5780638da5cb5b146103df5761018e565b80633f4ba83a1161014b5780635c975abb116101255780635c975abb146102ad5780635cffe9de146102cb578063613255ab146102fb57806370a082311461032b5761018e565b80633f4ba83a1461026b57806340c10f191461027557806342966c68146102915761018e565b806306fdde0314610193578063095ea7b3146101b157806318160ddd146101e157806323b872dd146101ff578063313ce5671461022f5780633644e5151461024d575b600080fd5b61019b6104ff565b6040516101a891906124c9565b60405180910390f35b6101cb60048036038101906101c69190612589565b6105a0565b6040516101d891906125e4565b60405180910390f35b6101e96105c3565b6040516101f6919061260e565b60405180910390f35b61021960048036038101906102149190612629565b6105db565b60405161022691906125e4565b60405180910390f35b61023761060a565b6040516102449190612698565b60405180910390f35b610255610613565b60405161026291906126cc565b60405180910390f35b610273610622565b005b61028f600480360381019061028a9190612589565b610634565b005b6102ab60048036038101906102a691906126e7565b61064a565b005b6102b561065e565b6040516102c291906125e4565b60405180910390f35b6102e560048036038101906102e091906127b7565b610683565b6040516102f291906125e4565b60405180910390f35b6103156004803603810190610310919061283f565b610880565b604051610322919061260e565b60405180910390f35b6103456004803603810190610340919061283f565b6108f7565b604051610352919061260e565b60405180910390f35b61036361094e565b005b61037f600480360381019061037a9190612589565b610962565b005b61039b6004803603810190610396919061283f565b610982565b6040516103a8919061260e565b60405180910390f35b6103b9610994565b005b6103c36109a6565b6040516103d69796959493929190612974565b60405180910390f35b6103e7610ab8565b6040516103f491906129f8565b60405180910390f35b610405610af0565b60405161041291906124c9565b60405180910390f35b61043560048036038101906104309190612589565b610b91565b60405161044291906125e4565b60405180910390f35b6104656004803603810190610460919061283f565b610bb4565b005b610481600480360381019061047c9190612a6b565b610e0d565b005b61049d60048036038101906104989190612589565b610f55565b6040516104aa919061260e565b60405180910390f35b6104cd60048036038101906104c89190612b0d565b610fd9565b6040516104da919061260e565b60405180910390f35b6104fd60048036038101906104f8919061283f565b61106e565b005b6060600061050b6110f4565b905080600301805461051c90612b7c565b80601f016020809104026020016040519081016040528092919081815260200182805461054890612b7c565b80156105955780601f1061056a57610100808354040283529160200191610595565b820191906000526020600020905b81548152906001019060200180831161057857829003601f168201915b505050505091505090565b6000806105ab61111c565b90506105b8818585611124565b600191505092915050565b6000806105ce6110f4565b9050806002015491505090565b6000806105e661111c565b90506105f3858285611136565b6105fe8585856111ca565b60019150509392505050565b60006012905090565b600061061d6112be565b905090565b61062a6112cd565b610632611354565b565b61063c6112cd565b61064682826113c6565b5050565b61065b61065561111c565b82611448565b50565b6000806106696114ca565b90508060000160009054906101000a900460ff1691505090565b60008061068f86610880565b9050808511156106d657806040517ffd9a76090000000000000000000000000000000000000000000000000000000081526004016106cd919061260e565b60405180910390fd5b60006106e28787610f55565b90506106ee88876113c6565b7f439148f0bbc682ca079e46d6e2c2f0c1e3b820f1a291b069d8882abf8cf18dd98873ffffffffffffffffffffffffffffffffffffffff166323e30c8b61073361111c565b8a8a868b8b6040518763ffffffff1660e01b815260040161075996959493929190612bfa565b6020604051808303816000875af1158015610778573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061079c9190612c6b565b146107de57876040517f678c5b000000000000000000000000000000000000000000000000000000000081526004016107d591906129f8565b60405180910390fd5b60006107e86114f2565b90506108008930848a6107fb9190612cc7565b611136565b600082148061083b5750600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16145b1561085a576108558983896108509190612cc7565b611448565b610870565b6108648988611448565b61086f8982846111ca565b5b6001935050505095945050505050565b60003073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16146108bc5760006108f0565b6108c46105c3565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6108ef9190612cfb565b5b9050919050565b6000806109026110f4565b90508060000160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054915050919050565b6109566112cd565b61096060006114f7565b565b6109748261096e61111c565b83611136565b61097e8282611448565b5050565b600061098d826115ce565b9050919050565b61099c6112cd565b6109a4611625565b565b60006060806000806000606060006109bc611697565b90506000801b81600001541480156109da57506000801b8160010154145b610a19576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a1090612d7b565b60405180910390fd5b610a216116bf565b610a29611760565b46306000801b600067ffffffffffffffff811115610a4a57610a49612d9b565b5b604051908082528060200260200182016040528015610a785781602001602082028036833780820191505090505b507f0f0000000000000000000000000000000000000000000000000000000000000095949392919097509750975097509750975097505090919293949596565b600080610ac3611801565b90508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1691505090565b60606000610afc6110f4565b9050806004018054610b0d90612b7c565b80601f0160208091040260200160405190810160405280929190818152602001828054610b3990612b7c565b8015610b865780601f10610b5b57610100808354040283529160200191610b86565b820191906000526020600020905b815481529060010190602001808311610b6957829003601f168201915b505050505091505090565b600080610b9c61111c565b9050610ba98185856111ca565b600191505092915050565b6000610bbe611829565b905060008160000160089054906101000a900460ff1615905060008260000160009054906101000a900467ffffffffffffffff1690506000808267ffffffffffffffff16148015610c0c5750825b9050600060018367ffffffffffffffff16148015610c41575060003073ffffffffffffffffffffffffffffffffffffffff163b145b905081158015610c4f575080155b15610c86576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018560000160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055508315610cd65760018560000160086101000a81548160ff0219169083151502179055505b610d4a6040518060400160405280600681526020017f4d6f436f4b6f00000000000000000000000000000000000000000000000000008152506040518060400160405280600381526020017f4d434b0000000000000000000000000000000000000000000000000000000000815250611851565b610d52611867565b610d5a611871565b610d6386611883565b610da16040518060400160405280600681526020017f4d6f436f4b6f0000000000000000000000000000000000000000000000000000815250611897565b610da96118e1565b8315610e055760008560000160086101000a81548160ff0219169083151502179055507fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d26001604051610dfc9190612e23565b60405180910390a15b505050505050565b83421115610e5257836040517f62791302000000000000000000000000000000000000000000000000000000008152600401610e49919061260e565b60405180910390fd5b60007f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9888888610e818c6118eb565b89604051602001610e9796959493929190612e3e565b6040516020818303038152906040528051906020012090506000610eba82611950565b90506000610eca8287878761196a565b90508973ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610f3e57808a6040517f4b800e46000000000000000000000000000000000000000000000000000000008152600401610f35929190612e9f565b60405180910390fd5b610f498a8a8a611124565b50505050505050505050565b60003073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614610fc757826040517fb5a7db92000000000000000000000000000000000000000000000000000000008152600401610fbe91906129f8565b60405180910390fd5b610fd1838361199a565b905092915050565b600080610fe46110f4565b90508060010160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205491505092915050565b6110766112cd565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036110e85760006040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016110df91906129f8565b60405180910390fd5b6110f1816114f7565b50565b60007f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace00905090565b600033905090565b61113183838360016119a2565b505050565b60006111428484610fd9565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146111c457818110156111b4578281836040517ffb8f41b20000000000000000000000000000000000000000000000000000000081526004016111ab93929190612ec8565b60405180910390fd5b6111c3848484840360006119a2565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361123c5760006040517f96c6fd1e00000000000000000000000000000000000000000000000000000000815260040161123391906129f8565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036112ae5760006040517fec442f050000000000000000000000000000000000000000000000000000000081526004016112a591906129f8565b60405180910390fd5b6112b9838383611b88565b505050565b60006112c8611b98565b905090565b6112d561111c565b73ffffffffffffffffffffffffffffffffffffffff166112f3610ab8565b73ffffffffffffffffffffffffffffffffffffffff16146113525761131661111c565b6040517f118cdaa700000000000000000000000000000000000000000000000000000000815260040161134991906129f8565b60405180910390fd5b565b61135c611bfc565b60006113666114ca565b905060008160000160006101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa6113ae61111c565b6040516113bb91906129f8565b60405180910390a150565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036114385760006040517fec442f0500000000000000000000000000000000000000000000000000000000815260040161142f91906129f8565b60405180910390fd5b61144460008383611b88565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036114ba5760006040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016114b191906129f8565b60405180910390fd5b6114c682600083611b88565b5050565b60007fcd5ed15c6e187e77e9aee88184c21f4f2182ab5827cb3b7e07fbedcd63f03300905090565b600090565b6000611501611801565b905060008160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050828260000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3505050565b6000806115d9611c3c565b90508060000160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054915050919050565b61162d611c64565b60006116376114ca565b905060018160000160006101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25861167f61111c565b60405161168c91906129f8565b60405180910390a150565b60007fa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d100905090565b606060006116cb611697565b90508060020180546116dc90612b7c565b80601f016020809104026020016040519081016040528092919081815260200182805461170890612b7c565b80156117555780601f1061172a57610100808354040283529160200191611755565b820191906000526020600020905b81548152906001019060200180831161173857829003601f168201915b505050505091505090565b6060600061176c611697565b905080600301805461177d90612b7c565b80601f01602080910402602001604051908101604052809291908181526020018280546117a990612b7c565b80156117f65780601f106117cb576101008083540402835291602001916117f6565b820191906000526020600020905b8154815290600101906020018083116117d957829003601f168201915b505050505091505090565b60007f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300905090565b60007ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00905090565b611859611ca5565b6118638282611ce5565b5050565b61186f611ca5565b565b611879611ca5565b611881611d22565b565b61188b611ca5565b61189481611d56565b50565b61189f611ca5565b6118de816040518060400160405280600181526020017f3100000000000000000000000000000000000000000000000000000000000000815250611ddc565b50565b6118e9611ca5565b565b6000806118f6611c3c565b90508060000160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600081548092919060010191905055915050919050565b600061196361195d6112be565b83611e31565b9050919050565b60008060008061197c88888888611e72565b92509250925061198c8282611f66565b829350505050949350505050565b600092915050565b60006119ac6110f4565b9050600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1603611a205760006040517fe602df05000000000000000000000000000000000000000000000000000000008152600401611a1791906129f8565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603611a925760006040517f94280d62000000000000000000000000000000000000000000000000000000008152600401611a8991906129f8565b60405180910390fd5b828160010160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508115611b81578373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92585604051611b78919061260e565b60405180910390a35b5050505050565b611b938383836120ca565b505050565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f611bc36120e2565b611bcb61215e565b4630604051602001611be1959493929190612eff565b60405160208183030381529060405280519060200120905090565b611c0461065e565b611c3a576040517f8dfc202b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b60007f5ab42ced628888259c08ac98db1eb0cf702fc1501344311d8b100cd1bfe4bb00905090565b611c6c61065e565b15611ca3576040517fd93c066500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b611cad6121da565b611ce3576040517fd7e6bcf800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b611ced611ca5565b6000611cf76110f4565b905082816003019081611d0a91906130f4565b5081816004019081611d1c91906130f4565b50505050565b611d2a611ca5565b6000611d346114ca565b905060008160000160006101000a81548160ff02191690831515021790555050565b611d5e611ca5565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611dd05760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401611dc791906129f8565b60405180910390fd5b611dd9816114f7565b50565b611de4611ca5565b6000611dee611697565b905082816002019081611e0191906130f4565b5081816003019081611e1391906130f4565b506000801b81600001819055506000801b8160010181905550505050565b60006040517f190100000000000000000000000000000000000000000000000000000000000081528360028201528260228201526042812091505092915050565b60008060007f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08460001c1115611eb2576000600385925092509250611f5c565b600060018888888860405160008152602001604052604051611ed794939291906131c6565b6020604051602081039080840390855afa158015611ef9573d6000803e3d6000fd5b505050602060405103519050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611f4d57600060016000801b93509350935050611f5c565b8060008060001b935093509350505b9450945094915050565b60006003811115611f7a57611f7961320b565b5b826003811115611f8d57611f8c61320b565b5b03156120c65760016003811115611fa757611fa661320b565b5b826003811115611fba57611fb961320b565b5b03611ff1576040517ff645eedf00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600260038111156120055761200461320b565b5b8260038111156120185761201761320b565b5b0361205d578060001c6040517ffce698f7000000000000000000000000000000000000000000000000000000008152600401612054919061260e565b60405180910390fd5b6003808111156120705761206f61320b565b5b8260038111156120835761208261320b565b5b036120c557806040517fd78bce0c0000000000000000000000000000000000000000000000000000000081526004016120bc91906126cc565b60405180910390fd5b5b5050565b6120d2611c64565b6120dd8383836121fa565b505050565b6000806120ed611697565b905060006120f96116bf565b90506000815111156121165780805190602001209250505061215b565b6000826000015490506000801b81146121345780935050505061215b565b7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47093505050505b90565b600080612169611697565b90506000612175611760565b9050600081511115612192578080519060200120925050506121d7565b6000826001015490506000801b81146121b0578093505050506121d7565b7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47093505050505b90565b60006121e4611829565b60000160089054906101000a900460ff16905090565b60006122046110f4565b9050600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff160361225a578181600201600082825461224e9190612cc7565b92505081905550612333565b60008160000160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050828110156122e9578481846040517fe450d38c0000000000000000000000000000000000000000000000000000000081526004016122e093929190612ec8565b60405180910390fd5b8281038260000160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361237e578181600201600082825403925050819055506123ce565b818160000160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161242b919061260e565b60405180910390a350505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015612473578082015181840152602081019050612458565b60008484015250505050565b6000601f19601f8301169050919050565b600061249b82612439565b6124a58185612444565b93506124b5818560208601612455565b6124be8161247f565b840191505092915050565b600060208201905081810360008301526124e38184612490565b905092915050565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000612520826124f5565b9050919050565b61253081612515565b811461253b57600080fd5b50565b60008135905061254d81612527565b92915050565b6000819050919050565b61256681612553565b811461257157600080fd5b50565b6000813590506125838161255d565b92915050565b600080604083850312156125a05761259f6124eb565b5b60006125ae8582860161253e565b92505060206125bf85828601612574565b9150509250929050565b60008115159050919050565b6125de816125c9565b82525050565b60006020820190506125f960008301846125d5565b92915050565b61260881612553565b82525050565b600060208201905061262360008301846125ff565b92915050565b600080600060608486031215612642576126416124eb565b5b60006126508682870161253e565b93505060206126618682870161253e565b925050604061267286828701612574565b9150509250925092565b600060ff82169050919050565b6126928161267c565b82525050565b60006020820190506126ad6000830184612689565b92915050565b6000819050919050565b6126c6816126b3565b82525050565b60006020820190506126e160008301846126bd565b92915050565b6000602082840312156126fd576126fc6124eb565b5b600061270b84828501612574565b91505092915050565b600061271f82612515565b9050919050565b61272f81612714565b811461273a57600080fd5b50565b60008135905061274c81612726565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f84011261277757612776612752565b5b8235905067ffffffffffffffff81111561279457612793612757565b5b6020830191508360018202830111156127b0576127af61275c565b5b9250929050565b6000806000806000608086880312156127d3576127d26124eb565b5b60006127e18882890161273d565b95505060206127f28882890161253e565b945050604061280388828901612574565b935050606086013567ffffffffffffffff811115612824576128236124f0565b5b61283088828901612761565b92509250509295509295909350565b600060208284031215612855576128546124eb565b5b60006128638482850161253e565b91505092915050565b60007fff0000000000000000000000000000000000000000000000000000000000000082169050919050565b6128a18161286c565b82525050565b6128b081612515565b82525050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6128eb81612553565b82525050565b60006128fd83836128e2565b60208301905092915050565b6000602082019050919050565b6000612921826128b6565b61292b81856128c1565b9350612936836128d2565b8060005b8381101561296757815161294e88826128f1565b975061295983612909565b92505060018101905061293a565b5085935050505092915050565b600060e082019050612989600083018a612898565b818103602083015261299b8189612490565b905081810360408301526129af8188612490565b90506129be60608301876125ff565b6129cb60808301866128a7565b6129d860a08301856126bd565b81810360c08301526129ea8184612916565b905098975050505050505050565b6000602082019050612a0d60008301846128a7565b92915050565b612a1c8161267c565b8114612a2757600080fd5b50565b600081359050612a3981612a13565b92915050565b612a48816126b3565b8114612a5357600080fd5b50565b600081359050612a6581612a3f565b92915050565b600080600080600080600060e0888a031215612a8a57612a896124eb565b5b6000612a988a828b0161253e565b9750506020612aa98a828b0161253e565b9650506040612aba8a828b01612574565b9550506060612acb8a828b01612574565b9450506080612adc8a828b01612a2a565b93505060a0612aed8a828b01612a56565b92505060c0612afe8a828b01612a56565b91505092959891949750929550565b60008060408385031215612b2457612b236124eb565b5b6000612b328582860161253e565b9250506020612b438582860161253e565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680612b9457607f821691505b602082108103612ba757612ba6612b4d565b5b50919050565b600082825260208201905092915050565b82818337600083830152505050565b6000612bd98385612bad565b9350612be6838584612bbe565b612bef8361247f565b840190509392505050565b600060a082019050612c0f60008301896128a7565b612c1c60208301886128a7565b612c2960408301876125ff565b612c3660608301866125ff565b8181036080830152612c49818486612bcd565b9050979650505050505050565b600081519050612c6581612a3f565b92915050565b600060208284031215612c8157612c806124eb565b5b6000612c8f84828501612c56565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000612cd282612553565b9150612cdd83612553565b9250828201905080821115612cf557612cf4612c98565b5b92915050565b6000612d0682612553565b9150612d1183612553565b9250828203905081811115612d2957612d28612c98565b5b92915050565b7f4549503731323a20556e696e697469616c697a65640000000000000000000000600082015250565b6000612d65601583612444565b9150612d7082612d2f565b602082019050919050565b60006020820190508181036000830152612d9481612d58565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000819050919050565b600067ffffffffffffffff82169050919050565b6000819050919050565b6000612e0d612e08612e0384612dca565b612de8565b612dd4565b9050919050565b612e1d81612df2565b82525050565b6000602082019050612e386000830184612e14565b92915050565b600060c082019050612e5360008301896126bd565b612e6060208301886128a7565b612e6d60408301876128a7565b612e7a60608301866125ff565b612e8760808301856125ff565b612e9460a08301846125ff565b979650505050505050565b6000604082019050612eb460008301856128a7565b612ec160208301846128a7565b9392505050565b6000606082019050612edd60008301866128a7565b612eea60208301856125ff565b612ef760408301846125ff565b949350505050565b600060a082019050612f1460008301886126bd565b612f2160208301876126bd565b612f2e60408301866126bd565b612f3b60608301856125ff565b612f4860808301846128a7565b9695505050505050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302612fb47fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82612f77565b612fbe8683612f77565b95508019841693508086168417925050509392505050565b6000612ff1612fec612fe784612553565b612de8565b612553565b9050919050565b6000819050919050565b61300b83612fd6565b61301f61301782612ff8565b848454612f84565b825550505050565b600090565b613034613027565b61303f818484613002565b505050565b5b818110156130635761305860008261302c565b600181019050613045565b5050565b601f8211156130a85761307981612f52565b61308284612f67565b81016020851015613091578190505b6130a561309d85612f67565b830182613044565b50505b505050565b600082821c905092915050565b60006130cb600019846008026130ad565b1980831691505092915050565b60006130e483836130ba565b9150826002028217905092915050565b6130fd82612439565b67ffffffffffffffff81111561311657613115612d9b565b5b6131208254612b7c565b61312b828285613067565b600060209050601f83116001811461315e576000841561314c578287015190505b61315685826130d8565b8655506131be565b601f19841661316c86612f52565b60005b828110156131945784890151825560018201915060208501945060208101905061316f565b868310156131b157848901516131ad601f8916826130ba565b8355505b6001600288020188555050505b505050505050565b60006080820190506131db60008301876126bd565b6131e86020830186612689565b6131f560408301856126bd565b61320260608301846126bd565b95945050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fdfea2646970667358221220aff5e5a751a571612f6fac27ccc74e17fe33bf1934538a501d2b1a733fc5c8cf64736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x18E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xDE JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xD505ACCF GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x467 JUMPI DUP1 PUSH4 0xD9D98CE4 EQ PUSH2 0x483 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x4B3 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x4E3 JUMPI PUSH2 0x18E JUMP JUMPDEST DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x3FD JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x41B JUMPI DUP1 PUSH4 0xC4D66DE8 EQ PUSH2 0x44B JUMPI PUSH2 0x18E JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x35B JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x365 JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x381 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x3B1 JUMPI DUP1 PUSH4 0x84B0196E EQ PUSH2 0x3BB JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x3DF JUMPI PUSH2 0x18E JUMP JUMPDEST DUP1 PUSH4 0x3F4BA83A GT PUSH2 0x14B JUMPI DUP1 PUSH4 0x5C975ABB GT PUSH2 0x125 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x2AD JUMPI DUP1 PUSH4 0x5CFFE9DE EQ PUSH2 0x2CB JUMPI DUP1 PUSH4 0x613255AB EQ PUSH2 0x2FB JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x32B JUMPI PUSH2 0x18E JUMP JUMPDEST DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x26B JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x275 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x291 JUMPI PUSH2 0x18E JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x193 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1B1 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1E1 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1FF JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x22F JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x24D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x19B PUSH2 0x4FF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A8 SWAP2 SWAP1 PUSH2 0x24C9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1CB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C6 SWAP2 SWAP1 PUSH2 0x2589 JUMP JUMPDEST PUSH2 0x5A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D8 SWAP2 SWAP1 PUSH2 0x25E4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E9 PUSH2 0x5C3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F6 SWAP2 SWAP1 PUSH2 0x260E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x219 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x214 SWAP2 SWAP1 PUSH2 0x2629 JUMP JUMPDEST PUSH2 0x5DB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x226 SWAP2 SWAP1 PUSH2 0x25E4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x237 PUSH2 0x60A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x244 SWAP2 SWAP1 PUSH2 0x2698 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x255 PUSH2 0x613 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x262 SWAP2 SWAP1 PUSH2 0x26CC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x273 PUSH2 0x622 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x28F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x28A SWAP2 SWAP1 PUSH2 0x2589 JUMP JUMPDEST PUSH2 0x634 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2AB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A6 SWAP2 SWAP1 PUSH2 0x26E7 JUMP JUMPDEST PUSH2 0x64A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2B5 PUSH2 0x65E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C2 SWAP2 SWAP1 PUSH2 0x25E4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2E5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2E0 SWAP2 SWAP1 PUSH2 0x27B7 JUMP JUMPDEST PUSH2 0x683 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2F2 SWAP2 SWAP1 PUSH2 0x25E4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x315 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x310 SWAP2 SWAP1 PUSH2 0x283F JUMP JUMPDEST PUSH2 0x880 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x322 SWAP2 SWAP1 PUSH2 0x260E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x345 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x340 SWAP2 SWAP1 PUSH2 0x283F JUMP JUMPDEST PUSH2 0x8F7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x352 SWAP2 SWAP1 PUSH2 0x260E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x363 PUSH2 0x94E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x37F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x37A SWAP2 SWAP1 PUSH2 0x2589 JUMP JUMPDEST PUSH2 0x962 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x39B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x396 SWAP2 SWAP1 PUSH2 0x283F JUMP JUMPDEST PUSH2 0x982 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3A8 SWAP2 SWAP1 PUSH2 0x260E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3B9 PUSH2 0x994 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3C3 PUSH2 0x9A6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3D6 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2974 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3E7 PUSH2 0xAB8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3F4 SWAP2 SWAP1 PUSH2 0x29F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x405 PUSH2 0xAF0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x412 SWAP2 SWAP1 PUSH2 0x24C9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x435 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x430 SWAP2 SWAP1 PUSH2 0x2589 JUMP JUMPDEST PUSH2 0xB91 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x442 SWAP2 SWAP1 PUSH2 0x25E4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x465 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x460 SWAP2 SWAP1 PUSH2 0x283F JUMP JUMPDEST PUSH2 0xBB4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x481 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x47C SWAP2 SWAP1 PUSH2 0x2A6B JUMP JUMPDEST PUSH2 0xE0D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x49D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x498 SWAP2 SWAP1 PUSH2 0x2589 JUMP JUMPDEST PUSH2 0xF55 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4AA SWAP2 SWAP1 PUSH2 0x260E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4CD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4C8 SWAP2 SWAP1 PUSH2 0x2B0D JUMP JUMPDEST PUSH2 0xFD9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4DA SWAP2 SWAP1 PUSH2 0x260E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4FD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4F8 SWAP2 SWAP1 PUSH2 0x283F JUMP JUMPDEST PUSH2 0x106E JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x50B PUSH2 0x10F4 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x3 ADD DUP1 SLOAD PUSH2 0x51C SWAP1 PUSH2 0x2B7C JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x548 SWAP1 PUSH2 0x2B7C JUMP JUMPDEST DUP1 ISZERO PUSH2 0x595 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x56A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x595 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x578 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x5AB PUSH2 0x111C JUMP JUMPDEST SWAP1 POP PUSH2 0x5B8 DUP2 DUP6 DUP6 PUSH2 0x1124 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x5CE PUSH2 0x10F4 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x2 ADD SLOAD SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x5E6 PUSH2 0x111C JUMP JUMPDEST SWAP1 POP PUSH2 0x5F3 DUP6 DUP3 DUP6 PUSH2 0x1136 JUMP JUMPDEST PUSH2 0x5FE DUP6 DUP6 DUP6 PUSH2 0x11CA JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x61D PUSH2 0x12BE JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x62A PUSH2 0x12CD JUMP JUMPDEST PUSH2 0x632 PUSH2 0x1354 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x63C PUSH2 0x12CD JUMP JUMPDEST PUSH2 0x646 DUP3 DUP3 PUSH2 0x13C6 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x65B PUSH2 0x655 PUSH2 0x111C JUMP JUMPDEST DUP3 PUSH2 0x1448 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x669 PUSH2 0x14CA JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x68F DUP7 PUSH2 0x880 JUMP JUMPDEST SWAP1 POP DUP1 DUP6 GT ISZERO PUSH2 0x6D6 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xFD9A760900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6CD SWAP2 SWAP1 PUSH2 0x260E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x6E2 DUP8 DUP8 PUSH2 0xF55 JUMP JUMPDEST SWAP1 POP PUSH2 0x6EE DUP9 DUP8 PUSH2 0x13C6 JUMP JUMPDEST PUSH32 0x439148F0BBC682CA079E46D6E2C2F0C1E3B820F1A291B069D8882ABF8CF18DD9 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23E30C8B PUSH2 0x733 PUSH2 0x111C JUMP JUMPDEST DUP11 DUP11 DUP7 DUP12 DUP12 PUSH1 0x40 MLOAD DUP8 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x759 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2BFA JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x778 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x79C SWAP2 SWAP1 PUSH2 0x2C6B JUMP JUMPDEST EQ PUSH2 0x7DE JUMPI DUP8 PUSH1 0x40 MLOAD PUSH32 0x678C5B0000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7D5 SWAP2 SWAP1 PUSH2 0x29F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x7E8 PUSH2 0x14F2 JUMP JUMPDEST SWAP1 POP PUSH2 0x800 DUP10 ADDRESS DUP5 DUP11 PUSH2 0x7FB SWAP2 SWAP1 PUSH2 0x2CC7 JUMP JUMPDEST PUSH2 0x1136 JUMP JUMPDEST PUSH1 0x0 DUP3 EQ DUP1 PUSH2 0x83B JUMPI POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST ISZERO PUSH2 0x85A JUMPI PUSH2 0x855 DUP10 DUP4 DUP10 PUSH2 0x850 SWAP2 SWAP1 PUSH2 0x2CC7 JUMP JUMPDEST PUSH2 0x1448 JUMP JUMPDEST PUSH2 0x870 JUMP JUMPDEST PUSH2 0x864 DUP10 DUP9 PUSH2 0x1448 JUMP JUMPDEST PUSH2 0x86F DUP10 DUP3 DUP5 PUSH2 0x11CA JUMP JUMPDEST JUMPDEST PUSH1 0x1 SWAP4 POP POP POP POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x8BC JUMPI PUSH1 0x0 PUSH2 0x8F0 JUMP JUMPDEST PUSH2 0x8C4 PUSH2 0x5C3 JUMP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x8EF SWAP2 SWAP1 PUSH2 0x2CFB JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x902 PUSH2 0x10F4 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x956 PUSH2 0x12CD JUMP JUMPDEST PUSH2 0x960 PUSH1 0x0 PUSH2 0x14F7 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x974 DUP3 PUSH2 0x96E PUSH2 0x111C JUMP JUMPDEST DUP4 PUSH2 0x1136 JUMP JUMPDEST PUSH2 0x97E DUP3 DUP3 PUSH2 0x1448 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x98D DUP3 PUSH2 0x15CE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x99C PUSH2 0x12CD JUMP JUMPDEST PUSH2 0x9A4 PUSH2 0x1625 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 PUSH1 0x0 PUSH2 0x9BC PUSH2 0x1697 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 SHL DUP2 PUSH1 0x0 ADD SLOAD EQ DUP1 ISZERO PUSH2 0x9DA JUMPI POP PUSH1 0x0 DUP1 SHL DUP2 PUSH1 0x1 ADD SLOAD EQ JUMPDEST PUSH2 0xA19 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA10 SWAP1 PUSH2 0x2D7B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA21 PUSH2 0x16BF JUMP JUMPDEST PUSH2 0xA29 PUSH2 0x1760 JUMP JUMPDEST CHAINID ADDRESS PUSH1 0x0 DUP1 SHL PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xA4A JUMPI PUSH2 0xA49 PUSH2 0x2D9B JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xA78 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP PUSH32 0xF00000000000000000000000000000000000000000000000000000000000000 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 SWAP8 POP SWAP8 POP SWAP8 POP SWAP8 POP SWAP8 POP SWAP8 POP SWAP8 POP POP SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 SWAP7 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xAC3 PUSH2 0x1801 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0xAFC PUSH2 0x10F4 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x4 ADD DUP1 SLOAD PUSH2 0xB0D SWAP1 PUSH2 0x2B7C JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xB39 SWAP1 PUSH2 0x2B7C JUMP JUMPDEST DUP1 ISZERO PUSH2 0xB86 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xB5B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xB86 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xB69 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xB9C PUSH2 0x111C JUMP JUMPDEST SWAP1 POP PUSH2 0xBA9 DUP2 DUP6 DUP6 PUSH2 0x11CA JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBBE PUSH2 0x1829 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 DUP1 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0xC0C JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0xC41 JUMPI POP PUSH1 0x0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0xC4F JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0xC86 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP6 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 ISZERO PUSH2 0xCD6 JUMPI PUSH1 0x1 DUP6 PUSH1 0x0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST PUSH2 0xD4A PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x6 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4D6F436F4B6F0000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4D434B0000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0x1851 JUMP JUMPDEST PUSH2 0xD52 PUSH2 0x1867 JUMP JUMPDEST PUSH2 0xD5A PUSH2 0x1871 JUMP JUMPDEST PUSH2 0xD63 DUP7 PUSH2 0x1883 JUMP JUMPDEST PUSH2 0xDA1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x6 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4D6F436F4B6F0000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0x1897 JUMP JUMPDEST PUSH2 0xDA9 PUSH2 0x18E1 JUMP JUMPDEST DUP4 ISZERO PUSH2 0xE05 JUMPI PUSH1 0x0 DUP6 PUSH1 0x0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0xDFC SWAP2 SWAP1 PUSH2 0x2E23 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST DUP4 TIMESTAMP GT ISZERO PUSH2 0xE52 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x6279130200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE49 SWAP2 SWAP1 PUSH2 0x260E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP9 DUP9 DUP9 PUSH2 0xE81 DUP13 PUSH2 0x18EB JUMP JUMPDEST DUP10 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xE97 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2E3E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH2 0xEBA DUP3 PUSH2 0x1950 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xECA DUP3 DUP8 DUP8 DUP8 PUSH2 0x196A JUMP JUMPDEST SWAP1 POP DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xF3E JUMPI DUP1 DUP11 PUSH1 0x40 MLOAD PUSH32 0x4B800E4600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF35 SWAP3 SWAP2 SWAP1 PUSH2 0x2E9F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xF49 DUP11 DUP11 DUP11 PUSH2 0x1124 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xFC7 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0xB5A7DB9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFBE SWAP2 SWAP1 PUSH2 0x29F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xFD1 DUP4 DUP4 PUSH2 0x199A JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xFE4 PUSH2 0x10F4 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 ADD PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1076 PUSH2 0x12CD JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x10E8 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10DF SWAP2 SWAP1 PUSH2 0x29F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x10F1 DUP2 PUSH2 0x14F7 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE00 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1131 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x19A2 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1142 DUP5 DUP5 PUSH2 0xFD9 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x11C4 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x11B4 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11AB SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2EC8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x11C3 DUP5 DUP5 DUP5 DUP5 SUB PUSH1 0x0 PUSH2 0x19A2 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x123C JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1233 SWAP2 SWAP1 PUSH2 0x29F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x12AE JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12A5 SWAP2 SWAP1 PUSH2 0x29F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x12B9 DUP4 DUP4 DUP4 PUSH2 0x1B88 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12C8 PUSH2 0x1B98 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x12D5 PUSH2 0x111C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x12F3 PUSH2 0xAB8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1352 JUMPI PUSH2 0x1316 PUSH2 0x111C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1349 SWAP2 SWAP1 PUSH2 0x29F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x135C PUSH2 0x1BFC JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1366 PUSH2 0x14CA JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA PUSH2 0x13AE PUSH2 0x111C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13BB SWAP2 SWAP1 PUSH2 0x29F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1438 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x142F SWAP2 SWAP1 PUSH2 0x29F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1444 PUSH1 0x0 DUP4 DUP4 PUSH2 0x1B88 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x14BA JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14B1 SWAP2 SWAP1 PUSH2 0x29F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x14C6 DUP3 PUSH1 0x0 DUP4 PUSH2 0x1B88 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xCD5ED15C6E187E77E9AEE88184C21F4F2182AB5827CB3B7E07FBEDCD63F03300 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1501 PUSH2 0x1801 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP3 DUP3 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x15D9 PUSH2 0x1C3C JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x162D PUSH2 0x1C64 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1637 PUSH2 0x14CA JUMP JUMPDEST SWAP1 POP PUSH1 0x1 DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x167F PUSH2 0x111C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x168C SWAP2 SWAP1 PUSH2 0x29F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xA16A46D94261C7517CC8FF89F61C0CE93598E3C849801011DEE649A6A557D100 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x16CB PUSH2 0x1697 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x2 ADD DUP1 SLOAD PUSH2 0x16DC SWAP1 PUSH2 0x2B7C JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1708 SWAP1 PUSH2 0x2B7C JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1755 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x172A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1755 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1738 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x176C PUSH2 0x1697 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x3 ADD DUP1 SLOAD PUSH2 0x177D SWAP1 PUSH2 0x2B7C JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x17A9 SWAP1 PUSH2 0x2B7C JUMP JUMPDEST DUP1 ISZERO PUSH2 0x17F6 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x17CB JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x17F6 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x17D9 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1859 PUSH2 0x1CA5 JUMP JUMPDEST PUSH2 0x1863 DUP3 DUP3 PUSH2 0x1CE5 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x186F PUSH2 0x1CA5 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x1879 PUSH2 0x1CA5 JUMP JUMPDEST PUSH2 0x1881 PUSH2 0x1D22 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x188B PUSH2 0x1CA5 JUMP JUMPDEST PUSH2 0x1894 DUP2 PUSH2 0x1D56 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x189F PUSH2 0x1CA5 JUMP JUMPDEST PUSH2 0x18DE DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3100000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0x1DDC JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x18E9 PUSH2 0x1CA5 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x18F6 PUSH2 0x1C3C JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH1 0x1 ADD SWAP2 SWAP1 POP SSTORE SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1963 PUSH2 0x195D PUSH2 0x12BE JUMP JUMPDEST DUP4 PUSH2 0x1E31 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x197C DUP9 DUP9 DUP9 DUP9 PUSH2 0x1E72 JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x198C DUP3 DUP3 PUSH2 0x1F66 JUMP JUMPDEST DUP3 SWAP4 POP POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19AC PUSH2 0x10F4 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1A20 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A17 SWAP2 SWAP1 PUSH2 0x29F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1A92 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A89 SWAP2 SWAP1 PUSH2 0x29F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 DUP2 PUSH1 0x1 ADD PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 ISZERO PUSH2 0x1B81 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP6 PUSH1 0x40 MLOAD PUSH2 0x1B78 SWAP2 SWAP1 PUSH2 0x260E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1B93 DUP4 DUP4 DUP4 PUSH2 0x20CA JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH2 0x1BC3 PUSH2 0x20E2 JUMP JUMPDEST PUSH2 0x1BCB PUSH2 0x215E JUMP JUMPDEST CHAINID ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1BE1 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2EFF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1C04 PUSH2 0x65E JUMP JUMPDEST PUSH2 0x1C3A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8DFC202B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH32 0x5AB42CED628888259C08AC98DB1EB0CF702FC1501344311D8B100CD1BFE4BB00 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1C6C PUSH2 0x65E JUMP JUMPDEST ISZERO PUSH2 0x1CA3 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD93C066500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x1CAD PUSH2 0x21DA JUMP JUMPDEST PUSH2 0x1CE3 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD7E6BCF800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x1CED PUSH2 0x1CA5 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CF7 PUSH2 0x10F4 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 PUSH1 0x3 ADD SWAP1 DUP2 PUSH2 0x1D0A SWAP2 SWAP1 PUSH2 0x30F4 JUMP JUMPDEST POP DUP2 DUP2 PUSH1 0x4 ADD SWAP1 DUP2 PUSH2 0x1D1C SWAP2 SWAP1 PUSH2 0x30F4 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x1D2A PUSH2 0x1CA5 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D34 PUSH2 0x14CA JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x1D5E PUSH2 0x1CA5 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1DD0 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1DC7 SWAP2 SWAP1 PUSH2 0x29F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1DD9 DUP2 PUSH2 0x14F7 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x1DE4 PUSH2 0x1CA5 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DEE PUSH2 0x1697 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 PUSH1 0x2 ADD SWAP1 DUP2 PUSH2 0x1E01 SWAP2 SWAP1 PUSH2 0x30F4 JUMP JUMPDEST POP DUP2 DUP2 PUSH1 0x3 ADD SWAP1 DUP2 PUSH2 0x1E13 SWAP2 SWAP1 PUSH2 0x30F4 JUMP JUMPDEST POP PUSH1 0x0 DUP1 SHL DUP2 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP1 SHL DUP2 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1901000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE DUP4 PUSH1 0x2 DUP3 ADD MSTORE DUP3 PUSH1 0x22 DUP3 ADD MSTORE PUSH1 0x42 DUP2 KECCAK256 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP5 PUSH1 0x0 SHR GT ISZERO PUSH2 0x1EB2 JUMPI PUSH1 0x0 PUSH1 0x3 DUP6 SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x1F5C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP9 DUP9 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x1ED7 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x31C6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1EF9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1F4D JUMPI PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP1 SHL SWAP4 POP SWAP4 POP SWAP4 POP POP PUSH2 0x1F5C JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 SHL SWAP4 POP SWAP4 POP SWAP4 POP POP JUMPDEST SWAP5 POP SWAP5 POP SWAP5 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1F7A JUMPI PUSH2 0x1F79 PUSH2 0x320B JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1F8D JUMPI PUSH2 0x1F8C PUSH2 0x320B JUMP JUMPDEST JUMPDEST SUB ISZERO PUSH2 0x20C6 JUMPI PUSH1 0x1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1FA7 JUMPI PUSH2 0x1FA6 PUSH2 0x320B JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1FBA JUMPI PUSH2 0x1FB9 PUSH2 0x320B JUMP JUMPDEST JUMPDEST SUB PUSH2 0x1FF1 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF645EEDF00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x2005 JUMPI PUSH2 0x2004 PUSH2 0x320B JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x2018 JUMPI PUSH2 0x2017 PUSH2 0x320B JUMP JUMPDEST JUMPDEST SUB PUSH2 0x205D JUMPI DUP1 PUSH1 0x0 SHR PUSH1 0x40 MLOAD PUSH32 0xFCE698F700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2054 SWAP2 SWAP1 PUSH2 0x260E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 DUP1 DUP2 GT ISZERO PUSH2 0x2070 JUMPI PUSH2 0x206F PUSH2 0x320B JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x2083 JUMPI PUSH2 0x2082 PUSH2 0x320B JUMP JUMPDEST JUMPDEST SUB PUSH2 0x20C5 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xD78BCE0C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x20BC SWAP2 SWAP1 PUSH2 0x26CC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x20D2 PUSH2 0x1C64 JUMP JUMPDEST PUSH2 0x20DD DUP4 DUP4 DUP4 PUSH2 0x21FA JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x20ED PUSH2 0x1697 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x20F9 PUSH2 0x16BF JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x2116 JUMPI DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP3 POP POP POP PUSH2 0x215B JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x0 ADD SLOAD SWAP1 POP PUSH1 0x0 DUP1 SHL DUP2 EQ PUSH2 0x2134 JUMPI DUP1 SWAP4 POP POP POP POP PUSH2 0x215B JUMP JUMPDEST PUSH32 0xC5D2460186F7233C927E7DB2DCC703C0E500B653CA82273B7BFAD8045D85A470 SWAP4 POP POP POP POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2169 PUSH2 0x1697 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2175 PUSH2 0x1760 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x2192 JUMPI DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP3 POP POP POP PUSH2 0x21D7 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1 ADD SLOAD SWAP1 POP PUSH1 0x0 DUP1 SHL DUP2 EQ PUSH2 0x21B0 JUMPI DUP1 SWAP4 POP POP POP POP PUSH2 0x21D7 JUMP JUMPDEST PUSH32 0xC5D2460186F7233C927E7DB2DCC703C0E500B653CA82273B7BFAD8045D85A470 SWAP4 POP POP POP POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x21E4 PUSH2 0x1829 JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2204 PUSH2 0x10F4 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x225A JUMPI DUP2 DUP2 PUSH1 0x2 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x224E SWAP2 SWAP1 PUSH2 0x2CC7 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x2333 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP3 DUP2 LT ISZERO PUSH2 0x22E9 JUMPI DUP5 DUP2 DUP5 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x22E0 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2EC8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 DUP2 SUB DUP3 PUSH1 0x0 ADD PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x237E JUMPI DUP2 DUP2 PUSH1 0x2 ADD PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x23CE JUMP JUMPDEST DUP2 DUP2 PUSH1 0x0 ADD PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x242B SWAP2 SWAP1 PUSH2 0x260E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2473 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2458 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x249B DUP3 PUSH2 0x2439 JUMP JUMPDEST PUSH2 0x24A5 DUP2 DUP6 PUSH2 0x2444 JUMP JUMPDEST SWAP4 POP PUSH2 0x24B5 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2455 JUMP JUMPDEST PUSH2 0x24BE DUP2 PUSH2 0x247F JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x24E3 DUP2 DUP5 PUSH2 0x2490 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2520 DUP3 PUSH2 0x24F5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2530 DUP2 PUSH2 0x2515 JUMP JUMPDEST DUP2 EQ PUSH2 0x253B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x254D DUP2 PUSH2 0x2527 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2566 DUP2 PUSH2 0x2553 JUMP JUMPDEST DUP2 EQ PUSH2 0x2571 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2583 DUP2 PUSH2 0x255D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x25A0 JUMPI PUSH2 0x259F PUSH2 0x24EB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x25AE DUP6 DUP3 DUP7 ADD PUSH2 0x253E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x25BF DUP6 DUP3 DUP7 ADD PUSH2 0x2574 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x25DE DUP2 PUSH2 0x25C9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x25F9 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x25D5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2608 DUP2 PUSH2 0x2553 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2623 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x25FF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2642 JUMPI PUSH2 0x2641 PUSH2 0x24EB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2650 DUP7 DUP3 DUP8 ADD PUSH2 0x253E JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x2661 DUP7 DUP3 DUP8 ADD PUSH2 0x253E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x2672 DUP7 DUP3 DUP8 ADD PUSH2 0x2574 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2692 DUP2 PUSH2 0x267C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x26AD PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2689 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x26C6 DUP2 PUSH2 0x26B3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x26E1 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x26BD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x26FD JUMPI PUSH2 0x26FC PUSH2 0x24EB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x270B DUP5 DUP3 DUP6 ADD PUSH2 0x2574 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x271F DUP3 PUSH2 0x2515 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x272F DUP2 PUSH2 0x2714 JUMP JUMPDEST DUP2 EQ PUSH2 0x273A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x274C DUP2 PUSH2 0x2726 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x2777 JUMPI PUSH2 0x2776 PUSH2 0x2752 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2794 JUMPI PUSH2 0x2793 PUSH2 0x2757 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x27B0 JUMPI PUSH2 0x27AF PUSH2 0x275C JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x80 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x27D3 JUMPI PUSH2 0x27D2 PUSH2 0x24EB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x27E1 DUP9 DUP3 DUP10 ADD PUSH2 0x273D JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x27F2 DUP9 DUP3 DUP10 ADD PUSH2 0x253E JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x2803 DUP9 DUP3 DUP10 ADD PUSH2 0x2574 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2824 JUMPI PUSH2 0x2823 PUSH2 0x24F0 JUMP JUMPDEST JUMPDEST PUSH2 0x2830 DUP9 DUP3 DUP10 ADD PUSH2 0x2761 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2855 JUMPI PUSH2 0x2854 PUSH2 0x24EB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2863 DUP5 DUP3 DUP6 ADD PUSH2 0x253E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFF00000000000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x28A1 DUP2 PUSH2 0x286C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x28B0 DUP2 PUSH2 0x2515 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x28EB DUP2 PUSH2 0x2553 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x28FD DUP4 DUP4 PUSH2 0x28E2 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2921 DUP3 PUSH2 0x28B6 JUMP JUMPDEST PUSH2 0x292B DUP2 DUP6 PUSH2 0x28C1 JUMP JUMPDEST SWAP4 POP PUSH2 0x2936 DUP4 PUSH2 0x28D2 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2967 JUMPI DUP2 MLOAD PUSH2 0x294E DUP9 DUP3 PUSH2 0x28F1 JUMP JUMPDEST SWAP8 POP PUSH2 0x2959 DUP4 PUSH2 0x2909 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x293A JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE0 DUP3 ADD SWAP1 POP PUSH2 0x2989 PUSH1 0x0 DUP4 ADD DUP11 PUSH2 0x2898 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x299B DUP2 DUP10 PUSH2 0x2490 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x29AF DUP2 DUP9 PUSH2 0x2490 JUMP JUMPDEST SWAP1 POP PUSH2 0x29BE PUSH1 0x60 DUP4 ADD DUP8 PUSH2 0x25FF JUMP JUMPDEST PUSH2 0x29CB PUSH1 0x80 DUP4 ADD DUP7 PUSH2 0x28A7 JUMP JUMPDEST PUSH2 0x29D8 PUSH1 0xA0 DUP4 ADD DUP6 PUSH2 0x26BD JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0xC0 DUP4 ADD MSTORE PUSH2 0x29EA DUP2 DUP5 PUSH2 0x2916 JUMP JUMPDEST SWAP1 POP SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2A0D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x28A7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2A1C DUP2 PUSH2 0x267C JUMP JUMPDEST DUP2 EQ PUSH2 0x2A27 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2A39 DUP2 PUSH2 0x2A13 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2A48 DUP2 PUSH2 0x26B3 JUMP JUMPDEST DUP2 EQ PUSH2 0x2A53 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2A65 DUP2 PUSH2 0x2A3F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x2A8A JUMPI PUSH2 0x2A89 PUSH2 0x24EB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2A98 DUP11 DUP3 DUP12 ADD PUSH2 0x253E JUMP JUMPDEST SWAP8 POP POP PUSH1 0x20 PUSH2 0x2AA9 DUP11 DUP3 DUP12 ADD PUSH2 0x253E JUMP JUMPDEST SWAP7 POP POP PUSH1 0x40 PUSH2 0x2ABA DUP11 DUP3 DUP12 ADD PUSH2 0x2574 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x60 PUSH2 0x2ACB DUP11 DUP3 DUP12 ADD PUSH2 0x2574 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x80 PUSH2 0x2ADC DUP11 DUP3 DUP12 ADD PUSH2 0x2A2A JUMP JUMPDEST SWAP4 POP POP PUSH1 0xA0 PUSH2 0x2AED DUP11 DUP3 DUP12 ADD PUSH2 0x2A56 JUMP JUMPDEST SWAP3 POP POP PUSH1 0xC0 PUSH2 0x2AFE DUP11 DUP3 DUP12 ADD PUSH2 0x2A56 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2B24 JUMPI PUSH2 0x2B23 PUSH2 0x24EB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2B32 DUP6 DUP3 DUP7 ADD PUSH2 0x253E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2B43 DUP6 DUP3 DUP7 ADD PUSH2 0x253E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x2B94 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x2BA7 JUMPI PUSH2 0x2BA6 PUSH2 0x2B4D JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2BD9 DUP4 DUP6 PUSH2 0x2BAD JUMP JUMPDEST SWAP4 POP PUSH2 0x2BE6 DUP4 DUP6 DUP5 PUSH2 0x2BBE JUMP JUMPDEST PUSH2 0x2BEF DUP4 PUSH2 0x247F JUMP JUMPDEST DUP5 ADD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x2C0F PUSH1 0x0 DUP4 ADD DUP10 PUSH2 0x28A7 JUMP JUMPDEST PUSH2 0x2C1C PUSH1 0x20 DUP4 ADD DUP9 PUSH2 0x28A7 JUMP JUMPDEST PUSH2 0x2C29 PUSH1 0x40 DUP4 ADD DUP8 PUSH2 0x25FF JUMP JUMPDEST PUSH2 0x2C36 PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x25FF JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x2C49 DUP2 DUP5 DUP7 PUSH2 0x2BCD JUMP JUMPDEST SWAP1 POP SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2C65 DUP2 PUSH2 0x2A3F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2C81 JUMPI PUSH2 0x2C80 PUSH2 0x24EB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2C8F DUP5 DUP3 DUP6 ADD PUSH2 0x2C56 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2CD2 DUP3 PUSH2 0x2553 JUMP JUMPDEST SWAP2 POP PUSH2 0x2CDD DUP4 PUSH2 0x2553 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x2CF5 JUMPI PUSH2 0x2CF4 PUSH2 0x2C98 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2D06 DUP3 PUSH2 0x2553 JUMP JUMPDEST SWAP2 POP PUSH2 0x2D11 DUP4 PUSH2 0x2553 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x2D29 JUMPI PUSH2 0x2D28 PUSH2 0x2C98 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4549503731323A20556E696E697469616C697A65640000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2D65 PUSH1 0x15 DUP4 PUSH2 0x2444 JUMP JUMPDEST SWAP2 POP PUSH2 0x2D70 DUP3 PUSH2 0x2D2F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2D94 DUP2 PUSH2 0x2D58 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2E0D PUSH2 0x2E08 PUSH2 0x2E03 DUP5 PUSH2 0x2DCA JUMP JUMPDEST PUSH2 0x2DE8 JUMP JUMPDEST PUSH2 0x2DD4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2E1D DUP2 PUSH2 0x2DF2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2E38 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2E14 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC0 DUP3 ADD SWAP1 POP PUSH2 0x2E53 PUSH1 0x0 DUP4 ADD DUP10 PUSH2 0x26BD JUMP JUMPDEST PUSH2 0x2E60 PUSH1 0x20 DUP4 ADD DUP9 PUSH2 0x28A7 JUMP JUMPDEST PUSH2 0x2E6D PUSH1 0x40 DUP4 ADD DUP8 PUSH2 0x28A7 JUMP JUMPDEST PUSH2 0x2E7A PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x25FF JUMP JUMPDEST PUSH2 0x2E87 PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0x25FF JUMP JUMPDEST PUSH2 0x2E94 PUSH1 0xA0 DUP4 ADD DUP5 PUSH2 0x25FF JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2EB4 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x28A7 JUMP JUMPDEST PUSH2 0x2EC1 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x28A7 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2EDD PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x28A7 JUMP JUMPDEST PUSH2 0x2EEA PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x25FF JUMP JUMPDEST PUSH2 0x2EF7 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x25FF JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x2F14 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x26BD JUMP JUMPDEST PUSH2 0x2F21 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x26BD JUMP JUMPDEST PUSH2 0x2F2E PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x26BD JUMP JUMPDEST PUSH2 0x2F3B PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x25FF JUMP JUMPDEST PUSH2 0x2F48 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x28A7 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH2 0x2FB4 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x2F77 JUMP JUMPDEST PUSH2 0x2FBE DUP7 DUP4 PUSH2 0x2F77 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2FF1 PUSH2 0x2FEC PUSH2 0x2FE7 DUP5 PUSH2 0x2553 JUMP JUMPDEST PUSH2 0x2DE8 JUMP JUMPDEST PUSH2 0x2553 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x300B DUP4 PUSH2 0x2FD6 JUMP JUMPDEST PUSH2 0x301F PUSH2 0x3017 DUP3 PUSH2 0x2FF8 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x2F84 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x3034 PUSH2 0x3027 JUMP JUMPDEST PUSH2 0x303F DUP2 DUP5 DUP5 PUSH2 0x3002 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x3063 JUMPI PUSH2 0x3058 PUSH1 0x0 DUP3 PUSH2 0x302C JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x3045 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x30A8 JUMPI PUSH2 0x3079 DUP2 PUSH2 0x2F52 JUMP JUMPDEST PUSH2 0x3082 DUP5 PUSH2 0x2F67 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x3091 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x30A5 PUSH2 0x309D DUP6 PUSH2 0x2F67 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x3044 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x30CB PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x30AD JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x30E4 DUP4 DUP4 PUSH2 0x30BA JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x30FD DUP3 PUSH2 0x2439 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3116 JUMPI PUSH2 0x3115 PUSH2 0x2D9B JUMP JUMPDEST JUMPDEST PUSH2 0x3120 DUP3 SLOAD PUSH2 0x2B7C JUMP JUMPDEST PUSH2 0x312B DUP3 DUP3 DUP6 PUSH2 0x3067 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x315E JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x314C JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x3156 DUP6 DUP3 PUSH2 0x30D8 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x31BE JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x316C DUP7 PUSH2 0x2F52 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x3194 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x316F JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x31B1 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x31AD PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x30BA JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x31DB PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x26BD JUMP JUMPDEST PUSH2 0x31E8 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x2689 JUMP JUMPDEST PUSH2 0x31F5 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x26BD JUMP JUMPDEST PUSH2 0x3202 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x26BD JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAF CREATE2 0xE5 0xA7 MLOAD 0xA5 PUSH18 0x612F6FAC27CCC74E17FE33BF1934538A501D 0x2B BYTE PUSH20 0x3FC5C8CF64736F6C634300081400330000000000 ","sourceMap":"730:1070:23:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3011:144:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5505:186;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4191:152;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6251:244;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4049:82;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3082:112:6;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1375:63:23;;;:::i;:::-;;1444:93;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;931:87:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2692:145:9;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5096:962:4;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2246:161;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4401:171:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3155:101:0;;;:::i;:::-;;1334:158:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2821:154:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1310:59:23;;;:::i;:::-;;5173:903:10;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;2441:144:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3268:148:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4767:178;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1024:280:23;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2095:672:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2772:232:4;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5003:195:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3405:215:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3011:144:2;3056:13;3081:22;3106:18;:16;:18::i;:::-;3081:43;;3141:1;:7;;3134:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3011:144;:::o;5505:186::-;5578:4;5594:13;5610:12;:10;:12::i;:::-;5594:28;;5632:31;5641:5;5648:7;5657:5;5632:8;:31::i;:::-;5680:4;5673:11;;;5505:186;;;;:::o;4191:152::-;4243:7;4262:22;4287:18;:16;:18::i;:::-;4262:43;;4322:1;:14;;;4315:21;;;4191:152;:::o;6251:244::-;6338:4;6354:15;6372:12;:10;:12::i;:::-;6354:30;;6394:37;6410:4;6416:7;6425:5;6394:15;:37::i;:::-;6441:26;6451:4;6457:2;6461:5;6441:9;:26::i;:::-;6484:4;6477:11;;;6251:244;;;;;:::o;4049:82::-;4098:5;4122:2;4115:9;;4049:82;:::o;3082:112:6:-;3141:7;3167:20;:18;:20::i;:::-;3160:27;;3082:112;:::o;1375:63:23:-;2334:13:0;:11;:13::i;:::-;1421:10:23::1;:8;:10::i;:::-;1375:63::o:0;1444:93::-;2334:13:0;:11;:13::i;:::-;1513:17:23::1;1519:2;1523:6;1513:5;:17::i;:::-;1444:93:::0;;:::o;931:87:3:-;985:26;991:12;:10;:12::i;:::-;1005:5;985;:26::i;:::-;931:87;:::o;2692:145:9:-;2739:4;2755:25;2783:21;:19;:21::i;:::-;2755:49;;2821:1;:9;;;;;;;;;;;;2814:16;;;2692:145;:::o;5096:962:4:-;5260:4;5276:15;5294:19;5307:5;5294:12;:19::i;:::-;5276:37;;5335:7;5327:5;:15;5323:84;;;5388:7;5365:31;;;;;;;;;;;:::i;:::-;;;;;;;;5323:84;5416:11;5430:22;5439:5;5446;5430:8;:22::i;:::-;5416:36;;5462:31;5476:8;5487:5;5462;:31::i;:::-;1197:45;5507:8;:20;;;5528:12;:10;:12::i;:::-;5542:5;5549;5556:3;5561:4;;5507:59;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:75;5503:154;;5636:8;5605:41;;;;;;;;;;;:::i;:::-;;;;;;;;5503:154;5666:24;5693:19;:17;:19::i;:::-;5666:46;;5722:62;5746:8;5765:4;5780:3;5772:5;:11;;;;:::i;:::-;5722:15;:62::i;:::-;5805:1;5798:3;:8;:42;;;;5838:1;5810:30;;:16;:30;;;5798:42;5794:237;;;5856:37;5870:8;5889:3;5881:5;:11;;;;:::i;:::-;5856:5;:37::i;:::-;5794:237;;;5924:31;5938:8;5949:5;5924;:31::i;:::-;5969:51;5987:8;5998:16;6016:3;5969:9;:51::i;:::-;5794:237;6047:4;6040:11;;;;;5096:962;;;;;;;:::o;2246:161::-;2312:7;2355:4;2338:22;;:5;:22;;;:62;;2399:1;2338:62;;;2383:13;:11;:13::i;:::-;2363:17;:33;;;;:::i;:::-;2338:62;2331:69;;2246:161;;;:::o;4401:171:2:-;4466:7;4485:22;4510:18;:16;:18::i;:::-;4485:43;;4545:1;:11;;:20;4557:7;4545:20;;;;;;;;;;;;;;;;4538:27;;;4401:171;;;:::o;3155:101:0:-;2334:13;:11;:13::i;:::-;3219:30:::1;3246:1;3219:18;:30::i;:::-;3155:101::o:0;1334:158:3:-;1409:45;1425:7;1434:12;:10;:12::i;:::-;1448:5;1409:15;:45::i;:::-;1464:21;1470:7;1479:5;1464;:21::i;:::-;1334:158;;:::o;2821:154:6:-;2923:7;2949:19;2962:5;2949:12;:19::i;:::-;2942:26;;2821:154;;;:::o;1310:59:23:-;2334:13:0;:11;:13::i;:::-;1354:8:23::1;:6;:8::i;:::-;1310:59::o:0;5173:903:10:-;5271:13;5298:18;5330:21;5365:15;5394:25;5433:12;5459:27;5511:23;5537:19;:17;:19::i;:::-;5511:45;;5794:1;5777:18;;:1;:13;;;:18;:43;;;;;5819:1;5799:21;;:1;:16;;;:21;5777:43;5769:77;;;;;;;;;;;;:::i;:::-;;;;;;;;;5908:13;:11;:13::i;:::-;5935:16;:14;:16::i;:::-;5965:13;6000:4;6027:1;6019:10;;6057:1;6043:16;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5857:212;;;;;;;;;;;;;;;;;;;;;;5173:903;;;;;;;:::o;2441:144:0:-;2487:7;2506:24;2533:20;:18;:20::i;:::-;2506:47;;2570:1;:8;;;;;;;;;;;;2563:15;;;2441:144;:::o;3268:148:2:-;3315:13;3340:22;3365:18;:16;:18::i;:::-;3340:43;;3400:1;:9;;3393:16;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3268:148;:::o;4767:178::-;4836:4;4852:13;4868:12;:10;:12::i;:::-;4852:28;;4890:27;4900:5;4907:2;4911:5;4890:9;:27::i;:::-;4934:4;4927:11;;;4767:178;;;;:::o;1024:280:23:-;4158:30:1;4191:26;:24;:26::i;:::-;4158:59;;4279:19;4302:1;:15;;;;;;;;;;;;4301:16;4279:38;;4327:18;4348:1;:14;;;;;;;;;;;;4327:35;;4706:17;4741:1;4726:11;:16;;;:34;;;;;4746:14;4726:34;4706:54;;4770:17;4805:1;4790:11;:16;;;:50;;;;;4839:1;4818:4;4810:25;;;:30;4790:50;4770:70;;4856:12;4855:13;:30;;;;;4873:12;4872:13;4855:30;4851:91;;;4908:23;;;;;;;;;;;;;;4851:91;4968:1;4951;:14;;;:18;;;;;;;;;;;;;;;;;;4983:14;4979:67;;;5031:4;5013:1;:15;;;:22;;;;;;;;;;;;;;;;;;4979:67;1095:29:23::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;::::0;:12:::1;:29::i;:::-;1134:22;:20;:22::i;:::-;1166;:20;:22::i;:::-;1198:28;1213:12;1198:14;:28::i;:::-;1236;;;;;;;;;;;;;;;;;::::0;:18:::1;:28::i;:::-;1274:23;:21;:23::i;:::-;5070:14:1::0;5066:101;;;5118:5;5100:1;:15;;;:23;;;;;;;;;;;;;;;;;;5142:14;5154:1;5142:14;;;;;;:::i;:::-;;;;;;;;5066:101;4092:1081;;;;;1024:280:23;:::o;2095:672:6:-;2316:8;2298:15;:26;2294:97;;;2371:8;2347:33;;;;;;;;;;;:::i;:::-;;;;;;;;2294:97;2401:18;1277:95;2460:5;2467:7;2476:5;2483:16;2493:5;2483:9;:16::i;:::-;2501:8;2432:78;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2422:89;;;;;;2401:110;;2522:12;2537:28;2554:10;2537:16;:28::i;:::-;2522:43;;2576:14;2593:28;2607:4;2613:1;2616;2619;2593:13;:28::i;:::-;2576:45;;2645:5;2635:15;;:6;:15;;;2631:88;;2694:6;2702:5;2673:35;;;;;;;;;;;;:::i;:::-;;;;;;;;2631:88;2729:31;2738:5;2745:7;2754:5;2729:8;:31::i;:::-;2284:483;;;2095:672;;;;;;;:::o;2772:232:4:-;2849:7;2889:4;2872:22;;:5;:22;;;2868:90;;2941:5;2917:30;;;;;;;;;;;:::i;:::-;;;;;;;;2868:90;2974:23;2984:5;2991;2974:9;:23::i;:::-;2967:30;;2772:232;;;;:::o;5003:195:2:-;5083:7;5102:22;5127:18;:16;:18::i;:::-;5102:43;;5162:1;:13;;:20;5176:5;5162:20;;;;;;;;;;;;;;;:29;5183:7;5162:29;;;;;;;;;;;;;;;;5155:36;;;5003:195;;;;:::o;3405:215:0:-;2334:13;:11;:13::i;:::-;3509:1:::1;3489:22;;:8;:22;;::::0;3485:91:::1;;3562:1;3534:31;;;;;;;;;;;:::i;:::-;;;;;;;;3485:91;3585:28;3604:8;3585:18;:28::i;:::-;3405:215:::0;:::o;2242:153:2:-;2292:22;2359:20;2349:30;;2242:153;:::o;887:96:7:-;940:7;966:10;959:17;;887:96;:::o;10264:128:2:-;10348:37;10357:5;10364:7;10373:5;10380:4;10348:8;:37::i;:::-;10264:128;;;:::o;11993:477::-;12092:24;12119:25;12129:5;12136:7;12119:9;:25::i;:::-;12092:52;;12178:17;12158:16;:37;12154:310;;12234:5;12215:16;:24;12211:130;;;12293:7;12302:16;12320:5;12266:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;12211:130;12382:57;12391:5;12398:7;12426:5;12407:16;:24;12433:5;12382:8;:57::i;:::-;12154:310;12082:388;11993:477;;;:::o;6868:300::-;6967:1;6951:18;;:4;:18;;;6947:86;;7019:1;6992:30;;;;;;;;;;;:::i;:::-;;;;;;;;6947:86;7060:1;7046:16;;:2;:16;;;7042:86;;7114:1;7085:32;;;;;;;;;;;:::i;:::-;;;;;;;;7042:86;7137:24;7145:4;7151:2;7155:5;7137:7;:24::i;:::-;6868:300;;;:::o;4015:109:10:-;4068:7;4094:23;:21;:23::i;:::-;4087:30;;4015:109;:::o;2658:162:0:-;2728:12;:10;:12::i;:::-;2717:23;;:7;:5;:7::i;:::-;:23;;;2713:101;;2790:12;:10;:12::i;:::-;2763:40;;;;;;;;;;;:::i;:::-;;;;;;;;2713:101;2658:162::o;3674:178:9:-;2563:16;:14;:16::i;:::-;3732:25:::1;3760:21;:19;:21::i;:::-;3732:49;;3803:5;3791:1;:9;;;:17;;;;;;;;;;;;;;;;;;3823:22;3832:12;:10;:12::i;:::-;3823:22;;;;;;:::i;:::-;;;;;;;;3722:130;3674:178::o:0;8996:208:2:-;9085:1;9066:21;;:7;:21;;;9062:91;;9139:1;9110:32;;;;;;;;;;;:::i;:::-;;;;;;;;9062:91;9162:35;9178:1;9182:7;9191:5;9162:7;:35::i;:::-;8996:208;;:::o;9522:206::-;9611:1;9592:21;;:7;:21;;;9588:89;;9663:1;9636:30;;;;;;;;;;;:::i;:::-;;;;;;;;9588:89;9686:35;9694:7;9711:1;9715:5;9686:7;:35::i;:::-;9522:206;;:::o;1147:162:9:-;1200:25;1270:23;1260:33;;1147:162;:::o;3938:103:4:-;3998:7;3938:103;:::o;3774:248:0:-;3847:24;3874:20;:18;:20::i;:::-;3847:47;;3904:16;3923:1;:8;;;;;;;;;;;;3904:27;;3952:8;3941:1;:8;;;:19;;;;;;;;;;;;;;;;;;4006:8;3975:40;;3996:8;3975:40;;;;;;;;;;;;3837:185;;3774:248;:::o;1259:164:8:-;1319:7;1338:23;1364:19;:17;:19::i;:::-;1338:45;;1400:1;:9;;:16;1410:5;1400:16;;;;;;;;;;;;;;;;1393:23;;;1259:164;;;:::o;3366:176:9:-;2316:19;:17;:19::i;:::-;3425:25:::1;3453:21;:19;:21::i;:::-;3425:49;;3496:4;3484:1;:9;;;:16;;;;;;;;;;;;;;;;;;3515:20;3522:12;:10;:12::i;:::-;3515:20;;;;;;:::i;:::-;;;;;;;;3415:127;3366:176::o:0;2720:156:10:-;2771:23;2839:21;2829:31;;2720:156;:::o;6300:155::-;6354:13;6379:23;6405:19;:17;:19::i;:::-;6379:45;;6441:1;:7;;6434:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6300:155;:::o;6682:161::-;6739:13;6764:23;6790:19;:17;:19::i;:::-;6764:45;;6826:1;:10;;6819:17;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6682:161;:::o;1192:159:0:-;1244:24;1313:22;1303:32;;1192:159;:::o;8737:170:1:-;8795:30;8870:21;8860:31;;8737:170;:::o;2577:147:2:-;6931:20:1;:18;:20::i;:::-;2679:38:2::1;2702:5;2709:7;2679:22;:38::i;:::-;2577:147:::0;;:::o;666:65:3:-;6931:20:1;:18;:20::i;:::-;666:65:3:o;1148:102:5:-;6931:20:1;:18;:20::i;:::-;1216:27:5::1;:25;:27::i;:::-;1148:102::o:0;1847:127:0:-;6931:20:1;:18;:20::i;:::-;1929:38:0::1;1954:12;1929:24;:38::i;:::-;1847:127:::0;:::o;1829:125:6:-;6931:20:1;:18;:20::i;:::-;1913:34:6::1;1937:4;1913:34;;;;;;;;;;;;;;;;::::0;:23:::1;:34::i;:::-;1829:125:::0;:::o;1647:66:4:-;6931:20:1;:18;:20::i;:::-;1647:66:4:o;1537:452:8:-;1597:7;1616:23;1642:19;:17;:19::i;:::-;1616:45;;1954:1;:9;;:16;1964:5;1954:16;;;;;;;;;;;;;;;;:18;;;;;;;;;;;;1947:25;;;1537:452;;;:::o;4946:176:10:-;5023:7;5049:66;5082:20;:18;:20::i;:::-;5104:10;5049:32;:66::i;:::-;5042:73;;4946:176;;;:::o;6803:260:19:-;6888:7;6908:17;6927:18;6947:16;6967:25;6978:4;6984:1;6987;6990;6967:10;:25::i;:::-;6907:85;;;;;;7002:28;7014:5;7021:8;7002:11;:28::i;:::-;7047:9;7040:16;;;;;6803:260;;;;;;:::o;3392:227:4:-;3472:7;3392:227;;;;:::o;11224:487:2:-;11332:22;11357:18;:16;:18::i;:::-;11332:43;;11406:1;11389:19;;:5;:19;;;11385:89;;11460:1;11431:32;;;;;;;;;;;:::i;:::-;;;;;;;;11385:89;11506:1;11487:21;;:7;:21;;;11483:90;;11559:1;11531:31;;;;;;;;;;;:::i;:::-;;;;;;;;11483:90;11614:5;11582:1;:13;;:20;11596:5;11582:20;;;;;;;;;;;;;;;:29;11603:7;11582:29;;;;;;;;;;;;;;;:37;;;;11633:9;11629:76;;;11679:7;11663:31;;11672:5;11663:31;;;11688:5;11663:31;;;;;;:::i;:::-;;;;;;;;11629:76;11322:389;11224:487;;;;:::o;1611:187:23:-;1761:30;1775:4;1781:2;1785:5;1761:13;:30::i;:::-;1611:187;;;:::o;4130:191:10:-;4185:7;2073:95;4243:17;:15;:17::i;:::-;4262:20;:18;:20::i;:::-;4284:13;4307:4;4221:92;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;4211:103;;;;;;4204:110;;4130:191;:::o;3105:126:9:-;3168:8;:6;:8::i;:::-;3163:62;;3199:15;;;;;;;;;;;;;;3163:62;3105:126::o;886:156:8:-;937:23;1005:21;995:31;;886:156;:::o;2905:128:9:-;2970:8;:6;:8::i;:::-;2966:61;;;3001:15;;;;;;;;;;;;;;2966:61;2905:128::o;7084:141:1:-;7151:17;:15;:17::i;:::-;7146:73;;7191:17;;;;;;;;;;;;;;7146:73;7084:141::o;2730:216:2:-;6931:20:1;:18;:20::i;:::-;2842:22:2::1;2867:18;:16;:18::i;:::-;2842:43;;2905:5;2895:1;:7;;:15;;;;;;:::i;:::-;;2932:7;2920:1;:9;;:19;;;;;;:::i;:::-;;2832:114;2730:216:::0;;:::o;1939:156:9:-;6931:20:1;:18;:20::i;:::-;2012:25:9::1;2040:21;:19;:21::i;:::-;2012:49;;2083:5;2071:1;:9;;;:17;;;;;;;;;;;;;;;;;;2002:93;1939:156::o:0;1980:235:0:-;6931:20:1;:18;:20::i;:::-;2100:1:0::1;2076:26;;:12;:26;;::::0;2072:95:::1;;2153:1;2125:31;;;;;;;;;;;:::i;:::-;;;;;;;;2072:95;2176:32;2195:12;2176:18;:32::i;:::-;1980:235:::0;:::o;3599:330:10:-;6931:20:1;:18;:20::i;:::-;3711:23:10::1;3737:19;:17;:19::i;:::-;3711:45;;3776:4;3766:1;:7;;:14;;;;;;:::i;:::-;;3803:7;3790:1;:10;;:20;;;;;;:::i;:::-;;3891:1;3875:17:::0;::::1;:1;:13;;:17;;;;3921:1;3902:20:::0;::::1;:1;:16;;:20;;;;3701:228;3599:330:::0;;:::o;3353:401:20:-;3446:14;3555:4;3549:11;3585:10;3580:3;3573:23;3632:15;3625:4;3620:3;3616:14;3609:39;3684:10;3677:4;3672:3;3668:14;3661:34;3733:4;3728:3;3718:20;3708:30;;3524:224;3353:401;;;;:::o;5140:1530:19:-;5266:7;5275:12;5289:7;6199:66;6194:1;6186:10;;:79;6182:164;;;6297:1;6301:30;6333:1;6281:54;;;;;;;;6182:164;6440:14;6457:24;6467:4;6473:1;6476;6479;6457:24;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6440:41;;6513:1;6495:20;;:6;:20;;;6491:113;;6547:1;6551:29;6590:1;6582:10;;6531:62;;;;;;;;;6491:113;6622:6;6630:20;6660:1;6652:10;;6614:49;;;;;;;5140:1530;;;;;;;;;:::o;7196:532::-;7291:20;7282:29;;;;;;;;:::i;:::-;;:5;:29;;;;;;;;:::i;:::-;;;7278:444;7327:7;7278:444;7387:29;7378:38;;;;;;;;:::i;:::-;;:5;:38;;;;;;;;:::i;:::-;;;7374:348;;7439:23;;;;;;;;;;;;;;7374:348;7492:35;7483:44;;;;;;;;:::i;:::-;;:5;:44;;;;;;;;:::i;:::-;;;7479:243;;7586:8;7578:17;;7550:46;;;;;;;;;;;:::i;:::-;;;;;;;;7479:243;7626:30;7617:39;;;;;;;;:::i;:::-;;:5;:39;;;;;;;;:::i;:::-;;;7613:109;;7702:8;7679:32;;;;;;;;;;;:::i;:::-;;;;;;;;7613:109;7196:532;;;:::o;1462:145:5:-;2316:19:9;:17;:19::i;:::-;1570:30:5::1;1584:4;1590:2;1594:5;1570:13;:30::i;:::-;1462:145:::0;;;:::o;7058:687:10:-;7108:7;7127:23;7153:19;:17;:19::i;:::-;7127:45;;7182:18;7203:13;:11;:13::i;:::-;7182:34;;7251:1;7236:4;7230:18;:22;7226:513;;;7291:4;7275:22;;;;;;7268:29;;;;;;7226:513;7551:18;7572:1;:13;;;7551:34;;7617:1;7603:15;;:10;:15;7599:130;;7645:10;7638:17;;;;;;;7599:130;7701:13;7694:20;;;;;7058:687;;:::o;7966:723::-;8019:7;8038:23;8064:19;:17;:19::i;:::-;8038:45;;8093:21;8117:16;:14;:16::i;:::-;8093:40;;8171:1;8153:7;8147:21;:25;8143:540;;;8211:7;8195:25;;;;;;8188:32;;;;;;8143:540;8483:21;8507:1;:16;;;8483:40;;8558:1;8541:18;;:13;:18;8537:136;;8586:13;8579:20;;;;;;;8537:136;8645:13;8638:20;;;;;7966:723;;:::o;8487:120:1:-;8537:4;8560:26;:24;:26::i;:::-;:40;;;;;;;;;;;;8553:47;;8487:120;:::o;7483:1170:2:-;7568:22;7593:18;:16;:18::i;:::-;7568:43;;7641:1;7625:18;;:4;:18;;;7621:546;;7779:5;7761:1;:14;;;:23;;;;;;;:::i;:::-;;;;;;;;7621:546;;;7815:19;7837:1;:11;;:17;7849:4;7837:17;;;;;;;;;;;;;;;;7815:39;;7886:5;7872:11;:19;7868:115;;;7943:4;7949:11;7962:5;7918:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;7868:115;8137:5;8123:11;:19;8103:1;:11;;:17;8115:4;8103:17;;;;;;;;;;;;;;;:39;;;;7801:366;7621:546;8195:1;8181:16;;:2;:16;;;8177:429;;8362:5;8344:1;:14;;;:23;;;;;;;;;;;8177:429;;;8576:5;8557:1;:11;;:15;8569:2;8557:15;;;;;;;;;;;;;;;;:24;;;;;;;;;;;8177:429;8636:2;8621:25;;8630:4;8621:25;;;8640:5;8621:25;;;;;;:::i;:::-;;;;;;;;7558:1095;7483:1170;;;:::o;7:99:24:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:246::-;368:1;378:113;392:6;389:1;386:13;378:113;;;477:1;472:3;468:11;462:18;458:1;453:3;449:11;442:39;414:2;411:1;407:10;402:15;;378:113;;;525:1;516:6;511:3;507:16;500:27;349:184;287:246;;;:::o;539:102::-;580:6;631:2;627:7;622:2;615:5;611:14;607:28;597:38;;539:102;;;:::o;647:377::-;735:3;763:39;796:5;763:39;:::i;:::-;818:71;882:6;877:3;818:71;:::i;:::-;811:78;;898:65;956:6;951:3;944:4;937:5;933:16;898:65;:::i;:::-;988:29;1010:6;988:29;:::i;:::-;983:3;979:39;972:46;;739:285;647:377;;;;:::o;1030:313::-;1143:4;1181:2;1170:9;1166:18;1158:26;;1230:9;1224:4;1220:20;1216:1;1205:9;1201:17;1194:47;1258:78;1331:4;1322:6;1258:78;:::i;:::-;1250:86;;1030:313;;;;:::o;1430:117::-;1539:1;1536;1529:12;1553:117;1662:1;1659;1652:12;1676:126;1713:7;1753:42;1746:5;1742:54;1731:65;;1676:126;;;:::o;1808:96::-;1845:7;1874:24;1892:5;1874:24;:::i;:::-;1863:35;;1808:96;;;:::o;1910:122::-;1983:24;2001:5;1983:24;:::i;:::-;1976:5;1973:35;1963:63;;2022:1;2019;2012:12;1963:63;1910:122;:::o;2038:139::-;2084:5;2122:6;2109:20;2100:29;;2138:33;2165:5;2138:33;:::i;:::-;2038:139;;;;:::o;2183:77::-;2220:7;2249:5;2238:16;;2183:77;;;:::o;2266:122::-;2339:24;2357:5;2339:24;:::i;:::-;2332:5;2329:35;2319:63;;2378:1;2375;2368:12;2319:63;2266:122;:::o;2394:139::-;2440:5;2478:6;2465:20;2456:29;;2494:33;2521:5;2494:33;:::i;:::-;2394:139;;;;:::o;2539:474::-;2607:6;2615;2664:2;2652:9;2643:7;2639:23;2635:32;2632:119;;;2670:79;;:::i;:::-;2632:119;2790:1;2815:53;2860:7;2851:6;2840:9;2836:22;2815:53;:::i;:::-;2805:63;;2761:117;2917:2;2943:53;2988:7;2979:6;2968:9;2964:22;2943:53;:::i;:::-;2933:63;;2888:118;2539:474;;;;;:::o;3019:90::-;3053:7;3096:5;3089:13;3082:21;3071:32;;3019:90;;;:::o;3115:109::-;3196:21;3211:5;3196:21;:::i;:::-;3191:3;3184:34;3115:109;;:::o;3230:210::-;3317:4;3355:2;3344:9;3340:18;3332:26;;3368:65;3430:1;3419:9;3415:17;3406:6;3368:65;:::i;:::-;3230:210;;;;:::o;3446:118::-;3533:24;3551:5;3533:24;:::i;:::-;3528:3;3521:37;3446:118;;:::o;3570:222::-;3663:4;3701:2;3690:9;3686:18;3678:26;;3714:71;3782:1;3771:9;3767:17;3758:6;3714:71;:::i;:::-;3570:222;;;;:::o;3798:619::-;3875:6;3883;3891;3940:2;3928:9;3919:7;3915:23;3911:32;3908:119;;;3946:79;;:::i;:::-;3908:119;4066:1;4091:53;4136:7;4127:6;4116:9;4112:22;4091:53;:::i;:::-;4081:63;;4037:117;4193:2;4219:53;4264:7;4255:6;4244:9;4240:22;4219:53;:::i;:::-;4209:63;;4164:118;4321:2;4347:53;4392:7;4383:6;4372:9;4368:22;4347:53;:::i;:::-;4337:63;;4292:118;3798:619;;;;;:::o;4423:86::-;4458:7;4498:4;4491:5;4487:16;4476:27;;4423:86;;;:::o;4515:112::-;4598:22;4614:5;4598:22;:::i;:::-;4593:3;4586:35;4515:112;;:::o;4633:214::-;4722:4;4760:2;4749:9;4745:18;4737:26;;4773:67;4837:1;4826:9;4822:17;4813:6;4773:67;:::i;:::-;4633:214;;;;:::o;4853:77::-;4890:7;4919:5;4908:16;;4853:77;;;:::o;4936:118::-;5023:24;5041:5;5023:24;:::i;:::-;5018:3;5011:37;4936:118;;:::o;5060:222::-;5153:4;5191:2;5180:9;5176:18;5168:26;;5204:71;5272:1;5261:9;5257:17;5248:6;5204:71;:::i;:::-;5060:222;;;;:::o;5288:329::-;5347:6;5396:2;5384:9;5375:7;5371:23;5367:32;5364:119;;;5402:79;;:::i;:::-;5364:119;5522:1;5547:53;5592:7;5583:6;5572:9;5568:22;5547:53;:::i;:::-;5537:63;;5493:117;5288:329;;;;:::o;5623:126::-;5690:7;5719:24;5737:5;5719:24;:::i;:::-;5708:35;;5623:126;;;:::o;5755:182::-;5858:54;5906:5;5858:54;:::i;:::-;5851:5;5848:65;5838:93;;5927:1;5924;5917:12;5838:93;5755:182;:::o;5943:199::-;6019:5;6057:6;6044:20;6035:29;;6073:63;6130:5;6073:63;:::i;:::-;5943:199;;;;:::o;6148:117::-;6257:1;6254;6247:12;6271:117;6380:1;6377;6370:12;6394:117;6503:1;6500;6493:12;6530:552;6587:8;6597:6;6647:3;6640:4;6632:6;6628:17;6624:27;6614:122;;6655:79;;:::i;:::-;6614:122;6768:6;6755:20;6745:30;;6798:18;6790:6;6787:30;6784:117;;;6820:79;;:::i;:::-;6784:117;6934:4;6926:6;6922:17;6910:29;;6988:3;6980:4;6972:6;6968:17;6958:8;6954:32;6951:41;6948:128;;;6995:79;;:::i;:::-;6948:128;6530:552;;;;;:::o;7088:1023::-;7215:6;7223;7231;7239;7247;7296:3;7284:9;7275:7;7271:23;7267:33;7264:120;;;7303:79;;:::i;:::-;7264:120;7423:1;7448:83;7523:7;7514:6;7503:9;7499:22;7448:83;:::i;:::-;7438:93;;7394:147;7580:2;7606:53;7651:7;7642:6;7631:9;7627:22;7606:53;:::i;:::-;7596:63;;7551:118;7708:2;7734:53;7779:7;7770:6;7759:9;7755:22;7734:53;:::i;:::-;7724:63;;7679:118;7864:2;7853:9;7849:18;7836:32;7895:18;7887:6;7884:30;7881:117;;;7917:79;;:::i;:::-;7881:117;8030:64;8086:7;8077:6;8066:9;8062:22;8030:64;:::i;:::-;8012:82;;;;7807:297;7088:1023;;;;;;;;:::o;8117:329::-;8176:6;8225:2;8213:9;8204:7;8200:23;8196:32;8193:119;;;8231:79;;:::i;:::-;8193:119;8351:1;8376:53;8421:7;8412:6;8401:9;8397:22;8376:53;:::i;:::-;8366:63;;8322:117;8117:329;;;;:::o;8452:149::-;8488:7;8528:66;8521:5;8517:78;8506:89;;8452:149;;;:::o;8607:115::-;8692:23;8709:5;8692:23;:::i;:::-;8687:3;8680:36;8607:115;;:::o;8728:118::-;8815:24;8833:5;8815:24;:::i;:::-;8810:3;8803:37;8728:118;;:::o;8852:114::-;8919:6;8953:5;8947:12;8937:22;;8852:114;;;:::o;8972:184::-;9071:11;9105:6;9100:3;9093:19;9145:4;9140:3;9136:14;9121:29;;8972:184;;;;:::o;9162:132::-;9229:4;9252:3;9244:11;;9282:4;9277:3;9273:14;9265:22;;9162:132;;;:::o;9300:108::-;9377:24;9395:5;9377:24;:::i;:::-;9372:3;9365:37;9300:108;;:::o;9414:179::-;9483:10;9504:46;9546:3;9538:6;9504:46;:::i;:::-;9582:4;9577:3;9573:14;9559:28;;9414:179;;;;:::o;9599:113::-;9669:4;9701;9696:3;9692:14;9684:22;;9599:113;;;:::o;9748:732::-;9867:3;9896:54;9944:5;9896:54;:::i;:::-;9966:86;10045:6;10040:3;9966:86;:::i;:::-;9959:93;;10076:56;10126:5;10076:56;:::i;:::-;10155:7;10186:1;10171:284;10196:6;10193:1;10190:13;10171:284;;;10272:6;10266:13;10299:63;10358:3;10343:13;10299:63;:::i;:::-;10292:70;;10385:60;10438:6;10385:60;:::i;:::-;10375:70;;10231:224;10218:1;10215;10211:9;10206:14;;10171:284;;;10175:14;10471:3;10464:10;;9872:608;;;9748:732;;;;:::o;10486:1215::-;10835:4;10873:3;10862:9;10858:19;10850:27;;10887:69;10953:1;10942:9;10938:17;10929:6;10887:69;:::i;:::-;11003:9;10997:4;10993:20;10988:2;10977:9;10973:18;10966:48;11031:78;11104:4;11095:6;11031:78;:::i;:::-;11023:86;;11156:9;11150:4;11146:20;11141:2;11130:9;11126:18;11119:48;11184:78;11257:4;11248:6;11184:78;:::i;:::-;11176:86;;11272:72;11340:2;11329:9;11325:18;11316:6;11272:72;:::i;:::-;11354:73;11422:3;11411:9;11407:19;11398:6;11354:73;:::i;:::-;11437;11505:3;11494:9;11490:19;11481:6;11437:73;:::i;:::-;11558:9;11552:4;11548:20;11542:3;11531:9;11527:19;11520:49;11586:108;11689:4;11680:6;11586:108;:::i;:::-;11578:116;;10486:1215;;;;;;;;;;:::o;11707:222::-;11800:4;11838:2;11827:9;11823:18;11815:26;;11851:71;11919:1;11908:9;11904:17;11895:6;11851:71;:::i;:::-;11707:222;;;;:::o;11935:118::-;12006:22;12022:5;12006:22;:::i;:::-;11999:5;11996:33;11986:61;;12043:1;12040;12033:12;11986:61;11935:118;:::o;12059:135::-;12103:5;12141:6;12128:20;12119:29;;12157:31;12182:5;12157:31;:::i;:::-;12059:135;;;;:::o;12200:122::-;12273:24;12291:5;12273:24;:::i;:::-;12266:5;12263:35;12253:63;;12312:1;12309;12302:12;12253:63;12200:122;:::o;12328:139::-;12374:5;12412:6;12399:20;12390:29;;12428:33;12455:5;12428:33;:::i;:::-;12328:139;;;;:::o;12473:1199::-;12584:6;12592;12600;12608;12616;12624;12632;12681:3;12669:9;12660:7;12656:23;12652:33;12649:120;;;12688:79;;:::i;:::-;12649:120;12808:1;12833:53;12878:7;12869:6;12858:9;12854:22;12833:53;:::i;:::-;12823:63;;12779:117;12935:2;12961:53;13006:7;12997:6;12986:9;12982:22;12961:53;:::i;:::-;12951:63;;12906:118;13063:2;13089:53;13134:7;13125:6;13114:9;13110:22;13089:53;:::i;:::-;13079:63;;13034:118;13191:2;13217:53;13262:7;13253:6;13242:9;13238:22;13217:53;:::i;:::-;13207:63;;13162:118;13319:3;13346:51;13389:7;13380:6;13369:9;13365:22;13346:51;:::i;:::-;13336:61;;13290:117;13446:3;13473:53;13518:7;13509:6;13498:9;13494:22;13473:53;:::i;:::-;13463:63;;13417:119;13575:3;13602:53;13647:7;13638:6;13627:9;13623:22;13602:53;:::i;:::-;13592:63;;13546:119;12473:1199;;;;;;;;;;:::o;13678:474::-;13746:6;13754;13803:2;13791:9;13782:7;13778:23;13774:32;13771:119;;;13809:79;;:::i;:::-;13771:119;13929:1;13954:53;13999:7;13990:6;13979:9;13975:22;13954:53;:::i;:::-;13944:63;;13900:117;14056:2;14082:53;14127:7;14118:6;14107:9;14103:22;14082:53;:::i;:::-;14072:63;;14027:118;13678:474;;;;;:::o;14158:180::-;14206:77;14203:1;14196:88;14303:4;14300:1;14293:15;14327:4;14324:1;14317:15;14344:320;14388:6;14425:1;14419:4;14415:12;14405:22;;14472:1;14466:4;14462:12;14493:18;14483:81;;14549:4;14541:6;14537:17;14527:27;;14483:81;14611:2;14603:6;14600:14;14580:18;14577:38;14574:84;;14630:18;;:::i;:::-;14574:84;14395:269;14344:320;;;:::o;14670:168::-;14753:11;14787:6;14782:3;14775:19;14827:4;14822:3;14818:14;14803:29;;14670:168;;;;:::o;14844:146::-;14941:6;14936:3;14931;14918:30;14982:1;14973:6;14968:3;14964:16;14957:27;14844:146;;;:::o;15018:314::-;15114:3;15135:70;15198:6;15193:3;15135:70;:::i;:::-;15128:77;;15215:56;15264:6;15259:3;15252:5;15215:56;:::i;:::-;15296:29;15318:6;15296:29;:::i;:::-;15291:3;15287:39;15280:46;;15018:314;;;;;:::o;15338:771::-;15571:4;15609:3;15598:9;15594:19;15586:27;;15623:71;15691:1;15680:9;15676:17;15667:6;15623:71;:::i;:::-;15704:72;15772:2;15761:9;15757:18;15748:6;15704:72;:::i;:::-;15786;15854:2;15843:9;15839:18;15830:6;15786:72;:::i;:::-;15868;15936:2;15925:9;15921:18;15912:6;15868:72;:::i;:::-;15988:9;15982:4;15978:20;15972:3;15961:9;15957:19;15950:49;16016:86;16097:4;16088:6;16080;16016:86;:::i;:::-;16008:94;;15338:771;;;;;;;;;:::o;16115:143::-;16172:5;16203:6;16197:13;16188:22;;16219:33;16246:5;16219:33;:::i;:::-;16115:143;;;;:::o;16264:351::-;16334:6;16383:2;16371:9;16362:7;16358:23;16354:32;16351:119;;;16389:79;;:::i;:::-;16351:119;16509:1;16534:64;16590:7;16581:6;16570:9;16566:22;16534:64;:::i;:::-;16524:74;;16480:128;16264:351;;;;:::o;16621:180::-;16669:77;16666:1;16659:88;16766:4;16763:1;16756:15;16790:4;16787:1;16780:15;16807:191;16847:3;16866:20;16884:1;16866:20;:::i;:::-;16861:25;;16900:20;16918:1;16900:20;:::i;:::-;16895:25;;16943:1;16940;16936:9;16929:16;;16964:3;16961:1;16958:10;16955:36;;;16971:18;;:::i;:::-;16955:36;16807:191;;;;:::o;17004:194::-;17044:4;17064:20;17082:1;17064:20;:::i;:::-;17059:25;;17098:20;17116:1;17098:20;:::i;:::-;17093:25;;17142:1;17139;17135:9;17127:17;;17166:1;17160:4;17157:11;17154:37;;;17171:18;;:::i;:::-;17154:37;17004:194;;;;:::o;17204:171::-;17344:23;17340:1;17332:6;17328:14;17321:47;17204:171;:::o;17381:366::-;17523:3;17544:67;17608:2;17603:3;17544:67;:::i;:::-;17537:74;;17620:93;17709:3;17620:93;:::i;:::-;17738:2;17733:3;17729:12;17722:19;;17381:366;;;:::o;17753:419::-;17919:4;17957:2;17946:9;17942:18;17934:26;;18006:9;18000:4;17996:20;17992:1;17981:9;17977:17;17970:47;18034:131;18160:4;18034:131;:::i;:::-;18026:139;;17753:419;;;:::o;18178:180::-;18226:77;18223:1;18216:88;18323:4;18320:1;18313:15;18347:4;18344:1;18337:15;18364:85;18409:7;18438:5;18427:16;;18364:85;;;:::o;18455:101::-;18491:7;18531:18;18524:5;18520:30;18509:41;;18455:101;;;:::o;18562:60::-;18590:3;18611:5;18604:12;;18562:60;;;:::o;18628:156::-;18685:9;18718:60;18735:42;18744:32;18770:5;18744:32;:::i;:::-;18735:42;:::i;:::-;18718:60;:::i;:::-;18705:73;;18628:156;;;:::o;18790:145::-;18884:44;18922:5;18884:44;:::i;:::-;18879:3;18872:57;18790:145;;:::o;18941:236::-;19041:4;19079:2;19068:9;19064:18;19056:26;;19092:78;19167:1;19156:9;19152:17;19143:6;19092:78;:::i;:::-;18941:236;;;;:::o;19183:775::-;19416:4;19454:3;19443:9;19439:19;19431:27;;19468:71;19536:1;19525:9;19521:17;19512:6;19468:71;:::i;:::-;19549:72;19617:2;19606:9;19602:18;19593:6;19549:72;:::i;:::-;19631;19699:2;19688:9;19684:18;19675:6;19631:72;:::i;:::-;19713;19781:2;19770:9;19766:18;19757:6;19713:72;:::i;:::-;19795:73;19863:3;19852:9;19848:19;19839:6;19795:73;:::i;:::-;19878;19946:3;19935:9;19931:19;19922:6;19878:73;:::i;:::-;19183:775;;;;;;;;;:::o;19964:332::-;20085:4;20123:2;20112:9;20108:18;20100:26;;20136:71;20204:1;20193:9;20189:17;20180:6;20136:71;:::i;:::-;20217:72;20285:2;20274:9;20270:18;20261:6;20217:72;:::i;:::-;19964:332;;;;;:::o;20302:442::-;20451:4;20489:2;20478:9;20474:18;20466:26;;20502:71;20570:1;20559:9;20555:17;20546:6;20502:71;:::i;:::-;20583:72;20651:2;20640:9;20636:18;20627:6;20583:72;:::i;:::-;20665;20733:2;20722:9;20718:18;20709:6;20665:72;:::i;:::-;20302:442;;;;;;:::o;20750:664::-;20955:4;20993:3;20982:9;20978:19;20970:27;;21007:71;21075:1;21064:9;21060:17;21051:6;21007:71;:::i;:::-;21088:72;21156:2;21145:9;21141:18;21132:6;21088:72;:::i;:::-;21170;21238:2;21227:9;21223:18;21214:6;21170:72;:::i;:::-;21252;21320:2;21309:9;21305:18;21296:6;21252:72;:::i;:::-;21334:73;21402:3;21391:9;21387:19;21378:6;21334:73;:::i;:::-;20750:664;;;;;;;;:::o;21420:141::-;21469:4;21492:3;21484:11;;21515:3;21512:1;21505:14;21549:4;21546:1;21536:18;21528:26;;21420:141;;;:::o;21567:93::-;21604:6;21651:2;21646;21639:5;21635:14;21631:23;21621:33;;21567:93;;;:::o;21666:107::-;21710:8;21760:5;21754:4;21750:16;21729:37;;21666:107;;;;:::o;21779:393::-;21848:6;21898:1;21886:10;21882:18;21921:97;21951:66;21940:9;21921:97;:::i;:::-;22039:39;22069:8;22058:9;22039:39;:::i;:::-;22027:51;;22111:4;22107:9;22100:5;22096:21;22087:30;;22160:4;22150:8;22146:19;22139:5;22136:30;22126:40;;21855:317;;21779:393;;;;;:::o;22178:142::-;22228:9;22261:53;22279:34;22288:24;22306:5;22288:24;:::i;:::-;22279:34;:::i;:::-;22261:53;:::i;:::-;22248:66;;22178:142;;;:::o;22326:75::-;22369:3;22390:5;22383:12;;22326:75;;;:::o;22407:269::-;22517:39;22548:7;22517:39;:::i;:::-;22578:91;22627:41;22651:16;22627:41;:::i;:::-;22619:6;22612:4;22606:11;22578:91;:::i;:::-;22572:4;22565:105;22483:193;22407:269;;;:::o;22682:73::-;22727:3;22682:73;:::o;22761:189::-;22838:32;;:::i;:::-;22879:65;22937:6;22929;22923:4;22879:65;:::i;:::-;22814:136;22761:189;;:::o;22956:186::-;23016:120;23033:3;23026:5;23023:14;23016:120;;;23087:39;23124:1;23117:5;23087:39;:::i;:::-;23060:1;23053:5;23049:13;23040:22;;23016:120;;;22956:186;;:::o;23148:543::-;23249:2;23244:3;23241:11;23238:446;;;23283:38;23315:5;23283:38;:::i;:::-;23367:29;23385:10;23367:29;:::i;:::-;23357:8;23353:44;23550:2;23538:10;23535:18;23532:49;;;23571:8;23556:23;;23532:49;23594:80;23650:22;23668:3;23650:22;:::i;:::-;23640:8;23636:37;23623:11;23594:80;:::i;:::-;23253:431;;23238:446;23148:543;;;:::o;23697:117::-;23751:8;23801:5;23795:4;23791:16;23770:37;;23697:117;;;;:::o;23820:169::-;23864:6;23897:51;23945:1;23941:6;23933:5;23930:1;23926:13;23897:51;:::i;:::-;23893:56;23978:4;23972;23968:15;23958:25;;23871:118;23820:169;;;;:::o;23994:295::-;24070:4;24216:29;24241:3;24235:4;24216:29;:::i;:::-;24208:37;;24278:3;24275:1;24271:11;24265:4;24262:21;24254:29;;23994:295;;;;:::o;24294:1395::-;24411:37;24444:3;24411:37;:::i;:::-;24513:18;24505:6;24502:30;24499:56;;;24535:18;;:::i;:::-;24499:56;24579:38;24611:4;24605:11;24579:38;:::i;:::-;24664:67;24724:6;24716;24710:4;24664:67;:::i;:::-;24758:1;24782:4;24769:17;;24814:2;24806:6;24803:14;24831:1;24826:618;;;;25488:1;25505:6;25502:77;;;25554:9;25549:3;25545:19;25539:26;25530:35;;25502:77;25605:67;25665:6;25658:5;25605:67;:::i;:::-;25599:4;25592:81;25461:222;24796:887;;24826:618;24878:4;24874:9;24866:6;24862:22;24912:37;24944:4;24912:37;:::i;:::-;24971:1;24985:208;24999:7;24996:1;24993:14;24985:208;;;25078:9;25073:3;25069:19;25063:26;25055:6;25048:42;25129:1;25121:6;25117:14;25107:24;;25176:2;25165:9;25161:18;25148:31;;25022:4;25019:1;25015:12;25010:17;;24985:208;;;25221:6;25212:7;25209:19;25206:179;;;25279:9;25274:3;25270:19;25264:26;25322:48;25364:4;25356:6;25352:17;25341:9;25322:48;:::i;:::-;25314:6;25307:64;25229:156;25206:179;25431:1;25427;25419:6;25415:14;25411:22;25405:4;25398:36;24833:611;;;24796:887;;24386:1303;;;24294:1395;;:::o;25695:545::-;25868:4;25906:3;25895:9;25891:19;25883:27;;25920:71;25988:1;25977:9;25973:17;25964:6;25920:71;:::i;:::-;26001:68;26065:2;26054:9;26050:18;26041:6;26001:68;:::i;:::-;26079:72;26147:2;26136:9;26132:18;26123:6;26079:72;:::i;:::-;26161;26229:2;26218:9;26214:18;26205:6;26161:72;:::i;:::-;25695:545;;;;;;;:::o;26246:180::-;26294:77;26291:1;26284:88;26391:4;26388:1;26381:15;26415:4;26412:1;26405:15"},"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","burn(uint256)":"42966c68","burnFrom(address,uint256)":"79cc6790","decimals()":"313ce567","eip712Domain()":"84b0196e","flashFee(address,uint256)":"d9d98ce4","flashLoan(address,address,uint256,bytes)":"5cffe9de","initialize(address)":"c4d66de8","maxFlashLoan(address)":"613255ab","mint(address,uint256)":"40c10f19","name()":"06fdde03","nonces(address)":"7ecebe00","owner()":"8da5cb5b","pause()":"8456cb59","paused()":"5c975abb","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf","renounceOwnership()":"715018a6","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd","transferOwnership(address)":"f2fde38b","unpause()":"3f4ba83a"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"ERC2612ExpiredSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC2612InvalidSigner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"maxLoan\",\"type\":\"uint256\"}],\"name\":\"ERC3156ExceededMaxLoan\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC3156InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"ERC3156UnsupportedToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentNonce\",\"type\":\"uint256\"}],\"name\":\"InvalidAccountNonce\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"flashFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC3156FlashBorrower\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"flashLoan\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"maxFlashLoan\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}],\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC2612ExpiredSignature(uint256)\":[{\"details\":\"Permit deadline has expired.\"}],\"ERC2612InvalidSigner(address,address)\":[{\"details\":\"Mismatched signature.\"}],\"ERC3156ExceededMaxLoan(uint256)\":[{\"details\":\"The requested loan exceeds the max loan value for `token`.\"}],\"ERC3156InvalidReceiver(address)\":[{\"details\":\"The receiver of a flashloan is not a valid {onFlashLoan} implementer.\"}],\"ERC3156UnsupportedToken(address)\":[{\"details\":\"The loan token is not valid.\"}],\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}],\"InvalidAccountNonce(address,uint256)\":[{\"details\":\"The nonce used for an `account` is not the expected current nonce.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"},\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`.\"},\"constructor\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"eip712Domain()\":{\"details\":\"See {IERC-5267}.\"},\"flashFee(address,uint256)\":{\"details\":\"Returns the fee applied when doing flash loans. This function calls the {_flashFee} function which returns the fee applied when doing flash loans.\",\"params\":{\"token\":\"The token to be flash loaned.\",\"value\":\"The amount of tokens to be loaned.\"},\"returns\":{\"_0\":\"The fees applied to the corresponding flash loan.\"}},\"flashLoan(address,address,uint256,bytes)\":{\"details\":\"Performs a flash loan. New tokens are minted and sent to the `receiver`, who is required to implement the {IERC3156FlashBorrower} interface. By the end of the flash loan, the receiver is expected to own value + fee tokens and have them approved back to the token contract itself so they can be burned.\",\"params\":{\"data\":\"An arbitrary datafield that is passed to the receiver.\",\"receiver\":\"The receiver of the flash loan. Should implement the {IERC3156FlashBorrower-onFlashLoan} interface.\",\"token\":\"The token to be flash loaned. Only `address(this)` is supported.\",\"value\":\"The amount of tokens to be loaned.\"},\"returns\":{\"_0\":\"`true` if the flash loan was successful.\"}},\"maxFlashLoan(address)\":{\"details\":\"Returns the maximum amount of tokens available for loan.\",\"params\":{\"token\":\"The address of the token that is requested.\"},\"returns\":{\"_0\":\"The amount of token that can be loaned. NOTE: This function does not consider any form of supply cap, so in case it's used in a token with a cap like {ERC20Capped}, make sure to override this function to integrate the cap instead of `type(uint256).max`.\"}},\"name()\":{\"details\":\"Returns the name of the token.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MoCoKoV1.sol\":\"MoCoKoV1\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9706d43a0124053d9880f6e31a59f31bc0a6a3dc1acd66ce0a16e1111658c5f6\",\"dweb:/ipfs/QmUFmfowzkRwGtDu36cXV9SPTBHJ3n7dG9xQiK5B28jTf2\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":{\"keccak256\":\"0x9a1766b1921bf91b3e61eb53c7a6e70725254befd4bdcbbcd3af40bd9f66856f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://29bf2fa41a172086a665c9738377b93655aa4b1ffda9fe839c8bdf646f185040\",\"dweb:/ipfs/QmeB21qDuo8WPQSrqXJbQmWHKsdeocGNSUWLhCwniVejrt\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol\":{\"keccak256\":\"0xe74dd150d031e8ecf9755893a2aae02dec954158140424f11c28ff689a48492f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://554e0934aecff6725e10d4aeb2e70ff214384b68782b1ba9f9322a0d16105a2f\",\"dweb:/ipfs/QmVvmHc7xPftEkWvJRNAqv7mXihKLEAVXpiebG7RT5rhMW\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20FlashMintUpgradeable.sol\":{\"keccak256\":\"0x5419ce583668d1ab6a0833923c0f4c3eed93e87edbeca4f833c35bd5b53163bd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c9a241f708d229ac116533a18d8a49b38276a5c96ccda661fbda63e93d5ad23\",\"dweb:/ipfs/QmQBwhTKBfWSR5gxG8LJS4YbfJtUz9e9yQXsLsCkQD8vr9\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PausableUpgradeable.sol\":{\"keccak256\":\"0xf31761e4cd0b20c33a04e8cfa21d3b40f0a18dd26f66f97686f87668ab5ba8f3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8be0ae676c129bb8ee94e32f075f5d017b257c09e02f3ed6c830ec5b9ca6e666\",\"dweb:/ipfs/QmeaPYo4t3XaAK8bbxkjTT3bTKQZHUXVadjysSfz5cuUbX\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PermitUpgradeable.sol\":{\"keccak256\":\"0x8a97653aeba40e9f0c2e8df1a1379b29b927b6dc3534040c668e71ad9ae89d88\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e529c294c9d634eb68a1e4aeb66eb8381de5a08ccd2c0bfeebd48a6b28fcff7\",\"dweb:/ipfs/QmWCezuxfZb68nM3Hs6XzQNNiW7VJsymU4sajy2DW1CKbp\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"@openzeppelin/contracts-upgradeable/utils/NoncesUpgradeable.sol\":{\"keccak256\":\"0x778f4a1546a1c6c726ecc8e2348a2789690fb8f26e12bd9d89537669167b79a4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://851d3dfe724e918ff0a064b206e1ef46b27ab0df2aa2c8af976973a22ef59827\",\"dweb:/ipfs/Qmd4wb7zX8ueYhMVBy5PJjfsANK3Ra3pKPN7qQkNsdwGHn\"]},\"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":{\"keccak256\":\"0x92915b7f7f642c6be3f65bfd1522feb5d5b6ef25f755f4dbb51df32c868f2f97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://85ad36d5cc7e190e1ee6c94b24659bc3a31396c4c36b6ffa6a509e10661f8007\",\"dweb:/ipfs/QmPFyc4zMh2zo6YWZt25gjm3YdR2hg6wGETaWw256fMmJJ\"]},\"@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol\":{\"keccak256\":\"0x85462422a22578744581e012e9aa0a391958cb360288b0b63f29bf0431d70327\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2bc529e2b9b28da5d26da451058250d85afcaa3c5083ee273ac68fa6bf956b78\",\"dweb:/ipfs/Qmd3Aq59ztmoVmHigsaR4YjkXWKERVpjfQ4a2PHk7Ke6Rx\"]},\"@openzeppelin/contracts/interfaces/IERC3156FlashBorrower.sol\":{\"keccak256\":\"0x9f9e6dba43fe0775c400aa384375f1f503efaf733a40187169fdfc195f5ea6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ff5fe5fac5e4ecbf9fcd34c42b6d58d1af150263dfe07bc6785a59329dd1e475\",\"dweb:/ipfs/QmX1EhNKKL6n6RFrLLAYh6Uf3itkozjSHyGFs9DqwW4Rzy\"]},\"@openzeppelin/contracts/interfaces/IERC3156FlashLender.sol\":{\"keccak256\":\"0x95d9eb59f21e885406d0e28b0510f9e1a0e7b4abe6636b5c966682927c65cfdd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a1cbff4d620ab51abe0c4ede9e4395bae53bcc3a7edd74e0eb08d7bdef155306\",\"dweb:/ipfs/QmQcnBK28GDH4S5uXWqAcdRY1KcusXH4CxAqp87rYLir6n\"]},\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xeed0a08b0b091f528356cbc7245891a4c748682d4f6a18055e8e6ca77d12a6cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba80ba06c8e6be852847e4c5f4492cef801feb6558ae09ed705ff2e04ea8b13c\",\"dweb:/ipfs/QmXRJDv3xHLVQCVXg1ZvR35QS9sij5y9NDWYzMfUfAdTHF\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0xba333517a3add42cd35fe877656fc3dfcc9de53baa4f3aabbd6d12a92e4ea435\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ceacff44c0fdc81e48e0e0b1db87a2076d3c1fb497341de077bf1da9f6b406c\",\"dweb:/ipfs/QmRUo1muMRAewxrKQ7TkXUtknyRoR57AyEkoPpiuZQ8FzX\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]},\"contracts/MoCoKoV1.sol\":{\"keccak256\":\"0x18e1abbbcb0b671c56c70f065bd2937377f0daf92fe594217088512bb706f937\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8a87528eaf37a4ccd09b9259eb07082de884b42a35f1c3cff9f06a1a8f55fa82\",\"dweb:/ipfs/QmWgPWWMc9A67pLnvATRFGkHbJWk4AitfT6ZUV3znvoAEU\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}}}}}